var n={};!function(n){function e(n,e,t){return t.a=n,t.f=e,t}function t(n){return e(2,n,function(e){return function(t){return n(e,t)}})}function r(n){return e(3,n,function(e){return function(t){return function(r){return n(e,t,r)}}})}function o(n){return e(4,n,function(e){return function(t){return function(r){return function(o){return n(e,t,r,o)}}}})}function a(n){return e(5,n,function(e){return function(t){return function(r){return function(o){return function(a){return n(e,t,r,o,a)}}}}})}function i(n){return e(6,n,function(e){return function(t){return function(r){return function(o){return function(a){return function(i){return n(e,t,r,o,a,i)}}}}}})}function c(n){return e(7,n,function(e){return function(t){return function(r){return function(o){return function(a){return function(i){return function(c){return n(e,t,r,o,a,i,c)}}}}}}})}function u(n){return e(8,n,function(e){return function(t){return function(r){return function(o){return function(a){return function(i){return function(c){return function(u){return n(e,t,r,o,a,i,c,u)}}}}}}}})}function l(n,e,t){return 2===n.a?n.f(e,t):n(e)(t)}function f(n,e,t,r){return 3===n.a?n.f(e,t,r):n(e)(t)(r)}function s(n,e,t,r,o){return 4===n.a?n.f(e,t,r,o):n(e)(t)(r)(o)}function d(n,e,t,r,o,a){return 5===n.a?n.f(e,t,r,o,a):n(e)(t)(r)(o)(a)}function p(n,e,t,r,o,a,i){return 6===n.a?n.f(e,t,r,o,a,i):n(e)(t)(r)(o)(a)(i)}function m(n,e,t,r,o,a,i,c){return 7===n.a?n.f(e,t,r,o,a,i,c):n(e)(t)(r)(o)(a)(i)(c)}function v(n,e){for(var t,r=[],o=g(n,e,0,r);o&&(t=r.pop());o=g(t.a,t.b,0,r));return o}function g(n,e,t,r){if(n===e)return!0;if("object"!=typeof n||null===n||null===e)return"function"==typeof n&&D(5),!1;if(t>100)return r.push(x(n,e)),!0;for(var o in 0>n.$&&(n=e6(n),e=e6(e)),n)if(!g(n[o],e[o],t+1,r))return!1;return!0}function h(n,e,t){if("object"!=typeof n)return n===e?0:e>n?-1:1;if(void 0===n.$)return(t=h(n.a,e.a))||(t=h(n.b,e.b))?t:h(n.c,e.c);for(;n.b&&e.b&&!(t=h(n.a,e.a));n=n.b,e=e.b);return t||(n.b?1:e.b?-1:0)}var b=t(function(n,e){var t=h(n,e);return 0>t?e4:t?e5:e2});function x(n,e){return{a:n,b:e}}function y(n,e,t){return{a:n,b:e,c:t}}function w(n,e){var t={};for(var r in n)t[r]=n[r];for(var r in e)t[r]=e[r];return t}function P(n,e){if("string"==typeof n)return n+e;if(!n.b)return e;var t=T(n.a,e);n=n.b;for(var r=t;n.b;n=n.b)r=r.b=T(n.a,e);return t}var C={$:0};function T(n,e){return{$:1,a:n,b:e}}var L=t(T);function M(n){for(var e=C,t=n.length;t--;)e=T(n[t],e);return e}function F(n){for(var e=[];n.b;n=n.b)e.push(n.a);return e}var $=r(function(n,e,t){for(var r=[];e.b&&t.b;e=e.b,t=t.b)r.push(l(n,e.a,t.a));return M(r)}),z=r(function(n,e,t){for(var r=Array(n),o=0;n>o;o++)r[o]=t(e+o);return r}),S=t(function(n,e){for(var t=Array(n),r=0;n>r&&e.b;r++)t[r]=e.a,e=e.b;return t.length=r,x(t,e)});function D(n){throw Error("https://github.com/elm/core/blob/1.0.0/hints/"+n+".md")}var N=t(function(n,e){return n+e}),k=t(Math.pow),V=t(function(n,e){var t=e%n;return 0===n?D(11):t>0&&0>n||0>t&&n>0?t+n:t}),A=Math.PI,_=Math.cos,B=Math.sin,E=Math.tan,j=Math.asin,q=Math.ceil,I=Math.floor,R=Math.round,H=Math.sqrt,O=Math.log,W=r(function(n,e,t){for(var r=t.length;r--;){var o=t[r],a=t.charCodeAt(r);56320>a||a>57343||(o=t[--r]+o),e=l(n,o,e)}return e}),U=t(function(n,e){return e.split(n)}),G=t(function(n,e){return e.join(n)}),Y=r(function(n,e,t){return t.slice(n,e)}),Q=t(function(n,e){return e.indexOf(n)>-1}),X=t(function(n,e){return 0===e.indexOf(n)}),J=t(function(n,e){var t=n.length;if(1>t)return C;for(var r=0,o=[];(r=e.indexOf(n,r))>-1;)o.push(r),r+=t;return M(o)});function Z(n){return n+""}function K(n){return{$:2,b:n}}var nn=K(function(n){return"number"!=typeof n?nm("an INT",n):n>-2147483647&&2147483647>n&&(0|n)===n?tt(n):!isFinite(n)||n%1?nm("an INT",n):tt(n)}),ne=(K(function(n){return"boolean"==typeof n?tt(n):nm("a BOOL",n)}),K(function(n){return"number"==typeof n?tt(n):nm("a FLOAT",n)})),nt=(K(function(n){return tt(n)}),K(function(n){return"string"==typeof n?tt(n):n instanceof String?tt(n+""):nm("a STRING",n)})),nr=t(function(n,e){return{$:6,d:n,b:e}});function no(n,e){return{$:9,f:n,g:e}}var na=t(function(n,e){return{$:10,b:e,h:n}}),ni=t(function(n,e){return no(n,[e])}),nc=r(function(n,e,t){return no(n,[e,t])}),nu=a(function(n,e,t,r,o){return no(n,[e,t,r,o])}),nl=t(function(n,e){return nf(n,e)});function nf(n,e){switch(n.$){case 2:return n.b(e);case 5:return null===e?tt(n.c):nm("null",e);case 3:return nd(e)?ns(n.b,e,M):nm("a LIST",e);case 4:return nd(e)?ns(n.b,e,np):nm("an ARRAY",e);case 6:var t=n.d;if("object"!=typeof e||null===e||!(t in e))return nm("an OBJECT with a field named `"+t+"`",e);var r=nf(n.b,e[t]);return tz(r)?r:e7(l(tn,t,r.a));case 7:var o=n.e;return nd(e)?e.length>o?tz(r=nf(n.b,e[o]))?r:e7(l(te,o,r.a)):nm("a LONGER array. Need index "+o+" but only see "+e.length+" entries",e):nm("an ARRAY",e);case 8:if("object"!=typeof e||null===e||nd(e))return nm("an OBJECT",e);var a=C;for(var i in e)if(e.hasOwnProperty(i)){if(!tz(r=nf(n.b,e[i])))return e7(l(tn,i,r.a));a=T(x(i,r.a),a)}return tt(tp(a));case 9:for(var c=n.f,u=n.g,f=0;u.length>f;f++){if(!tz(r=nf(u[f],e)))return r;c=c(r.a)}return tt(c);case 10:return tz(r=nf(n.b,e))?nf(n.h(r.a),e):r;case 11:for(var s=C,d=n.g;d.b;d=d.b){if(tz(r=nf(d.a,e)))return r;s=T(r.a,s)}return e7(tr(tp(s)));case 1:return e7(l(e8,n.a,e));case 0:return tt(n.a)}}function ns(n,e,t){for(var r=e.length,o=Array(r),a=0;r>a;a++){var i=nf(n,e[a]);if(!tz(i))return e7(l(te,a,i.a));o[a]=i.a}return tt(t(o))}function nd(n){return Array.isArray(n)||"undefined"!=typeof FileList&&n instanceof FileList}function np(n){return l(t$,n.length,function(e){return n[e]})}function nm(n,e){return e7(l(e8,"Expecting "+n,e))}function nv(n,e){if(n===e)return!0;if(n.$!==e.$)return!1;switch(n.$){case 0:case 1:return n.a===e.a;case 2:return n.b===e.b;case 5:return n.c===e.c;case 3:case 4:case 8:return nv(n.b,e.b);case 6:return n.d===e.d&&nv(n.b,e.b);case 7:return n.e===e.e&&nv(n.b,e.b);case 9:return n.f===e.f&&ng(n.g,e.g);case 10:return n.h===e.h&&nv(n.b,e.b);case 11:return ng(n.g,e.g)}}function ng(n,e){var t=n.length;if(t!==e.length)return!1;for(var r=0;t>r;r++)if(!nv(n[r],e[r]))return!1;return!0}function nh(n){return n}var nb=r(function(n,e,t){return t[n]=e,t});function nx(n){return{$:0,a:n}}function ny(n){return{$:2,b:n,c:null}}var nw=t(function(n,e){return{$:3,b:n,d:e}}),nP=t(function(n,e){return{$:4,b:n,d:e}}),nC=0;function nT(n){var e={$:0,e:nC++,f:n,g:null,h:[]};return nS(e),e}function nL(n){return ny(function(e){e(nx(nT(n)))})}function nM(n,e){n.h.push(e),nS(n)}var nF=t(function(n,e){return ny(function(t){nM(n,e),t(nx(0))})}),n$=!1,nz=[];function nS(n){if(nz.push(n),!n$){for(n$=!0;n=nz.shift();)(function(n){for(;n.f;){var e=n.f.$;if(0===e||1===e){for(;n.g&&n.g.$!==e;)n.g=n.g.i;if(!n.g)return;n.f=n.g.b(n.f.a),n.g=n.g.i}else{if(2===e)return void(n.f.c=n.f.b(function(e){n.f=e,nS(n)}));if(5===e){if(0===n.h.length)return;n.f=n.f.b(n.h.shift())}else n.g={$:3===e?0:1,b:n.f.b,i:n.g},n.f=n.f.d}}})(n);n$=!1}}var nD={};function nN(n,e,t,r,o){return{b:n,c:e,d:t,e:r,f:o}}var nk=t(function(n,e){return ny(function(t){n.g(e),t(nx(0))})}),nV=t(function(n,e){return l(nF,n.h,{$:0,a:e})});function nA(n){return function(e){return{$:1,k:n,l:e}}}function n_(n){return{$:2,m:n}}var nB=t(function(n,e){return{$:3,n:n,o:e}}),nE=[],nj=!1;function nq(n,e,t){if(nE.push({p:n,q:e,r:t}),!nj){nj=!0;for(var r;r=nE.shift();)(function(n,e,t){var r={};for(var o in nI(!0,e,r,null),nI(!1,t,r,null),n)nM(n[o],{$:"fx",a:r[o]||{i:C,j:C}})})(r.p,r.q,r.r);nj=!1}}function nI(n,e,t,r){switch(e.$){case 1:var o,a,i=e.k,c=(o=e.l,l(n?nD[i].e:nD[i].f,function(n){for(var e=r;e;e=e.t)n=e.s(n);return n},o));return void(t[i]=(a=(a=t[i])||{i:C,j:C},n?a.i=T(c,a.i):a.j=T(c,a.j),a));case 2:for(var u=e.m;u.b;u=u.b)nI(n,u.a,t,r);return;case 3:return void nI(n,e.o,t,{s:e.n,t:r})}}var nR,nH=t(function(n,e){return e}),nO="undefined"!=typeof document?document:{};function nW(n,e){n.appendChild(e)}function nU(n){return{$:0,a:n}}var nG,nY=t(function(n,e){return t(function(t,r){for(var o=[],a=0;r.b;r=r.b){var i=r.a;a+=i.b||0,o.push(i)}return a+=o.length,{$:1,c:e,d:n7(t),e:o,f:n,b:a}})}),nQ=nY(void 0),nX=t(function(n,e){return t(function(t,r){for(var o=[],a=0;r.b;r=r.b){var i=r.a;a+=i.b.b||0,o.push(i)}return a+=o.length,{$:2,c:e,d:n7(t),e:o,f:n,b:a}})})(void 0),nJ=t(function(n,e){return{$:4,j:n,k:e,b:1+(e.b||0)}}),nZ=t(function(n,e){return{$:"a0",n:n,o:e}}),nK=t(function(n,e){return{$:"a1",n:n,o:e}}),n0=t(function(n,e){return{$:"a2",n:n,o:e}}),n1=t(function(n,e){return{$:"a3",n:n,o:e}}),n3=/^script$/i,n2=/^(on|formAction$)/i,n5=/^\s*j\s*a\s*v\s*a\s*s\s*c\s*r\s*i\s*p\s*t\s*:/i,n4=/^\s*(j\s*a\s*v\s*a\s*s\s*c\s*r\s*i\s*p\s*t\s*:|d\s*a\s*t\s*a\s*:\s*t\s*e\s*x\s*t\s*\/\s*h\s*t\s*m\s*l\s*(,|;))/i;function n9(n){return n3.test(n)?"p":n}function n6(n){return n4.test(n)?"":n}function n7(n){for(var e={};n.b;n=n.b){var t=n.a,r=t.$,o=t.n,a=t.o;if("a2"!==r){var i=e[r]||(e[r]={});"a3"===r&&"class"===o?n8(i,o,a):i[o]=a}else"className"===o?n8(e,o,a):e[o]=a}return e}function n8(n,e,t){var r=n[e];n[e]=r?r+" "+t:t}function en(n,e){var t=n.$;if(5===t)return en(n.k||(n.k=n.m()),e);if(0===t)return nO.createTextNode(n.a);if(4===t){for(var r=n.k,o=n.j;4===r.$;)"object"!=typeof o?o=[o,r.j]:o.push(r.j),r=r.k;var a={j:o,p:e};return(i=en(r,a)).elm_event_node_ref=a,i}if(3===t)return ee(i=n.h(n.g),e,n.d),i;var i=n.f?nO.createElementNS(n.f,n.c):nO.createElement(n.c);nR&&"a"==n.c&&i.addEventListener("click",nR(i)),ee(i,e,n.d);for(var c=n.e,u=0;c.length>u;u++)nW(i,en(1===t?c[u]:c[u].b,e));return i}function ee(n,e,t){for(var r in t){var o=t[r];"a1"===r?function(n,e){var t=n.style;for(var r in e)t[r]=e[r]}(n,o):"a0"===r?function(n,e,t){var r=n.elmFs||(n.elmFs={});for(var o in t){var a=t[o],i=r[o];if(a){if(i){if(i.q.$===a.$){i.q=a;continue}n.removeEventListener(o,i)}i=function(n,e){function t(e){var r=t.q,o=nf(r.a,e);if(tz(o)){for(var a,i=tD(r),c=o.a,u=i?3>i?c.a:c.aR:c,l=1==i?c.b:3==i&&c.d8,f=(l&&e.stopPropagation(),(2==i?c.b:3==i&&c.d_)&&e.preventDefault(),n);a=f.j;){if("function"==typeof a)u=a(u);else for(var s=a.length;s--;)u=a[s](u);f=f.p}f(u,l)}}return t.q=e,t}(e,a),n.addEventListener(o,i,nG&&{passive:2>tD(a)}),r[o]=i}else n.removeEventListener(o,i),r[o]=void 0}}(n,e,o):"a3"===r?function(n,e){for(var t in e){var r=e[t];void 0!==r?n.setAttribute(t,r):n.removeAttribute(t)}}(n,o):"a4"===r?function(n,e){for(var t in e){var r=e[t],o=r.f,a=r.o;void 0!==a?n.setAttributeNS(o,t,a):n.removeAttributeNS(o,t)}}(n,o):("value"!==r&&"checked"!==r||n[r]!==o)&&(n[r]=o)}}try{window.addEventListener("t",null,Object.defineProperty({},"passive",{get:function(){nG=!0}}))}catch(n){}function et(n,e,t,r){var o={$:e,r:t,s:r,t:void 0,u:void 0};return n.push(o),o}function er(n,e,t,r){if(n!==e){var o=n.$,a=e.$;if(o!==a){if(1!==o||2!==a)return void et(t,0,r,e);e=function(n){for(var e=n.e,t=e.length,r=Array(t),o=0;t>o;o++)r[o]=e[o].b;return{$:1,c:n.c,d:n.d,e:r,f:n.f,b:n.b}}(e),a=1}switch(a){case 5:for(var i=n.l,c=e.l,u=i.length,l=u===c.length;l&&u--;)l=i[u]===c[u];if(l)return void(e.k=n.k);e.k=e.m();var f=[];return er(n.k,e.k,f,0),void(f.length>0&&et(t,1,r,f));case 4:for(var s=n.j,d=e.j,p=!1,m=n.k;4===m.$;)p=!0,"object"!=typeof s?s=[s,m.j]:s.push(m.j),m=m.k;for(var v=e.k;4===v.$;)p=!0,"object"!=typeof d?d=[d,v.j]:d.push(v.j),v=v.k;return p&&s.length!==d.length?void et(t,0,r,e):((p?function(n,e){for(var t=0;n.length>t;t++)if(n[t]!==e[t])return!1;return!0}(s,d):s===d)||et(t,2,r,d),void er(m,v,t,r+1));case 0:return void(n.a!==e.a&&et(t,3,r,e.a));case 1:return void eo(n,e,t,r,ei);case 2:return void eo(n,e,t,r,ec);case 3:if(n.h!==e.h)return void et(t,0,r,e);var g=ea(n.d,e.d);g&&et(t,4,r,g);var h=e.i(n.g,e.g);return void(h&&et(t,5,r,h))}}}function eo(n,e,t,r,o){if(n.c===e.c&&n.f===e.f){var a=ea(n.d,e.d);a&&et(t,4,r,a),o(n,e,t,r)}else et(t,0,r,e)}function ea(n,e,t){var r;for(var o in n)if("a1"!==o&&"a0"!==o&&"a3"!==o&&"a4"!==o){if(o in e){var a=n[o],i=e[o];a===i&&"value"!==o&&"checked"!==o||"a0"===t&&a.$==i.$&&nv(a.a,i.a)||((r=r||{})[o]=i)}else(r=r||{})[o]=t?"a1"===t?"":"a0"===t||"a3"===t?void 0:{f:n[o].f,o:void 0}:"string"==typeof n[o]?"":null}else{var c=ea(n[o],e[o]||{},o);c&&((r=r||{})[o]=c)}for(var u in e)u in n||((r=r||{})[u]=e[u]);return r}function ei(n,e,t,r){var o=n.e,a=e.e,i=o.length,c=a.length;i>c?et(t,6,r,{v:c,i:i-c}):c>i&&et(t,7,r,{v:i,e:a});for(var u=c>i?i:c,l=0;u>l;l++){var f=o[l];er(f,a[l],t,++r),r+=f.b||0}}function ec(n,e,t,r){for(var o=[],a={},i=[],c=n.e,u=e.e,l=c.length,f=u.length,s=0,d=0,p=r;l>s&&f>d;){var m=(M=c[s]).a,v=(F=u[d]).a,g=M.b,h=F.b,b=void 0,x=void 0;if(m!==v){var y=c[s+1],w=u[d+1];if(y){var P=y.a,C=y.b;x=v===P}if(w){var T=w.a,L=w.b;b=m===T}if(b&&x)er(g,L,o,++p),el(a,o,m,h,d,i),p+=g.b||0,ef(a,o,m,C,++p),p+=C.b||0,s+=2,d+=2;else if(b)p++,el(a,o,v,h,d,i),er(g,L,o,p),p+=g.b||0,s+=1,d+=2;else if(x)ef(a,o,m,g,++p),p+=g.b||0,er(C,h,o,++p),p+=C.b||0,s+=2,d+=1;else{if(!y||P!==T)break;ef(a,o,m,g,++p),el(a,o,v,h,d,i),p+=g.b||0,er(C,L,o,++p),p+=C.b||0,s+=2,d+=2}}else er(g,h,o,++p),p+=g.b||0,s++,d++}for(;l>s;)p++,ef(a,o,(M=c[s]).a,g=M.b,p),p+=g.b||0,s++;for(;f>d;){var M,F,$=$||[];el(a,o,(F=u[d]).a,F.b,void 0,$),d++}(o.length>0||i.length>0||$)&&et(t,8,r,{w:o,x:i,y:$})}var eu="_elmW6BL";function el(n,e,t,r,o,a){var i=n[t];if(!i)return a.push({r:o,A:i={c:0,z:r,r:o,s:void 0}}),void(n[t]=i);if(1===i.c){a.push({r:o,A:i}),i.c=2;var c=[];return er(i.z,r,c,i.r),i.r=o,void(i.s.s={w:c,A:i})}el(n,e,t+eu,r,o,a)}function ef(n,e,t,r,o){var a=n[t];if(a){if(0===a.c){a.c=2;var i=[];return er(r,a.z,i,o),void et(e,9,o,{w:i,A:a})}ef(n,e,t+eu,r,o)}else{var c=et(e,9,o,void 0);n[t]={c:1,z:r,r:o,s:c}}}var es=o(function(n,e,t,r){return function(n,e,t,r,o,a){var i=l(nl,n,e?e.flags:void 0);tz(i)||D(2);var c={},u=t(i.a),d=u.a,p=a(v,d),m=function(n,e){var t;for(var r in nD){var o=nD[r];o.a&&((t=t||{})[r]=o.a(r,e)),n[r]=function(n,e){var t={g:e,h:void 0},r=n.c,o=n.d,a=n.e,i=n.f;return t.h=nT(l(nw,function n(e){return l(nw,n,{$:5,b:function(n){var c=n.a;return 0===n.$?f(o,t,c,e):a&&i?s(r,t,c.i,c.j,e):f(r,t,a?c.i:c.j,e)}})},n.b))}(o,e)}return t}(c,v);function v(n,e){var t=l(r,n,d);p(d=t.a,e),nq(c,t.b,o(d))}return nq(c,u.b,o(d)),m?{ports:m}:{}}(e,r,n.hJ,n.i2,n.iH,function(e,t){var r=n.d6&&n.d6(e),o=n.i6,a=nO.title,i=nO.body,c=function n(e){if(3===e.nodeType)return nU(e.textContent);if(1!==e.nodeType)return nU("");for(var t=C,r=e.attributes,o=r.length;o--;){var a=r[o];t=T(l(n1,a.name,a.value),t)}var i=e.tagName.toLowerCase(),c=C,u=e.childNodes;for(o=u.length;o--;)c=T(n(u[o]),c);return f(nQ,i,t,c)}(i);return function(n,e){e(n);var t=0;function r(){t=1===t?0:(ep(r),e(n),1)}return function(o,a){n=o,a?(e(n),2===t&&(t=1)):(0===t&&ep(r),t=2)}}(t,function(n){nR=r;var t,u,l,f=o(n),s=nQ("body")(C)(f.gM),d=(er(c,s,t=[],0),t);u=i,l=c,i=0===d.length?u:(function n(e,t,r,o){(function e(t,r,o,a,i,c,u){for(var l=o[a],f=l.r;f===i;){var s=l.$;if(1===s)n(t,r.k,l.s,u);else if(8===s)l.t=t,l.u=u,(d=l.s.w).length>0&&e(t,r,d,0,i,c,u);else if(9===s){l.t=t,l.u=u;var d,p=l.s;p&&(p.A.s=t,(d=p.w).length>0&&e(t,r,d,0,i,c,u))}else l.t=t,l.u=u;if(!(l=o[++a])||(f=l.r)>c)return a}var m=r.$;if(4===m){for(var v=r.k;4===v.$;)v=v.k;return e(t,v,o,a,i+1,c,t.elm_event_node_ref)}for(var g=r.e,h=t.childNodes,b=0;g.length>b;b++){i++;var x=1===m?g[b]:g[b].b,y=i+(x.b||0);if(!(i>f||f>y||(l=o[a=e(h[b],x,o,a,i,y,u)])&&(f=l.r)<=c))break;i=y}return a})(e,t,r,0,0,t.b,o)}(u,l,d,e),function n(e,t){for(var r=0;t.length>r;r++){var o=t[r],a=o.t,i=function(e,t){switch(t.$){case 0:var r,o,a,i;return r=t.s,o=t.u,a=e.parentNode,(i=en(r,o)).elm_event_node_ref||(i.elm_event_node_ref=e.elm_event_node_ref),a&&i!==e&&a.replaceChild(i,e),i;case 4:return ee(e,t.u,t.s),e;case 3:return e.replaceData(0,e.length,t.s),e;case 1:return n(e,t.s);case 2:return e.elm_event_node_ref?e.elm_event_node_ref.j=t.s:e.elm_event_node_ref={j:t.s,p:t.u},e;case 6:for(var c=t.s,u=0;c.i>u;u++)e.removeChild(e.childNodes[c.v]);return e;case 7:for(var l=(c=t.s).e,f=e.childNodes[u=c.v];l.length>u;u++)e.insertBefore(en(l[u],t.u),f);return e;case 9:if(!(c=t.s))return e.parentNode.removeChild(e),e;var s=c.A;return void 0!==s.r&&e.parentNode.removeChild(e),s.s=n(e,c.w),e;case 8:return function(e,t){var r=t.s,o=function(n,e){if(n){for(var t=nO.createDocumentFragment(),r=0;n.length>r;r++){var o=n[r].A;nW(t,2===o.c?o.s:en(o.z,e.u))}return t}}(r.y,t);e=n(e,r.w);for(var a=r.x,i=0;a.length>i;i++){var c=a[i],u=c.A,l=2===u.c?u.s:en(u.z,t.u);e.insertBefore(l,e.childNodes[c.r])}return o&&nW(e,o),e}(e,t);case 5:return t.s(e);default:D(10)}}(a,o);a===e&&(e=i)}return e}(u,d)),c=s,nR=0,a!==f.i_&&(nO.title=a=f.i_)})})}),ed="undefined"!=typeof cancelAnimationFrame?cancelAnimationFrame:function(n){clearTimeout(n)},ep="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:function(n){return setTimeout(n,1e3/60)};function em(){return tO(nO.location.href).a||D(1)}var ev=t(function(n,e){return l(rf,tW,ny(function(){history.pushState({},"",e),n()}))}),eg={addEventListener:function(){},removeEventListener:function(){}},eh="undefined"!=typeof document?document:eg,eb="undefined"!=typeof window?window:eg,ex=r(function(n,e,t){return nL(ny(function(){function r(n){nT(t(n))}return n.addEventListener(e,r,nG&&{passive:!0}),function(){n.removeEventListener(e,r)}}))}),ey=t(function(n,e){var t=nf(n,e);return tz(t)?to(t.a):ta});function ew(n,e){return ny(function(t){ep(function(){var r=document.getElementById(n);t(r?nx(e(r)):{$:1,a:tk(n)})})})}var eP=r(function(n,e,t){return ew(n,function(n){return n.scrollLeft=e,n.scrollTop=t,0})}),eC=t(function(n,e){return ny(function(){var t=setInterval(function(){nT(e)},n);return function(){clearInterval(t)}})}),eT=t(function(n,e){return new Float64Array([n,e])});new Float64Array(3),new Float64Array(3),new Float64Array(3);var eL=r(function(n,e,t){return new Float64Array([n,e,t])}),eM=t(function(n,e){return new Float64Array([e[0]*n,e[1]*n,e[2]*n])}),eF=o(function(n,e,t,r){return new Float64Array([n,e,t,r])});new Float64Array(16),new Float64Array(16),new Float64Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]);var e$=0;function ez(n,e){for(;e.b;e=e.b)n(e.a)}function eS(n){for(var e=0;n.b;n=n.b)e++;return e}var eD="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:function(n){setTimeout(n,1e3/60)},eN=a(function(n,e,t,r,o){return{$:0,a:n,b:e,c:t,d:r,e:o}}),ek=t(function(n,e){var t=n.blend;t.toggle=n.toggle,t.enabled||(n.gl.enable(n.gl.BLEND),t.enabled=!0),t.a===e.a&&t.d===e.d||(n.gl.blendEquationSeparate(e.a,e.d),t.a=e.a,t.d=e.d),t.b===e.b&&t.c===e.c&&t.e===e.e&&t.f===e.f||(n.gl.blendFuncSeparate(e.b,e.c,e.e,e.f),t.b=e.b,t.c=e.c,t.e=e.e,t.f=e.f),t.g===e.g&&t.h===e.h&&t.i===e.i&&t.j===e.j||(n.gl.blendColor(e.g,e.h,e.i,e.j),t.g=e.g,t.h=e.h,t.i=e.i,t.j=e.j)}),eV=t(function(n,e){var t=n.depthTest;t.toggle=n.toggle,t.enabled||(n.gl.enable(n.gl.DEPTH_TEST),t.enabled=!0),t.a!==e.a&&(n.gl.depthFunc(e.a),t.a=e.a),t.b!==e.b&&(n.gl.depthMask(e.b),t.b=e.b),t.c===e.c&&t.d===e.d||(n.gl.depthRange(e.c,e.d),t.c=e.c,t.d=e.d)}),eA=t(function(n,e){var t=n.stencilTest;t.toggle=n.toggle,t.enabled||(n.gl.enable(n.gl.STENCIL_TEST),t.enabled=!0),t.d===e.d&&t.a===e.a&&t.b===e.b||(n.gl.stencilFuncSeparate(n.gl.FRONT,e.d,e.a,e.b),t.d=e.d),t.e===e.e&&t.f===e.f&&t.g===e.g||(n.gl.stencilOpSeparate(n.gl.FRONT,e.e,e.f,e.g),t.e=e.e,t.f=e.f,t.g=e.g),t.c!==e.c&&(n.gl.stencilMask(e.c),t.c=e.c),t.h===e.h&&t.a===e.a&&t.b===e.b||(n.gl.stencilFuncSeparate(n.gl.BACK,e.h,e.a,e.b),t.h=e.h,t.a=e.a,t.b=e.b),t.i===e.i&&t.j===e.j&&t.k===e.k||(n.gl.stencilOpSeparate(n.gl.BACK,e.i,e.j,e.k),t.i=e.i,t.j=e.j,t.k=e.k)}),e_=t(function(n,e){var t=n.scissor;t.toggle=n.toggle,t.enabled||(n.gl.enable(n.gl.SCISSOR_TEST),t.enabled=!0),t.a===e.a&&t.b===e.b&&t.c===e.c&&t.d===e.d||(n.gl.scissor(e.a,e.b,e.c,e.d),t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d)}),eB=t(function(n,e){var t=n.colorMask;t.toggle=n.toggle,t.enabled=!0,t.a===e.a&&t.b===e.b&&t.c===e.c&&t.d===e.d||(n.gl.colorMask(e.a,e.b,e.c,e.d),t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d)}),eE=t(function(n,e){var t=n.cullFace;t.toggle=n.toggle,t.enabled||(n.gl.enable(n.gl.CULL_FACE),t.enabled=!0),t.a!==e.a&&(n.gl.cullFace(e.a),t.a=e.a)}),ej=t(function(n,e){var t=n.polygonOffset;t.toggle=n.toggle,t.enabled||(n.gl.enable(n.gl.POLYGON_OFFSET_FILL),t.enabled=!0),t.a===e.a&&t.b===e.b||(n.gl.polygonOffset(e.a,e.b),t.a=e.a,t.b=e.b)}),eq=t(function(n,e){var t=n.sampleCoverage;t.toggle=n.toggle,t.enabled||(n.gl.enable(n.gl.SAMPLE_COVERAGE),t.enabled=!0),t.a===e.a&&t.b===e.b||(n.gl.sampleCoverage(e.a,e.b),t.a=e.a,t.b=e.b)}),eI=function(n){n.scissor.enabled&&(n.gl.disable(n.gl.SCISSOR_TEST),n.scissor.enabled=!1)},eR=function(n){var e=n.colorMask;e.a&&e.b&&e.c&&e.d||(n.gl.colorMask(!0,!0,!0,!0),e.a=!0,e.b=!0,e.c=!0,e.d=!0)},eH=["blend","depthTest","stencilTest","scissor","colorMask","cullFace","polygonOffset","sampleCoverage","sampleAlphaToCoverage"],eO=[function(n){n.blend.enabled&&(n.gl.disable(n.gl.BLEND),n.blend.enabled=!1)},function(n){n.depthTest.enabled&&(n.gl.disable(n.gl.DEPTH_TEST),n.depthTest.enabled=!1)},function(n){n.stencilTest.enabled&&(n.gl.disable(n.gl.STENCIL_TEST),n.stencilTest.enabled=!1)},eI,eR,function(n){n.gl.disable(n.gl.CULL_FACE)},function(n){n.gl.disable(n.gl.POLYGON_OFFSET_FILL)},function(n){n.gl.disable(n.gl.SAMPLE_COVERAGE)},function(n){n.gl.disable(n.gl.SAMPLE_ALPHA_TO_COVERAGE)}];function eW(n,e,t){var r=n.createShader(t);return n.shaderSource(r,"#extension GL_OES_standard_derivatives : enable\n"+e),n.compileShader(r),r}function eU(n,e){switch(e){case n.FLOAT:return{size:1,arraySize:1,type:Float32Array,baseType:n.FLOAT};case n.FLOAT_VEC2:return{size:2,arraySize:1,type:Float32Array,baseType:n.FLOAT};case n.FLOAT_VEC3:return{size:3,arraySize:1,type:Float32Array,baseType:n.FLOAT};case n.FLOAT_VEC4:return{size:4,arraySize:1,type:Float32Array,baseType:n.FLOAT};case n.FLOAT_MAT4:return{size:4,arraySize:4,type:Float32Array,baseType:n.FLOAT};case n.INT:return{size:1,arraySize:1,type:Int32Array,baseType:n.INT}}}var eG=t(function(n,e){var t=n.f,r=t.gl;return r&&(r.viewport(0,0,r.drawingBufferWidth,r.drawingBufferHeight),t.depthTest.b||(r.depthMask(!0),t.depthTest.b=!0),t.stencilTest.c!==t.STENCIL_WRITEMASK&&(r.stencilMask(t.STENCIL_WRITEMASK),t.stencilTest.c=t.STENCIL_WRITEMASK),eI(t),eR(t),r.clear(r.COLOR_BUFFER_BIT|r.DEPTH_BUFFER_BIT|r.STENCIL_BUFFER_BIT),ez(function(e){if(e.d.b.b){if(e.b.id&&e.c.id&&(o=e.b.id+"#"+e.c.id,a=t.programs[o]),!a){e.b.id?l=t.shaders[e.b.id]:e.b.id=e$++,l||(l=eW(r,e.b.src,r.VERTEX_SHADER),t.shaders[e.b.id]=l),e.c.id?f=t.shaders[e.c.id]:e.c.id=e$++,f||(f=eW(r,e.c.src,r.FRAGMENT_SHADER),t.shaders[e.c.id]=f);var o,a,i,c,u,l,f,s=function(n,e,t){var r=n.createProgram();if(n.attachShader(r,e),n.attachShader(r,t),n.linkProgram(r),!n.getProgramParameter(r,n.LINK_STATUS))throw"Link failed: "+n.getProgramInfoLog(r)+"\nvs info-log: "+n.getShaderInfoLog(e)+"\nfs info-log: "+n.getShaderInfoLog(t);return r}(r,l,f);(a={glProgram:s,attributes:Object.assign({},e.b.attributes,e.c.attributes),currentUniforms:{},activeAttributes:[],activeAttributeLocations:[]}).uniformSetters=function(n,e,t,r){for(var o=t.glProgram,a=t.currentUniforms,i=0,c=e.f,u={},l=n.getProgramParameter(o,n.ACTIVE_UNIFORMS),f=0;l>f;f++){var s=n.getActiveUniform(o,f);u[r[s.name]||s.name]=function(e,t){var r=t.name,o=n.getUniformLocation(e,r);switch(t.type){case n.INT:return function(e){a[r]!==e&&(n.uniform1i(o,e),a[r]=e)};case n.FLOAT:return function(e){a[r]!==e&&(n.uniform1f(o,e),a[r]=e)};case n.FLOAT_VEC2:return function(e){a[r]!==e&&(n.uniform2f(o,e[0],e[1]),a[r]=e)};case n.FLOAT_VEC3:return function(e){a[r]!==e&&(n.uniform3f(o,e[0],e[1],e[2]),a[r]=e)};case n.FLOAT_VEC4:return function(e){a[r]!==e&&(n.uniform4f(o,e[0],e[1],e[2],e[3]),a[r]=e)};case n.FLOAT_MAT4:return function(e){a[r]!==e&&(n.uniformMatrix4fv(o,!1,new Float32Array(e)),a[r]=e)};case n.SAMPLER_2D:var u=i++;return function(e){n.activeTexture(n.TEXTURE0+u);var t=c.textures.get(e);t||(t=e.g5(n),c.textures.set(e,t)),n.bindTexture(n.TEXTURE_2D,t),a[r]!==e&&(n.uniform1i(o,u),a[r]=e)};case n.BOOL:return function(e){a[r]!==e&&(n.uniform1i(o,e),a[r]=e)};default:return function(){}}}(o,s)}return u}(r,n,a,Object.assign({},e.b.uniforms,e.c.uniforms));var d=r.getProgramParameter(s,r.ACTIVE_ATTRIBUTES);for(i=0;d>i;i++){var p=r.getActiveAttrib(s,i),m=r.getAttribLocation(s,p.name);a.activeAttributes.push(p),a.activeAttributeLocations.push(m)}o=e.b.id+"#"+e.c.id,t.programs[o]=a}t.lastProgId!==o&&(r.useProgram(a.glProgram),t.lastProgId=o),c=a.uniformSetters,Object.keys(u=e.e).forEach(function(n){var e=c[n];e&&e(u[n])});var v=t.buffers.get(e.d);for(v||(v=function(n,e){if(e.a.e8>0){var t,r,o,a,i,c=n.createBuffer(),u=(t=e.c,r=e.a.e8,a=new Uint32Array(eS(t)*r),i=0,ez(function(n){if(1===r)a[i++]=n;else for(o=0;r>o;o++)a[i++]=n[String.fromCharCode(97+o)]},t),a);return n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,c),n.bufferData(n.ELEMENT_ARRAY_BUFFER,u,n.STATIC_DRAW),{numIndices:u.length,indexBuffer:c,buffers:{}}}return{numIndices:e.a.eW*eS(e.b),indexBuffer:null,buffers:{}}}(r,e.d),t.buffers.set(e.d,v)),i=0;a.activeAttributes.length>i;i++){m=a.activeAttributeLocations[i],void 0===v.buffers[(p=a.activeAttributes[i]).name]&&(v.buffers[p.name]=function(n,e,t,r){for(var o=t.a.eW,a=[],i=0;o>i;i++)a.push(String.fromCharCode(97+i));var c=eU(n,e.type);if(void 0===c)throw Error("No info available for: "+e.type);var u=0,l=c.size*c.arraySize*o,f=new c.type(eS(t.b)*l);ez(function(n){(function(n,e,t,r,i){var c;if(1===o)for(c=0;e>c;c++)n[t++]=1===e?r[i]:r[i][c];else a.forEach(function(o){for(c=0;e>c;c++)n[t++]=1===e?r[o][i]:r[o][i][c]})})(f,c.size*c.arraySize,u,n,r[e.name]||e.name),u+=l},t.b);var s=n.createBuffer();return n.bindBuffer(n.ARRAY_BUFFER,s),n.bufferData(n.ARRAY_BUFFER,f,n.STATIC_DRAW),s}(r,p,e.d,a.attributes)),r.bindBuffer(r.ARRAY_BUFFER,v.buffers[p.name]);var g=eU(r,p.type);if(1===g.arraySize)r.enableVertexAttribArray(m),r.vertexAttribPointer(m,g.size,g.baseType,!1,0,0);else for(var h=4*g.size,b=h*g.arraySize,x=0;g.arraySize>x;x++)r.enableVertexAttribArray(m+x),r.vertexAttribPointer(m+x,g.size,g.baseType,!1,b,h*x)}for(t.toggle=!t.toggle,ez(lN(t),e.a),i=0;9>i;i++){var y=t[eH[i]];y.toggle!==t.toggle&&y.enabled&&(eO[i](t),y.enabled=!1,y.toggle=t.toggle)}v.indexBuffer?(r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,v.indexBuffer),r.drawElements(e.d.a.fJ,v.numIndices,r.UNSIGNED_INT,0)):r.drawArrays(e.d.a.fJ,0,v.numIndices)}},n.g)),e}),eY=r(function(n,e,t){var r;return r={g:t,f:{},h:n},{$:3,d:n7(e),g:r,h:e1,i:e3}}),eQ=t(function(n,e){n.contextAttributes.alpha=!0,n.contextAttributes.premultipliedAlpha=e.a}),eX=t(function(n,e){n.contextAttributes.depth=!0,n.sceneSettings.push(function(n){n.clearDepth(e.a)})}),eJ=t(function(n,e){n.contextAttributes.stencil=!0,n.sceneSettings.push(function(n){n.clearStencil(e.a)})}),eZ=t(function(n){n.contextAttributes.antialias=!0}),eK=t(function(n,e){n.sceneSettings.push(function(n){n.clearColor(e.a,e.b,e.c,e.d)})}),e0=t(function(n){n.contextAttributes.preserveDrawingBuffer=!0});function e1(n){var e={contextAttributes:{alpha:!1,depth:!1,stencil:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1},sceneSettings:[]};ez(function(n){return l(lD,e,n)},n.h);var t=nO.createElement("canvas"),r=t.getContext&&(t.getContext("webgl",e.contextAttributes)||t.getContext("experimental-webgl",e.contextAttributes));return r&&"undefined"!=typeof WeakMap?(e.sceneSettings.forEach(function(n){n(r)}),r.getExtension("OES_standard_derivatives"),r.getExtension("OES_element_index_uint"),n.f.gl=r,n.f.toggle=!1,n.f.blend={enabled:!1,toggle:!1},n.f.depthTest={enabled:!1,toggle:!1},n.f.stencilTest={enabled:!1,toggle:!1},n.f.scissor={enabled:!1,toggle:!1},n.f.colorMask={enabled:!1,toggle:!1},n.f.cullFace={enabled:!1,toggle:!1},n.f.polygonOffset={enabled:!1,toggle:!1},n.f.sampleCoverage={enabled:!1,toggle:!1},n.f.sampleAlphaToCoverage={enabled:!1,toggle:!1},n.f.shaders=[],n.f.programs={},n.f.lastProgId=null,n.f.buffers=new WeakMap,n.f.textures=new WeakMap,n.f.STENCIL_WRITEMASK=r.getParameter(r.STENCIL_WRITEMASK),eD(function(){return l(eG,n,t)})):(t=nO.createElement("div")).innerHTML='<a href="https://get.webgl.org/">Enable WebGL</a> to see this content!',t}function e3(n,e){return e.f=n.f,eG(e)}var e2=1,e5=2,e4=0,e9=r(function(n,e,t){for(;;){if(-2===t.$)return e;var r=t.d,o=n,a=f(n,t.b,t.c,f(e9,n,e,t.e));n=o,e=a,t=r}}),e6=function(n){return f(e9,r(function(n,e,t){return l(L,x(n,e),t)}),C,n)},e7=function(n){return{$:1,a:n}},e8=t(function(n,e){return{$:3,a:n,b:e}}),tn=t(function(n,e){return{$:0,a:n,b:e}}),te=t(function(n,e){return{$:1,a:n,b:e}}),tt=function(n){return{$:0,a:n}},tr=function(n){return{$:2,a:n}},to=function(n){return{$:0,a:n}},ta={$:1},ti=t(function(n,e){return l(G,n,F(e))}),tc=t(function(n,e){return M(l(U,n,e))}),tu=r(function(n,e,t){for(;;){if(!t.b)return e;var r=t.b,o=n,a=l(n,t.a,e);n=o,e=a,t=r}}),tl=function(n){return f(tu,t(function(n,e){return e+1}),0,n)},tf=r(function(n,e,t){for(;;){if(h(n,e)>=1)return t;var r=n,o=e-1,a=l(L,e,t);n=r,e=o,t=a}}),ts=t(function(n,e){return f(tf,n,e,C)}),td=t(function(n,e){return f($,n,l(ts,0,tl(e)-1),e)}),tp=function(n){return f(tu,L,C,n)},tm=function(n){var e=n.charCodeAt(0);return isNaN(e)?ta:to(55296>e||e>56319?x(n[0],n.slice(1)):x(n[0]+n[1],n.slice(2)))},tv=o(function(n,e,t,r){return{$:0,a:n,b:e,c:t,d:r}}),tg=[],th=t(function(n,e){return O(e)/O(n)}),tb=function(n){return n},tx=q(l(th,2,32)),ty=s(tv,0,tx,tg,tg),tw=function(n){return n.length},tP=t(function(n,e){return h(n,e)>0?n:e}),tC=t(function(n,e){for(;;){var t=l(S,32,n),r=t.b,o=l(L,{$:0,a:t.a},e);if(!r.b)return tp(o);n=r,e=o}}),tT=function(n){return n.a},tL=t(function(n,e){for(;;){var t=q(e/32);if(1===t)return l(S,32,n).a;n=l(tC,n,C),e=t}}),tM=t(function(n,e){if(e.q){var t=32*e.q,r=I(l(th,32,t-1)),o=l(tL,n?tp(e.E):e.E,e.q);return s(tv,tw(e.u)+t,l(tP,5,r*tx),o,e.u)}return s(tv,tw(e.u),tx,tg,e.u)}),tF=a(function(n,e,t,r,o){for(;;){if(0>e)return l(tM,!1,{E:r,q:t/32|0,u:o});var a={$:1,a:f(z,32,e,n)};e-=32,r=l(L,a,r)}}),t$=t(function(n,e){if(n>0){var t=n%32;return d(tF,e,n-t-32,n,C,f(z,t,n-t,e))}return ty}),tz=function(n){return!n.$},tS=function(n){return{$:0,a:n}},tD=function(n){switch(n.$){case 0:return 0;case 1:return 1;case 2:return 2;default:return 3}},tN=function(n){return n},tk=tN,tV=i(function(n,e,t,r,o,a){return{hr:a,hC:e,ie:r,$8:t,ig:n,ih:o}}),tA=function(n){return n.length},t_=t(function(n,e){return 1>n?e:f(Y,n,tA(e),e)}),tB=function(n){return""===n},tE=t(function(n,e){return 1>n?"":f(Y,0,n,e)}),tj=function(n){for(var e=0,t=n.charCodeAt(0),r=43==t||45==t?1:0,o=r;n.length>o;++o){var a=n.charCodeAt(o);if(48>a||a>57)return ta;e=10*e+a-48}return o==r?ta:to(45==t?-e:e)},tq=a(function(n,e,t,r,o){if(tB(o)||l(Q,"@",o))return ta;var a=l(J,":",o);if(a.b){if(a.b.b)return ta;var i=a.a,c=tj(l(t_,i+1,o));return 1===c.$?ta:to(p(tV,n,l(tE,i,o),c,e,t,r))}return to(p(tV,n,o,ta,e,t,r))}),tI=o(function(n,e,t,r){if(tB(r))return ta;var o=l(J,"/",r);if(o.b){var a=o.a;return d(tq,n,l(t_,a,r),e,t,l(tE,a,r))}return d(tq,n,"/",e,t,r)}),tR=r(function(n,e,t){if(tB(t))return ta;var r=l(J,"?",t);if(r.b){var o=r.a;return s(tI,n,to(l(t_,o+1,t)),e,l(tE,o,t))}return s(tI,n,ta,e,t)}),tH=t(function(n,e){if(tB(e))return ta;var t=l(J,"#",e);if(t.b){var r=t.a;return f(tR,n,to(l(t_,r+1,e)),l(tE,r,e))}return f(tR,n,ta,e)}),tO=function(n){return l(X,"http://",n)?l(tH,0,l(t_,7,n)):l(X,"https://",n)?l(tH,1,l(t_,8,n)):ta},tW=function(){for(;;);},tU=nx(0),tG=o(function(n,e,t,r){if(r.b){var o=r.a,a=r.b;if(a.b){var i=a.a,c=a.b;if(c.b){var u=c.a,d=c.b;if(d.b){var p=d.b;return l(n,o,l(n,i,l(n,u,l(n,d.a,t>500?f(tu,n,e,tp(p)):s(tG,n,e,t+1,p)))))}return l(n,o,l(n,i,l(n,u,e)))}return l(n,o,l(n,i,e))}return l(n,o,e)}return e}),tY=r(function(n,e,t){return s(tG,n,e,0,t)}),tQ=t(function(n,e){return f(tY,t(function(e,t){return l(L,n(e),t)}),C,e)}),tX=t(function(n,e){return l(nw,function(e){return nx(n(e))},e)}),tJ=r(function(n,e,t){return l(nw,function(e){return l(nw,function(t){return nx(l(n,e,t))},t)},e)}),tZ=function(n){return f(tY,tJ(L),nx(C),n)},tK=t(function(n,e){return nL(l(nw,nk(n),e))}),t0=r(function(n,e){return l(tX,function(){return 0},tZ(l(tQ,tK(n),e)))}),t1=r(function(){return nx(0)}),t3=t(function(n,e){return l(tX,n,e)});nD.Task=nN(tU,t0,t1,t3);var t2,t5,t4,t9,t6,t7,t8,rn,re,rt,rr,ro,ra,ri,rc,ru,rl=nA("Task"),rf=t(function(n,e){return rl(l(tX,n,e))}),rs=r(function(n,e,t){return n(e(t))}),rd=t(function(n,e){return e.$?n:e.a}),rp=l(rs,function(n){var e,t=(e=l(tc,"?",n.ie)).b&&e.b.b?x(e.a,to(e.b.a)):x(n.ie,n.ih);return w(n,{ie:t.a,ih:t.b})},function(n){return w(n,{hr:ta,ie:l(rd,"",n.hr)})}),rm=function(n){return{$:0,a:n}},rv=function(n){return{$:7,a:n}},rg=l(rf,function(n){return{$:1,a:n}},(ru=function(){var n,e;return{$9:(n=eh.body,e=eh.documentElement,{ja:Math.max(n.scrollWidth,n.offsetWidth,e.scrollWidth,e.offsetWidth,e.clientWidth),e3:Math.max(n.scrollHeight,n.offsetHeight,e.scrollHeight,e.offsetHeight,e.clientHeight)}),c8:{bF:eb.pageXOffset,c9:eb.pageYOffset,ja:eh.documentElement.clientWidth,e3:eh.documentElement.clientHeight}}},ny(function(n){ep(function(){n(nx(ru()))})}))),rh=t(function(n,e){return{$:0,a:n,b:e}}),rb=ny(function(n){n(nx(tN(Date.now())))}),rx=r(function(n,e,t){return x(rm({bV:t,b9:ta,i3:e,c8:ta}),n_(M([l(rf,rv,rb),rg])))}),ry=function(n){return{$:10,a:n}},rw=function(n){return{$:6,a:n}},rP=rw(2),rC=function(n){return{$:5,a:n}},rT=rC(0),rL=r(function(n,e,t){return 1===n?e:t}),rM=function(n){return f(rL,n,330,1050)},rF=t(function(n,e){return{$:3,a:n,b:e}}),r$="accx",rz="accy",rS="cptr",rD="notxt",rN=function(n){return n>31?{$:1,a:1<<n-32}:{$:0,a:1<<n}},rk=rN(13),rV=l(rF,rk,"w7"),rA=function(n){return{$:1,a:n}},r_={$:8},rB=function(n){return{$:2,a:n}},rE=function(n){return{$:0,a:n}},rj=t(function(n,e){return l(n0,n,nh(e))}),rq=rj("disabled"),rI={$:0},rR={$:0},rH=function(n){return{$:1,a:n}},rO={$:0},rW=function(n){return{$:1,a:n}},rU=function(n){return{$:0,a:n}},rG=t(function(n,e){switch(e.$){case 0:return n;case 1:return P(e.a,n);case 2:return P(n,e.a);default:return P(e.a,P(n,e.b))}}),rY=r(function(n,e,t){switch(t.$){case 0:return e;case 1:return P(l(tQ,function(e){return x(n,e)},t.a),e);case 2:return P(e,l(tQ,function(e){return x(n,e)},r=t.a));default:var r=t.b;return P(l(tQ,function(e){return x(n,e)},t.a),P(e,l(tQ,function(e){return x(n,e)},r)))}}),rQ=rN(41),rX=rN(40),rJ=rN(42),rZ=rN(43),rK=t(function(n,e){return l(n0,n,nh(e))}),r0=rK("className"),r1=nQ("div"),r3={$:-2},r2=function(n){switch(n.$){case 0:return Z(n.a)+"px";case 1:return"auto";case 2:return Z(n.a)+"fr";case 3:var e=n.b;return"min"+(Z(n.a)+r2(e));default:return e=n.b,"max"+(Z(n.a)+r2(e))}},r5=function(n){return n.b},r4=function(n){return Z(R(255*n))},r9=function(n){switch(n.$){case 0:return ta;case 1:var e=n.a,t=e.b,r=e.c;return to("mv-"+r4(e.a)+"-"+r4(t)+"-"+r4(r));default:var o=n.a,a=o.b,i=o.c,c=n.b,u=c.a,l=c.b,f=c.c,s=n.c,d=s.a,p=s.b,m=s.c,v=n.d;return to("tfrm-"+r4(o.a)+"-"+r4(a)+"-"+r4(i)+"-"+r4(u)+"-"+r4(l)+"-"+r4(f)+"-"+r4(d)+"-"+r4(p)+"-"+r4(m)+"-"+r4(v))}},r6=function(n){switch(n.$){case 13:case 1:case 12:return a=n.a;case 0:case 3:case 4:case 5:case 7:case 6:return n.a;case 2:return"font-size-"+Z(n.a);case 8:var e=n.a;return"grid-rows-"+l(ti,"-",l(tQ,r2,e.im))+"-cols-"+l(ti,"-",l(tQ,r2,e.ax))+"-space-x-"+r2(e.iy.a)+"-space-y-"+r2(e.iy.b);case 9:var t=n.a;return"gp grid-pos-"+Z(t.ao)+"-"+Z(t.g3)+"-"+Z(t.ja)+"-"+Z(t.e3);case 11:var r=n.a,o=n.b,a=function(){switch(r){case 0:return"fs";case 1:return"hv";default:return"act"}}();return l(ti," ",l(tQ,function(n){var e=r6(n);return""===e?"":e+"-"+a},o));default:return l(rd,"",r9(n.a))}},r7=a(function(n,e,t,r,o){return{$:-1,a:n,b:e,c:t,d:r,e:o}}),r8=a(function(n,e,t,r,o){if(-1!==o.$||o.a){if(-1!==r.$||r.a||-1!==r.d.$||r.d.a)return d(r7,n,e,t,r,o);var a=r.d;return i=r.e,d(r7,0,r.b,r.c,d(r7,1,a.b,a.c,a.d,a.e),d(r7,1,e,t,i,o))}var i,c=o.b,u=o.c,l=o.d,f=o.e;return -1!==r.$||r.a?d(r7,n,c,u,d(r7,0,e,t,r,l),f):d(r7,0,e,t,d(r7,1,r.b,r.c,r.d,i=r.e),d(r7,1,c,u,l,f))}),on=r(function(n,e,t){if(-2===t.$)return d(r7,0,n,e,r3,r3);var r=t.a,o=t.b,a=t.c,i=t.d,c=t.e;switch(l(b,n,o)){case 0:return d(r8,r,o,a,f(on,n,e,i),c);case 1:return d(r7,r,o,e,i,c);default:return d(r8,r,o,a,i,f(on,n,e,c))}}),oe=r(function(n,e,t){var r=f(on,n,e,t);return -1!==r.$||r.a?r:d(r7,1,r.b,r.c,r.d,r.e)}),ot=t(function(n,e){return f(oe,n,0,e)}),or=t(function(n,e){for(;;){if(-2===e.$)return ta;var t=e.c,r=e.d,o=e.e;switch(l(b,n,e.b)){case 0:e=r;continue;case 1:return to(t);default:e=o;continue}}}),oo=t(function(n,e){return!l(or,n,e).$}),oa=t(function(n,e){return l(oo,n,e)}),oi=t(function(n,e){var t=e.a,r=e.b,o=r6(n);return l(oa,o,t)?e:x(l(ot,o,t),l(L,n,r))}),oc=t(function(n,e){return{$:0,a:n,b:e}}),ou=t(function(n,e){return{$:0,a:n,b:e}}),ol=function(n){return"."+n},of=r(function(n,e,t){var r=n(e);return r.$?t:l(L,r.a,t)}),os=t(function(n,e){return f(tY,of(n),C,e)}),od=function(n){var e=n.b,t=n.c,r=n.d;return"rgba("+Z(R(255*n.a))+","+Z(R(255*e))+","+Z(R(255*t))+","+Z(r)+")"},op=function(n){return l(ti," ",l(os,tN,M([n.e9?to("inset"):ta,to(Z(n.fT.a)+"px"),to(Z(n.fT.b)+"px"),to(Z(n.bh)+"px"),to(Z(n.bx)+"px"),to(od(n.cs))])))},om=t(function(n,e){return e.$?ta:to(n(e.a))}),ov=t(function(n,e){var t=e.b;return x(n(e.a),t)}),og=t(function(n,e){return x(e.a,n(e.b))}),oh=function(n){return M([l(ou,ol("focus-within")+":focus-within",l(os,tN,M([l(om,function(n){return l(oc,"border-color",od(n))},n.gP),l(om,function(n){return l(oc,"background-color",od(n))},n.gH),l(om,function(n){return l(oc,"box-shadow",op({bh:n.bh,cs:n.cs,e9:!1,fT:l(og,tb,l(ov,tb,n.fT)),bx:n.bx}))},n.is),to(l(oc,"outline","none"))]))),l(ou,ol("s")+":focus .focusable, "+ol("s")+".focusable:focus, .ui-slide-bar:focus + "+ol("s")+" .focusable-thumb",l(os,tN,M([l(om,function(n){return l(oc,"border-color",od(n))},n.gP),l(om,function(n){return l(oc,"background-color",od(n))},n.gH),l(om,function(n){return l(oc,"box-shadow",op({bh:n.bh,cs:n.cs,e9:!1,fT:l(og,tb,l(ov,tb,n.fT)),bx:n.bx}))},n.is),to(l(oc,"outline","none"))])))])},ob=function(n){return nQ(n9(n))},ox=t(function(n,e){return l(n0,"innerHTML"==n||"formAction"==n?"data-"+n:n,"string"==typeof e&&n4.test(e)?"":e)}),oy=t(function(n,e){return{$:2,a:n,b:e}}),ow=function(n){return{$:6,a:n}},oP=t(function(n,e){return{$:1,a:n,b:e}}),oC=t(function(n,e){return{$:0,a:n,b:e}}),oT=t(function(n,e){return{$:4,a:n,b:e}}),oL=t(function(n,e){return{$:0,a:n,b:e}}),oM=t(function(n,e){return{$:3,a:n,b:e}}),oF=M([0,1,2,3,4,5]),o$=t(function(n,e){return e.b?f(tY,L,e,n):n}),oz=function(n){return f(tY,o$,C,n)},oS=t(function(n,e){return oz(l(tQ,n,e))}),oD=function(n){switch(n){case 0:return ol("ct");case 1:return ol("cb");case 2:return ol("cr");case 3:return ol("cl");case 4:return ol("ccx");default:return ol("ccy")}},oN=function(n){switch(n){case 0:return ol("at");case 1:return ol("ab");case 2:return ol("ar");case 3:return ol("al");case 4:return ol("cx");default:return ol("cy")}},ok=function(n){return ow(l(oS,function(e){var t=n(e),r=t.a,o=t.b;return M([l(oT,oD(e),r),l(oP,ol("s"),M([l(oT,oN(e),o)]))])},oF))},oV=M([l(oL,"display","flex"),l(oL,"flex-direction","column"),l(oL,"white-space","pre"),l(oT,ol("hbh"),M([l(oL,"z-index","0"),l(oP,ol("bh"),M([l(oL,"z-index","-1")]))])),l(oT,ol("sbt"),M([l(oP,ol("t"),M([l(oT,ol("hf"),M([l(oL,"flex-grow","0")])),l(oT,ol("wf"),M([l(oL,"align-self","auto !important")]))]))])),l(oP,ol("hc"),M([l(oL,"height","auto")])),l(oP,ol("hf"),M([l(oL,"flex-grow","100000")])),l(oP,ol("wf"),M([l(oL,"width","100%")])),l(oP,ol("wfp"),M([l(oL,"width","100%")])),l(oP,ol("wc"),M([l(oL,"align-self","flex-start")])),ok(function(n){switch(n){case 0:return x(M([l(oL,"justify-content","flex-start")]),M([l(oL,"margin-bottom","auto !important"),l(oL,"margin-top","0 !important")]));case 1:return x(M([l(oL,"justify-content","flex-end")]),M([l(oL,"margin-top","auto !important"),l(oL,"margin-bottom","0 !important")]));case 2:return x(M([l(oL,"align-items","flex-end")]),M([l(oL,"align-self","flex-end")]));case 3:return x(M([l(oL,"align-items","flex-start")]),M([l(oL,"align-self","flex-start")]));case 4:return x(M([l(oL,"align-items","center")]),M([l(oL,"align-self","center")]));default:return x(M([l(oP,ol("s"),M([l(oL,"margin-top","auto"),l(oL,"margin-bottom","auto")]))]),M([l(oL,"margin-top","auto !important"),l(oL,"margin-bottom","auto !important")]))}})]),oA=M([0,1,2,3,4,5]),o_=M([l(oC,"html,body",M([l(oL,"height","100%"),l(oL,"padding","0"),l(oL,"margin","0")])),l(oC,P(ol("s"),P(ol("e"),ol("ic"))),M([l(oL,"display","block"),l(oT,ol("hf"),M([l(oP,"img",M([l(oL,"max-height","100%"),l(oL,"object-fit","cover")]))])),l(oT,ol("wf"),M([l(oP,"img",M([l(oL,"max-width","100%"),l(oL,"object-fit","cover")]))]))])),l(oC,ol("s")+":focus",M([l(oL,"outline","none")])),l(oC,ol("ui"),M([l(oL,"width","100%"),l(oL,"height","auto"),l(oL,"min-height","100%"),l(oL,"z-index","0"),l(oT,P(ol("s"),ol("hf")),M([l(oL,"height","100%"),l(oP,ol("hf"),M([l(oL,"height","100%")]))])),l(oP,ol("fr"),M([l(oT,ol("nb"),M([l(oL,"position","fixed"),l(oL,"z-index","20")]))]))])),l(oC,ol("nb"),M([l(oL,"position","relative"),l(oL,"border","none"),l(oL,"display","flex"),l(oL,"flex-direction","row"),l(oL,"flex-basis","auto"),l(oT,ol("e"),oV),ow((rt=function(n){switch(n){case 0:return l(oT,ol("a"),M([l(oL,"position","absolute"),l(oL,"bottom","100%"),l(oL,"left","0"),l(oL,"width","100%"),l(oL,"z-index","20"),l(oL,"margin","0 !important"),l(oP,ol("hf"),M([l(oL,"height","auto")])),l(oP,ol("wf"),M([l(oL,"width","100%")])),l(oL,"pointer-events","none"),l(oP,"*",M([l(oL,"pointer-events","auto")]))]));case 1:return l(oT,ol("b"),M([l(oL,"position","absolute"),l(oL,"bottom","0"),l(oL,"left","0"),l(oL,"height","0"),l(oL,"width","100%"),l(oL,"z-index","20"),l(oL,"margin","0 !important"),l(oL,"pointer-events","none"),l(oP,"*",M([l(oL,"pointer-events","auto")])),l(oP,ol("hf"),M([l(oL,"height","auto")]))]));case 2:return l(oT,ol("or"),M([l(oL,"position","absolute"),l(oL,"left","100%"),l(oL,"top","0"),l(oL,"height","100%"),l(oL,"margin","0 !important"),l(oL,"z-index","20"),l(oL,"pointer-events","none"),l(oP,"*",M([l(oL,"pointer-events","auto")]))]));case 3:return l(oT,ol("ol"),M([l(oL,"position","absolute"),l(oL,"right","100%"),l(oL,"top","0"),l(oL,"height","100%"),l(oL,"margin","0 !important"),l(oL,"z-index","20"),l(oL,"pointer-events","none"),l(oP,"*",M([l(oL,"pointer-events","auto")]))]));case 4:return l(oT,ol("fr"),M([l(oL,"position","absolute"),l(oL,"width","100%"),l(oL,"height","100%"),l(oL,"left","0"),l(oL,"top","0"),l(oL,"margin","0 !important"),l(oL,"pointer-events","none"),l(oP,"*",M([l(oL,"pointer-events","auto")]))]));default:return l(oT,ol("bh"),M([l(oL,"position","absolute"),l(oL,"width","100%"),l(oL,"height","100%"),l(oL,"left","0"),l(oL,"top","0"),l(oL,"margin","0 !important"),l(oL,"z-index","0"),l(oL,"pointer-events","none"),l(oP,"*",M([l(oL,"pointer-events","auto")]))]))}},l(tQ,rt,oA)))])),l(oC,ol("s"),M([l(oL,"position","relative"),l(oL,"border","none"),l(oL,"flex-shrink","0"),l(oL,"display","flex"),l(oL,"flex-direction","row"),l(oL,"flex-basis","auto"),l(oL,"resize","none"),l(oL,"font-feature-settings","inherit"),l(oL,"box-sizing","border-box"),l(oL,"margin","0"),l(oL,"padding","0"),l(oL,"border-width","0"),l(oL,"border-style","solid"),l(oL,"font-size","inherit"),l(oL,"color","inherit"),l(oL,"font-family","inherit"),l(oL,"line-height","1"),l(oL,"font-weight","inherit"),l(oL,"text-decoration","none"),l(oL,"font-style","inherit"),l(oT,ol("wrp"),M([l(oL,"flex-wrap","wrap")])),l(oT,ol(rD),M([l(oL,"-moz-user-select","none"),l(oL,"-webkit-user-select","none"),l(oL,"-ms-user-select","none"),l(oL,"user-select","none")])),l(oT,ol(rS),M([l(oL,"cursor","pointer")])),l(oT,ol("ctxt"),M([l(oL,"cursor","text")])),l(oT,ol("ppe"),M([l(oL,"pointer-events","none !important")])),l(oT,ol("cpe"),M([l(oL,"pointer-events","auto !important")])),l(oT,ol("clr"),M([l(oL,"opacity","0")])),l(oT,ol("oq"),M([l(oL,"opacity","1")])),l(oT,ol(P("hv","clr"))+":hover",M([l(oL,"opacity","0")])),l(oT,ol(P("hv","oq"))+":hover",M([l(oL,"opacity","1")])),l(oT,ol(P("fcs","clr"))+":focus",M([l(oL,"opacity","0")])),l(oT,ol(P("fcs","oq"))+":focus",M([l(oL,"opacity","1")])),l(oT,ol(P("atv","clr"))+":active",M([l(oL,"opacity","0")])),l(oT,ol(P("atv","oq"))+":active",M([l(oL,"opacity","1")])),l(oT,ol("ts"),M([l(oL,"transition",l(ti,", ",l(tQ,function(n){return n+" 160ms"},M(["transform","opacity","filter","background-color","color","font-size"]))))])),l(oT,ol("sb"),M([l(oL,"overflow","auto"),l(oL,"flex-shrink","1")])),l(oT,ol("sbx"),M([l(oL,"overflow-x","auto"),l(oT,ol("r"),M([l(oL,"flex-shrink","1")]))])),l(oT,ol("sby"),M([l(oL,"overflow-y","auto"),l(oT,ol("c"),M([l(oL,"flex-shrink","1")])),l(oT,ol("e"),M([l(oL,"flex-shrink","1")]))])),l(oT,ol("cp"),M([l(oL,"overflow","hidden")])),l(oT,ol("cpx"),M([l(oL,"overflow-x","hidden")])),l(oT,ol("cpy"),M([l(oL,"overflow-y","hidden")])),l(oT,ol("wc"),M([l(oL,"width","auto")])),l(oT,ol("bn"),M([l(oL,"border-width","0")])),l(oT,ol("bd"),M([l(oL,"border-style","dashed")])),l(oT,ol("bdt"),M([l(oL,"border-style","dotted")])),l(oT,ol("bs"),M([l(oL,"border-style","solid")])),l(oT,ol("t"),M([l(oL,"white-space","pre"),l(oL,"display","inline-block")])),l(oT,ol("it"),M([l(oL,"line-height","1.05"),l(oL,"background","transparent"),l(oL,"text-align","inherit")])),l(oT,ol("e"),oV),l(oT,ol("r"),M([l(oL,"display","flex"),l(oL,"flex-direction","row"),l(oP,ol("s"),M([l(oL,"flex-basis","0%"),l(oT,ol("we"),M([l(oL,"flex-basis","auto")])),l(oT,ol("lnk"),M([l(oL,"flex-basis","auto")]))])),l(oP,ol("hf"),M([l(oL,"align-self","stretch !important")])),l(oP,ol("hfp"),M([l(oL,"align-self","stretch !important")])),l(oP,ol("wf"),M([l(oL,"flex-grow","100000")])),l(oP,ol("ctr"),M([l(oL,"flex-grow","0"),l(oL,"flex-basis","auto"),l(oL,"align-self","stretch")])),l(oP,"u:first-of-type.acr",M([l(oL,"flex-grow","1")])),l(oP,"s:first-of-type."+r$,M([l(oL,"flex-grow","1"),l(oP,ol("cx"),M([l(oL,"margin-left","auto !important")]))])),l(oP,"s:last-of-type."+r$,M([l(oL,"flex-grow","1"),l(oP,ol("cx"),M([l(oL,"margin-right","auto !important")]))])),l(oP,"s:only-of-type."+r$,M([l(oL,"flex-grow","1"),l(oP,ol("cy"),M([l(oL,"margin-top","auto !important"),l(oL,"margin-bottom","auto !important")]))])),l(oP,"s:last-of-type.accx ~ u",M([l(oL,"flex-grow","0")])),l(oP,"u:first-of-type.acr ~ s."+r$,M([l(oL,"flex-grow","0")])),ok(function(n){switch(n){case 0:return x(M([l(oL,"align-items","flex-start")]),M([l(oL,"align-self","flex-start")]));case 1:return x(M([l(oL,"align-items","flex-end")]),M([l(oL,"align-self","flex-end")]));case 2:return x(M([l(oL,"justify-content","flex-end")]),C);case 3:return x(M([l(oL,"justify-content","flex-start")]),C);case 4:return x(M([l(oL,"justify-content","center")]),C);default:return x(M([l(oL,"align-items","center")]),M([l(oL,"align-self","center")]))}}),l(oT,ol("sev"),M([l(oL,"justify-content","space-between")])),l(oT,ol("lbl"),M([l(oL,"align-items","baseline")]))])),l(oT,ol("c"),M([l(oL,"display","flex"),l(oL,"flex-direction","column"),l(oP,ol("s"),M([l(oL,"flex-basis","0px"),l(oL,"min-height","min-content"),l(oT,ol("he"),M([l(oL,"flex-basis","auto")]))])),l(oP,ol("hf"),M([l(oL,"flex-grow","100000")])),l(oP,ol("wf"),M([l(oL,"width","100%")])),l(oP,ol("wfp"),M([l(oL,"width","100%")])),l(oP,ol("wc"),M([l(oL,"align-self","flex-start")])),l(oP,"u:first-of-type.acb",M([l(oL,"flex-grow","1")])),l(oP,"s:first-of-type."+rz,M([l(oL,"flex-grow","1"),l(oP,ol("cy"),M([l(oL,"margin-top","auto !important"),l(oL,"margin-bottom","0 !important")]))])),l(oP,"s:last-of-type."+rz,M([l(oL,"flex-grow","1"),l(oP,ol("cy"),M([l(oL,"margin-bottom","auto !important"),l(oL,"margin-top","0 !important")]))])),l(oP,"s:only-of-type."+rz,M([l(oL,"flex-grow","1"),l(oP,ol("cy"),M([l(oL,"margin-top","auto !important"),l(oL,"margin-bottom","auto !important")]))])),l(oP,"s:last-of-type.accy ~ u",M([l(oL,"flex-grow","0")])),l(oP,"u:first-of-type.acb ~ s."+rz,M([l(oL,"flex-grow","0")])),ok(function(n){switch(n){case 0:return x(M([l(oL,"justify-content","flex-start")]),M([l(oL,"margin-bottom","auto")]));case 1:return x(M([l(oL,"justify-content","flex-end")]),M([l(oL,"margin-top","auto")]));case 2:return x(M([l(oL,"align-items","flex-end")]),M([l(oL,"align-self","flex-end")]));case 3:return x(M([l(oL,"align-items","flex-start")]),M([l(oL,"align-self","flex-start")]));case 4:return x(M([l(oL,"align-items","center")]),M([l(oL,"align-self","center")]));default:return x(M([l(oL,"justify-content","center")]),C)}}),l(oP,ol("ctr"),M([l(oL,"flex-grow","0"),l(oL,"flex-basis","auto"),l(oL,"width","100%"),l(oL,"align-self","stretch !important")])),l(oT,ol("sev"),M([l(oL,"justify-content","space-between")]))])),l(oT,ol("g"),M([l(oL,"display","-ms-grid"),l(oP,".gp",M([l(oP,ol("s"),M([l(oL,"width","100%")]))])),l(oM,x("display","grid"),M([x("display","grid")])),(re=function(n){switch(n){case 0:return M([l(oL,"justify-content","flex-start")]);case 1:return M([l(oL,"justify-content","flex-end")]);case 2:return M([l(oL,"align-items","flex-end")]);case 3:return M([l(oL,"align-items","flex-start")]);case 4:return M([l(oL,"align-items","center")]);default:return M([l(oL,"justify-content","center")])}},ow(l(oS,function(n){return M([l(oP,ol("s"),M([l(oT,oN(n),re(n))]))])},oF)))])),l(oT,ol("pg"),M([l(oL,"display","block"),l(oP,ol("s:first-child"),M([l(oL,"margin","0 !important")])),l(oP,ol("s"+oN(3)+":first-child + .s"),M([l(oL,"margin","0 !important")])),l(oP,ol("s"+oN(2)+":first-child + .s"),M([l(oL,"margin","0 !important")])),ok(function(n){switch(n){case 0:case 1:case 4:default:return x(C,C);case 2:return x(C,M([l(oL,"float","right"),l(oT,"::after",M([l(oL,"content",'""'),l(oL,"display","table"),l(oL,"clear","both")]))]));case 3:return x(C,M([l(oL,"float","left"),l(oT,"::after",M([l(oL,"content",'""'),l(oL,"display","table"),l(oL,"clear","both")]))]))}})])),l(oT,ol("iml"),M([l(oL,"white-space","pre-wrap !important"),l(oL,"height","100%"),l(oL,"width","100%"),l(oL,"background-color","transparent")])),l(oT,ol("implw"),M([l(oT,ol("e"),M([l(oL,"flex-basis","auto")]))])),l(oT,ol("imlp"),M([l(oL,"white-space","pre-wrap !important"),l(oL,"cursor","text"),l(oP,ol("imlf"),M([l(oL,"white-space","pre-wrap !important"),l(oL,"color","transparent")]))])),l(oT,ol("p"),M([l(oL,"display","block"),l(oL,"white-space","normal"),l(oL,"overflow-wrap","break-word"),l(oT,ol("hbh"),M([l(oL,"z-index","0"),l(oP,ol("bh"),M([l(oL,"z-index","-1")]))])),l(oy,ol("t"),M([l(oL,"display","inline"),l(oL,"white-space","normal")])),l(oy,ol("p"),M([l(oL,"display","inline"),l(oT,"::after",M([l(oL,"content","none")])),l(oT,"::before",M([l(oL,"content","none")]))])),l(oy,ol("e"),M([l(oL,"display","inline"),l(oL,"white-space","normal"),l(oT,ol("we"),M([l(oL,"display","inline-block")])),l(oT,ol("fr"),M([l(oL,"display","flex")])),l(oT,ol("bh"),M([l(oL,"display","flex")])),l(oT,ol("a"),M([l(oL,"display","flex")])),l(oT,ol("b"),M([l(oL,"display","flex")])),l(oT,ol("or"),M([l(oL,"display","flex")])),l(oT,ol("ol"),M([l(oL,"display","flex")])),l(oP,ol("t"),M([l(oL,"display","inline"),l(oL,"white-space","normal")]))])),l(oP,ol("r"),M([l(oL,"display","inline")])),l(oP,ol("c"),M([l(oL,"display","inline-flex")])),l(oP,ol("g"),M([l(oL,"display","inline-grid")])),ok(function(n){switch(n){case 0:case 1:case 4:default:return x(C,C);case 2:return x(C,M([l(oL,"float","right")]));case 3:return x(C,M([l(oL,"float","left")]))}})])),l(oT,".hidden",M([l(oL,"display","none")])),l(oT,ol("w1"),M([l(oL,"font-weight","100")])),l(oT,ol("w2"),M([l(oL,"font-weight","200")])),l(oT,ol("w3"),M([l(oL,"font-weight","300")])),l(oT,ol("w4"),M([l(oL,"font-weight","400")])),l(oT,ol("w5"),M([l(oL,"font-weight","500")])),l(oT,ol("w6"),M([l(oL,"font-weight","600")])),l(oT,ol("w7"),M([l(oL,"font-weight","700")])),l(oT,ol("w8"),M([l(oL,"font-weight","800")])),l(oT,ol("w9"),M([l(oL,"font-weight","900")])),l(oT,ol("i"),M([l(oL,"font-style","italic")])),l(oT,ol("sk"),M([l(oL,"text-decoration","line-through")])),l(oT,ol("u"),M([l(oL,"text-decoration","underline"),l(oL,"text-decoration-skip-ink","auto"),l(oL,"text-decoration-skip","ink")])),l(oT,P(ol("u"),ol("sk")),M([l(oL,"text-decoration","line-through underline"),l(oL,"text-decoration-skip-ink","auto"),l(oL,"text-decoration-skip","ink")])),l(oT,ol("tun"),M([l(oL,"font-style","normal")])),l(oT,ol("tj"),M([l(oL,"text-align","justify")])),l(oT,ol("tja"),M([l(oL,"text-align","justify-all")])),l(oT,ol("tc"),M([l(oL,"text-align","center")])),l(oT,ol("tr"),M([l(oL,"text-align","right")])),l(oT,ol("tl"),M([l(oL,"text-align","left")])),l(oT,".modal",M([l(oL,"position","fixed"),l(oL,"left","0"),l(oL,"top","0"),l(oL,"width","100%"),l(oL,"height","100%"),l(oL,"pointer-events","none")]))]))]),oB=function(n){return M([l(oC,".v-"+n,M([l(oL,"font-feature-settings",'"'+n+'"')])),l(oC,".v-"+n+"-off",M([l(oL,"font-feature-settings",'"'+n+'" 0')]))])},oE=oz(M([l(tQ,function(n){return l(oC,".border-"+Z(n),M([l(oL,"border-width",Z(n)+"px")]))},l(ts,0,6)),l(tQ,function(n){return l(oC,".font-size-"+Z(n),M([l(oL,"font-size",Z(n)+"px")]))},l(ts,8,32)),l(tQ,function(n){return l(oC,".p-"+Z(n),M([l(oL,"padding",Z(n)+"px")]))},l(ts,0,24)),M([l(oC,".v-smcp",M([l(oL,"font-variant","small-caps")])),l(oC,".v-smcp-off",M([l(oL,"font-variant","normal")]))]),oB("zero"),oB("onum"),oB("liga"),oB("dlig"),oB("ordn"),oB("tnum"),oB("afrc"),oB("frac")])),oj="@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {"+ol("s")+ol("r")+" > "+ol("s")+" { flex-basis: auto !important; } "+ol("s")+ol("r")+" > "+ol("s")+ol("ctr")+' { flex-basis: auto !important; }}\ninput[type="search"],\ninput[type="search"]::-webkit-search-decoration,\ninput[type="search"]::-webkit-search-cancel-button,\ninput[type="search"]::-webkit-search-results-button,\ninput[type="search"]::-webkit-search-results-decoration {\n  -webkit-appearance:none;\n}\n\ninput[type=range] {\n  -webkit-appearance: none; \n  background: transparent;\n  position:absolute;\n  left:0;\n  top:0;\n  z-index:10;\n  width: 100%;\n  outline: dashed 1px;\n  height: 100%;\n  opacity: 0;\n}\n\ninput[type=range]::-moz-range-track {\n    background: transparent;\n    cursor: pointer;\n}\ninput[type=range]::-ms-track {\n    background: transparent;\n    cursor: pointer;\n}\ninput[type=range]::-webkit-slider-runnable-track {\n    background: transparent;\n    cursor: pointer;\n}\n\ninput[type=range]::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    opacity: 0.5;\n    width: 80px;\n    height: 80px;\n    background-color: black;\n    border:none;\n    border-radius: 5px;\n}\ninput[type=range]::-moz-range-thumb {\n    opacity: 0.5;\n    width: 80px;\n    height: 80px;\n    background-color: black;\n    border:none;\n    border-radius: 5px;\n}\ninput[type=range]::-ms-thumb {\n    opacity: 0.5;\n    width: 80px;\n    height: 80px;\n    background-color: black;\n    border:none;\n    border-radius: 5px;\n}\ninput[type=range][orient=vertical]{\n    writing-mode: bt-lr; /* IE */\n    -webkit-appearance: slider-vertical;  /* WebKit */\n}\n\n.explain {\n    border: 6px solid rgb(174, 121, 15) !important;\n}\n.explain > .s {\n    border: 4px dashed rgb(0, 151, 167) !important;\n}\n\n.ctr {\n    border: none !important;\n}\n.explain > .ctr > .s {\n    border: 4px dashed rgb(0, 151, 167) !important;\n}\n\n',oq=function(n){return l(ti,"",n)},oI=t(function(n,e){return{cr:e,I:C,aU:C,ap:n}}),oR=t(function(n,e){return f(tY,t(function(e,t){switch(e.$){case 0:return w(t,{aU:l(L,x(e.a,e.b),t.aU)});case 3:var r=e.a;return w(t,{I:l(L,{cr:"\n}",I:C,aU:e.b,ap:"@supports ("+r.a+":"+r.b+") {"+n.ap},t.I)});case 5:var o=e.b;return w(t,{I:l(L,l(oR,l(oI,n.ap+" + "+e.a,""),o),t.I)});case 1:var a=e.b;return w(t,{I:l(L,l(oR,l(oI,n.ap+" > "+e.a,""),a),t.I)});case 2:return a=e.b,w(t,{I:l(L,l(oR,l(oI,n.ap+" "+e.a,""),a),t.I)});case 4:var i=e.b;return w(t,{I:l(L,l(oR,l(oI,P(n.ap,e.a),""),i),t.I)});default:var c=e.a;return w(t,{I:l(L,l(oR,l(oI,n.ap,""),c),t.I)})}}),n,e)}),oH=P(oj,(rr=P(o_,oE),ro=function(n){return n.aU.b?n.ap+"{"+oq(l(tQ,function(n){return n.a+":"+n.b+";"},n.aU))+n.cr+"}":""},ra=function(n){return P(ro(n),oq(l(tQ,ra,n.I)))},oq(l(tQ,ra,f(tY,t(function(n,e){var t=n.b;return l(L,l(oR,l(oI,n.a,""),t),e)}),C,rr))))),oO=function(n){switch(n.fJ){case 0:return f(ob,"div",C,M([f(ob,"style",C,M([nU(oH)]))]));case 1:return nU("");default:return f(ob,"elm-ui-static-rules",M([l(ox,"rules",nh(oH))]),C)}},oW=t(function(n,e){return f(tu,t(function(e,t){return t.push(n(e)),t}),[],e)}),oU=t(function(n,e){for(;;){if(!e.b)return!1;var t=e.b;if(n(e.a))return!0;e=t}}),oG=function(n){switch(n.$){case 0:return"serif";case 1:return"sans-serif";case 2:return"monospace";case 3:case 4:return'"'+n.a+'"';default:return'"'+n.a.h_+'"'}},oY=function(n){switch(n.$){case 0:return"smcp"===n.a;case 1:return!1;default:return"smcp"===n.a&&1===n.b}},oQ=function(n){return 5===n.$&&l(oU,oY,n.a.gm)},oX=t(function(n,e){return 0>h(n,e)?n:e}),oJ=r(function(n,e,t){var r=e.a,o=e.b;return n?t+"\n  "+r+": "+o+" !important;":t+"\n  "+r+": "+o+";"}),oZ=o(function(n,e,t,r){if(1===e.$)return M([t+"{"+f(tu,oJ(!1),"",r)+"\n}"]);switch(e.a){case 1:switch(n.hD){case 0:return C;case 2:return M([t+"-hv {"+f(tu,oJ(!0),"",r)+"\n}"]);default:return M([t+"-hv:hover {"+f(tu,oJ(!1),"",r)+"\n}"])}case 0:var o=f(tu,oJ(!1),"",r);return M([t+"-fs:focus {"+o+"\n}",".s:focus "+t+"-fs  {"+o+"\n}",t+"-fs:focus-within {"+o+"\n}",".ui-slide-bar:focus + "+ol("s")+" .focusable-thumb"+t+"-fs {"+o+"\n}"]);default:return M([t+"-act:active {"+f(tu,oJ(!1),"",r)+"\n}"])}}),oK=function(n){switch(n.$){case 0:return'"'+n.a+'"';case 1:return'"'+n.a+'" 0';default:return'"'+n.a+'" '+Z(n.b)}},o0=function(n){return 5===n.$?to(l(ti,", ",l(tQ,oK,n.a.gm))):ta},o1=r(function(n,e,t){switch(e.$){case 0:return s(oZ,n,t,e.a,e.b);case 13:return s(oZ,n,t,"."+(a=e.a),M([l(oc,"box-shadow",e.b)]));case 12:return s(oZ,n,t,"."+(a=e.a),M([l(oc,"opacity",Z(l(tP,0,l(oX,1,1-e.b))))]));case 2:var o=e.a;return s(oZ,n,t,".font-size-"+Z(o),M([l(oc,"font-size",Z(o)+"px")]));case 1:var a=e.a,i=e.b,c=l(ti,", ",l(os,o0,i));return s(oZ,n,t,"."+a,M([l(oc,"font-family",l(ti,", ",l(tQ,oG,i))),l(oc,"font-feature-settings",c),l(oc,"font-variant",l(oU,oQ,i)?"small-caps":"normal")]));case 3:return s(oZ,n,t,"."+(E=e.a),M([l(oc,e.b,q=e.c)]));case 4:return s(oZ,n,t,"."+(E=e.a),M([l(oc,e.b,od(e.c))]));case 5:var u=e.a,d=e.b,p=e.c,m=Z(p)+"px",v=Z(d)+"px",g=".ar",h=".al",b=Z(p/2)+"px",y=Z(d/2)+"px";return oz(M([s(oZ,n,t,(E="."+u)+".r > .s + .s",M([l(oc,"margin-left",v)])),s(oZ,n,t,E+".wrp.r > .s",M([l(oc,"margin",b+" "+y)])),s(oZ,n,t,E+".c > .s + .s",M([l(oc,"margin-top",m)])),s(oZ,n,t,E+".pg > .s + .s",M([l(oc,"margin-top",m)])),s(oZ,n,t,E+".pg > "+h,M([l(oc,"margin-right",v)])),s(oZ,n,t,E+".pg > "+g,M([l(oc,"margin-left",v)])),s(oZ,n,t,P(E,".p"),M([l(oc,"line-height","calc(1em + "+Z(p)+"px)")])),s(oZ,n,t,"textarea.s"+E,M([l(oc,"line-height","calc(1em + "+Z(p)+"px)"),l(oc,"height","calc(100% + "+Z(p)+"px)")])),s(oZ,n,t,E+".p > "+h,M([l(oc,"margin-right",v)])),s(oZ,n,t,E+".p > "+g,M([l(oc,"margin-left",v)])),s(oZ,n,t,E+".p::after",M([l(oc,"content","''"),l(oc,"display","block"),l(oc,"height","0"),l(oc,"width","0"),l(oc,"margin-top",Z(-1*(p/2|0))+"px")])),s(oZ,n,t,E+".p::before",M([l(oc,"content","''"),l(oc,"display","block"),l(oc,"height","0"),l(oc,"width","0"),l(oc,"margin-bottom",Z(-1*(p/2|0))+"px")]))]));case 7:g=e.c;var w=e.d;return h=e.e,s(oZ,n,t,E="."+(u=e.a),M([l(oc,"padding",Z(e.b)+"px "+Z(g)+"px "+Z(w)+"px "+Z(h)+"px")]));case 6:return g=e.c,w=e.d,h=e.e,s(oZ,n,t,E="."+(u=e.a),M([l(oc,"border-width",Z(e.b)+"px "+Z(g)+"px "+Z(w)+"px "+Z(h)+"px")]));case 8:var T=e.a,L=r(function(n,e,t){for(;;)switch(t.$){case 0:return Z(t.a)+"px";case 1:var r=x(n,e);if(1===r.a.$)return 1===r.b.$?"max-content":"minmax(max-content, "+Z(o=r.b.a)+"px)";if(1===r.b.$)return"minmax("+Z(r.a.a)+"px, max-content)";var o=r.b.a;return"minmax("+Z(r.a.a)+"px, "+Z(o)+"px)";case 2:var a=t.a,i=x(n,e);return 1===i.a.$?1===i.b.$?Z(a)+"fr":"minmax(max-content, "+Z(o=i.b.a)+"px)":1===i.b.$?"minmax("+Z(i.a.a)+"px, "+Z(a)+"frfr)":(o=i.b.a,"minmax("+Z(i.a.a)+"px, "+Z(o)+"px)");case 3:var c=t.b;n=to(t.a),t=c;continue;default:c=t.b,e=to(t.a),t=c;continue}}),F=function(n){return f(L,ta,ta,n)},$=(F(T.iy.a),F(T.iy.b)),z="grid-template-rows: "+l(ti," ",l(tQ,F,T.im))+";",S="-ms-grid-rows: "+l(ti,$,l(tQ,F,T.ax))+";",D="-ms-grid-columns: "+l(ti,$,l(tQ,F,T.ax))+";",N="grid-row-gap:"+F(T.iy.b)+";",k="grid-column-gap:"+F(T.iy.a)+";",V="grid-template-columns: "+l(ti," ",l(tQ,F,T.ax))+";";return M([(E=".grid-rows-"+l(ti,"-",l(tQ,r2,T.im))+"-cols-"+l(ti,"-",l(tQ,r2,T.ax))+"-space-x-"+r2(T.iy.a)+"-space-y-"+r2(T.iy.b))+"{"+D+S+"}","@supports (display:grid) {"+E+"{"+V+z+k+N+"}}"]);case 9:var A=e.a,_=l(ti," ",M(["-ms-grid-row: "+Z(A.ao)+";","-ms-grid-row-span: "+Z(A.e3)+";","-ms-grid-column: "+Z(A.g3)+";","-ms-grid-column-span: "+Z(A.ja)+";"])),B=l(ti," ",M(["grid-row: "+Z(A.ao)+" / "+Z(A.ao+A.e3)+";","grid-column: "+Z(A.g3)+" / "+Z(A.g3+A.ja)+";"]));return M([(E=".grid-pos-"+Z(A.ao)+"-"+Z(A.g3)+"-"+Z(A.ja)+"-"+Z(A.e3))+"{"+_+"}","@supports (display:grid) {"+E+"{"+B+"}}"]);case 11:var E=e.a;return l(oS,function(e){return f(o1,n,e,to(E))},e.b);default:var j=e.a,q=function(n){switch(n.$){case 0:return ta;case 1:var e=n.a,t=e.b,r=e.c;return to("translate3d("+Z(e.a)+"px, "+Z(t)+"px, "+Z(r)+"px)");default:var o=n.a,a=o.b,i=o.c,c=n.b,u=c.a,l=c.b,f=c.c,s=n.c,d=s.a,p=s.b,m=s.c,v=n.d;return to("translate3d("+Z(o.a)+"px, "+Z(a)+"px, "+Z(i)+"px) "+("scale3d("+Z(u)+", "+Z(l)+", ")+Z(f)+") "+("rotate3d("+Z(d)+", "+Z(p)+", "+Z(m)+", ")+Z(v)+"rad)")}}(j),I=x(E=r9(j),q);return I.a.$||I.b.$?C:s(oZ,n,t,"."+(u=I.a.a),M([l(oc,"transform",I.b.a)]))}}),o3=t(function(n,e){var r;return r=l(tQ,function(e){var t=f(o1,n,e,ta);return x(r6(e),l(oW,nh,t))},e),f(tu,t(function(n,e){return f(nb,n.a,n.b,e)}),{},r)}),o2=t(function(n,e){return n+" {"+l(ti,"",l(tQ,function(n){return n.a+": "+n.b+";"},e))+"}"}),o5=r(function(n,e,t){var r=t.b;return M([l(o2,"."+n+"."+e+", ."+n+" ."+e,t.a),l(o2,"."+n+"."+e+"> .t, ."+n+" ."+e+" > .t",r)])}),o4=r(function(n,e,t){var r=e.a,o=e.b,a=v(n,t)?n:t+" ."+n;return l(ti," ",P(f(o5,a,"cap",o),f(o5,a,"fs",r)))}),o9=t(function(n,e){var t=v(n,e)?n:e+" ."+n;return l(ti," ",M([l(o2,"."+t+".cap, ."+t+" .cap",M([x("line-height","1")])),l(o2,"."+t+".cap> .t, ."+t+" .cap > .t",M([x("vertical-align","0"),x("line-height","1")]))]))}),o6=r(function(n,e,t){return{e3:e/n,bx:n,gn:t}}),o7=t(function(n,e){return f(tY,t(function(e,t){return n(e)?l(L,e,t):t}),C,e)}),o8=function(n){return n.b?to(f(tu,oX,n.a,n.b)):ta},an=function(n){var e=M([n.gV,n.gI,n.ha,n.hV]),t=l(rd,n.ha,o8(e)),r=l(rd,n.gI,o8(l(o7,function(n){return!v(n,t)},e))),o=l(rd,n.gV,e.b?to(f(tu,tP,e.a,e.b)):ta);return{gV:f(o6,1/(o-r),o-r,1-o),e2:f(o6,1/(o-t),o-t,1-o)}},ae=function(n){return x(M([x("display","block")]),M([x("display","inline-block"),x("line-height",Z(n.e3)),x("vertical-align",Z(n.gn)+"em"),x("font-size",Z(n.bx)+"em")]))},at=t(function(n,e){var r,o,a,i=f(tu,t(function(e,t){var r;return{c0:P(t.c0,f(o1,n,e,ta)),cd:1===(r=1===e.$?to(x(e.a,e.b)):ta).$?t.cd:l(L,r.a,t.cd)}}),{c0:C,cd:C},e),c=i.c0;return P((r=i.cd,o=function(n){return 4===n.$?to("@import url('"+n.b+"');"):ta},a=l(tQ,tT,r),P(l(ti,"\n",l(tQ,function(n){return l(ti,"\n",l(os,o,n.b))},r)),l(ti,"\n",l(tQ,function(n){var e,r=n.a,o=(e=n.b,f(tu,t(function(n,e){if(1===e.$&&5===n.$){var t=n.a.gt;if(1===t.$)return e;var r=t.a;return to(x(ae(an(r).e2),ae(an(r).gV)))}return e}),ta,e));return l(ti,"",l(tQ,1===o.$?o9(r):l(o4,r,o.a),a))},r)))),oq(c))}),ar=t(function(n,e){switch(n.fJ){case 0:case 1:return f(ob,"div",C,M([f(ob,"style",C,M([nU(l(at,n,e))]))]));default:return f(ob,"elm-ui-rules",M([l(ox,"rules",l(o3,n,e))]),C)}}),ao=o(function(n,e,t,r){var o=l(ar,e,f(tu,oi,x(r3,oh(e.hq)),t).b);return n?l(L,x("static-stylesheet",oO(e)),l(L,x("dynamic-stylesheet",o),r)):l(L,x("dynamic-stylesheet",o),r)}),aa=o(function(n,e,t,r){var o=l(ar,e,f(tu,oi,x(r3,oh(e.hq)),t).b);return n?l(L,oO(e),l(L,o,r)):l(L,o,r)}),ai=rN(45),ac=rN(37),au=function(n){return nX(n9(n))},al=nQ("p"),af=t(function(n,e){var t=e.a;if(n.$){var r=n.a;return v(r&e.b,r)}var o=n.a;return v(o&t,o)}),as=nQ("s"),ad=nQ("u"),ap=rN(44),am=rN(39),av=i(function(n,e,r,o,a,i){var c=t(function(n,e){if(1===o.$){var t=o.a;return f(au,n,e,function(){switch(a.$){case 0:return t;case 2:return s(ao,!1,a.a,a.b,t);default:return s(ao,!0,a.a,a.b,t)}}())}var r=o.a;return l(function(){switch(n){case"div":return r1;case"p":return al;default:return ob(n)}}(),e,function(){switch(a.$){case 0:return r;case 2:return s(aa,!1,a.a,a.b,r);default:return s(aa,!0,a.a,a.b,r)}}())}),u=function(){switch(e.$){case 0:return l(c,"div",r);case 1:return l(c,e.a,r);default:return f(ob,e.a,r,M([l(c,e.b,M([r0("s e")]))]))}}();switch(i){case 0:return l(af,am,n)&&!l(af,ap,n)?u:l(af,rX,n)?l(ad,M([r0(l(ti," ",M(["s","e","ctr","ccy","acr"])))]),M([u])):l(af,rJ,n)?l(as,M([r0(l(ti," ",M(["s","e","ctr","ccy",r$])))]),M([u])):u;case 1:return l(af,ac,n)&&!l(af,ai,n)?u:l(af,rZ,n)?l(as,M([r0(l(ti," ",M(["s","e","ctr",rz])))]),M([u])):l(af,rQ,n)?l(ad,M([r0(l(ti," ",M(["s","e","ctr","acb"])))]),M([u])):u;default:return u}}),ag=function(n){return!n.b},ah=function(n){return l(r1,M([r0("s t wc hc")]),M([nU(n)]))},ab=function(n){return l(r1,M([r0("s t wf hf")]),M([nU(n)]))},ax=r(function(n,e,r){var o=t(function(e,t){var r=e.a,o=e.b,a=t.a,i=t.b;switch(o.$){case 0:var c=o.a;return v(n,4),x(l(L,x(r,c(n)),a),i);case 1:var u=o.a;return v(n,4),x(l(L,x(r,l(u.hE,rO,n)),a),ag(i)?u.iE:P(u.iE,i));case 2:var f=o.a;return x(l(L,x(r,v(n,2)?ab(f):ah(f)),a),i);default:return x(a,i)}}),a=t(function(e,t){var r=t.a,o=t.b;switch(e.$){case 0:var a=e.a;return v(n,4),x(l(L,a(n),r),o);case 1:var i=e.a;return v(n,4),x(l(L,l(i.hE,rO,n),r),ag(o)?i.iE:P(i.iE,o));case 2:var c=e.a;return x(l(L,v(n,2)?ab(c):ah(c),r),o);default:return x(r,o)}});if(1===e.$){var i=e.a,c=f(tY,o,x(C,C),i),u=c.a;if((g=ag(m=c.b)?r.iE:P(r.iE,m)).b){var p=g;return rW({hE:s(av,r.a5,r.a8,r.a$,rH(f(rY,"nearby-element-pls",u,r.a2))),iE:p})}return rU(d(av,r.a5,r.a8,r.a$,rH(f(rY,"nearby-element-pls",u,r.a2)),rO))}var m,g,h=e.a,b=f(tY,a,x(C,C),h),y=b.a;return(g=ag(m=b.b)?r.iE:P(r.iE,m)).b?(p=g,rW({hE:s(av,r.a5,r.a8,r.a$,rE(l(rG,y,r.a2))),iE:p})):rU(d(av,r.a5,r.a8,r.a$,rE(l(rG,y,r.a2)),rO))}),ay=r(function(n,e,t){return{$:3,a:n,b:e,c:t}}),aw=t(function(n,e){return{$:0,a:n,b:e}}),aP=t(function(n,e){var t=e.a,r=e.b;return n.$?l(aw,t,n.a|r):l(aw,n.a|t,r)}),aC=function(n){return{$:1,a:n}},aT=t(function(n,e){return{$:3,a:n,b:e}}),aL=function(n){return{$:2,a:n}},aM=t(function(n,e){return l(r1,M([r0(function(){switch(n){case 0:return l(ti," ",M(["nb","e","a"]));case 1:return l(ti," ",M(["nb","e","b"]));case 2:return l(ti," ",M(["nb","e","or"]));case 3:return l(ti," ",M(["nb","e","ol"]));case 4:return l(ti," ",M(["nb","e","fr"]));default:return l(ti," ",M(["nb","e","bh"]))}}())]),M([function(){switch(e.$){case 3:return nU("");case 2:return ah(e.a);case 0:return(0,e.a)(2);default:return l(e.a.hE,rO,2)}}()]))}),aF=r(function(n,e,t){var r=l(aM,n,e);switch(t.$){case 0:return 5===n?aC(M([r])):aL(M([r]));case 1:var o=t.a;return 5===n?aC(l(L,r,o)):l(aT,o,M([r]));case 2:var a=t.a;return 5===n?l(aT,M([r]),a):aL(l(L,r,a));default:return o=t.a,a=t.b,5===n?l(aT,l(L,r,o),a):l(aT,o,l(L,r,a))}}),a$=t(function(n,e){return{$:2,a:n,b:e}}),az=function(n){return{$:1,a:n}},aS=t(function(n,e){switch(e.$){case 0:return az(n);case 1:return l(a$,e.a,n);default:return l(a$,e.a,e.b)}}),aD=function(n){switch(n){case 0:return"ah al";case 2:return"ah ar";default:return"ah cx"}},aN=function(n){switch(n){case 0:return"av at";case 2:return"av ab";default:return"av cy"}},ak=t(function(n,e){return l(n1,n2.test(n)?"data-"+n:n,n6(e))}),aV=o(function(n,e,t,r){return{$:2,a:n,b:e,c:t,d:r}}),aA=function(n){return{$:1,a:n}},a_=t(function(n,e){switch(n.$){case 0:switch(e.$){case 0:return aA(y(o=e.a,0,0));case 1:return aA(y(0,a=e.a,0));case 2:return aA(y(0,0,i=e.a));case 3:return aA(t=e.a);case 4:var t=e.a,r=e.b;return s(aV,y(0,0,0),y(1,1,1),t,r);default:return t=e.a,s(aV,y(0,0,0),t,y(0,0,1),0)}case 1:var o=(c=n.a).a,a=c.b,i=c.c;switch(e.$){case 0:return aA(y(e.a,a,i));case 1:return aA(y(o,e.a,i));case 2:return aA(y(o,a,e.a));case 3:return aA(t=e.a);case 4:return t=e.a,r=e.b,s(aV,c,y(1,1,1),t,r);default:return s(aV,c,e.a,y(0,0,1),0)}default:o=(c=n.a).a,a=c.b,i=c.c;var c,u=n.b,l=n.c;switch(r=n.d,e.$){case 0:return s(aV,y(e.a,a,i),u,l,r);case 1:return s(aV,y(o,e.a,i),u,l,r);case 2:return s(aV,y(o,a,e.a),u,l,r);case 3:return s(aV,e.a,u,l,r);case 4:return s(aV,c,u,e.a,e.b);default:return s(aV,c,e.a,l,r)}}}),aB=rN(7),aE=rN(36),aj=t(function(n,e){return l(aw,n.a|e.a,n.b|e.b)}),aq=l(aw,0,0),aI=function(n){switch(n.$){case 0:var e=Z(n.a),t="height-px-"+e;return y(aq,"he "+t,M([f(ay,t,"height",e+"px")]));case 1:return y(l(aP,aE,aq),"hc",C);case 2:var r=n.a;return 1===r?y(l(aP,ac,aq),"hf",C):y(l(aP,ac,aq),"hfp height-fill-"+Z(r),M([f(ay,"s.c > "+ol("height-fill-"+Z(r)),"flex-grow",Z(1e5*r))]));case 3:var o=n.a,a=n.b,i="min-height-"+Z(o),c=f(ay,i,"min-height",Z(o)+"px !important"),u=aI(a),s=u.b,d=u.c;return y(l(aP,ai,u.a),i+" "+s,l(L,c,d));default:var p=n.a,m=(a=n.b,c=f(ay,i="max-height-"+Z(p),"max-height",Z(p)+"px"),aI(a));return s=m.b,d=m.c,y(l(aP,ai,m.a),i+" "+s,l(L,c,d))}},aR=rN(38),aH=function(n){switch(n.$){case 0:var e=n.a;return y(aq,"we width-px-"+Z(e),M([f(ay,"width-px-"+Z(e),"width",Z(e)+"px")]));case 1:return y(l(aP,aR,aq),"wc",C);case 2:var t=n.a;return 1===t?y(l(aP,am,aq),"wf",C):y(l(aP,am,aq),"wfp width-fill-"+Z(t),M([f(ay,"s.r > "+ol("width-fill-"+Z(t)),"flex-grow",Z(1e5*t))]));case 3:var r=n.a,o=n.b,a="min-width-"+Z(r),i=f(ay,a,"min-width",Z(r)+"px"),c=aH(o),u=c.b,s=c.c;return y(l(aP,ap,c.a),a+" "+u,l(L,i,s));default:var d=n.a,p=(o=n.b,i=f(ay,a="max-width-"+Z(d),"max-width",Z(d)+"px"),aH(o));return u=p.b,s=p.c,y(l(aP,ap,p.a),a+" "+u,l(L,i,s))}},aO=rN(27),aW=t(function(n,e){if(v(n,aO)){if(3!==e.$)return!1;switch(e.c){case"0px":case"1px":case"2px":case"3px":case"4px":case"5px":case"6px":return!0;default:return!1}}else switch(e.$){case 2:var t=e.a;return t>=8&&32>=t;case 7:var r=e.b,o=e.c,a=e.e;return v(r,e.d)&&v(r,o)&&v(r,a)&&r>=0&&24>=r;default:return!1}}),aU=rN(6),aG=rN(30),aY=rN(29),aQ=u(function(n,e,t,r,o,a,i,c){for(;;){if(!c.b){var u=r9(r);return 1===u.$?{a$:l(L,r0(n),a),a2:i,a5:t,a8:e,iE:o}:{a$:l(L,r0(n+" "+u.a),a),a2:i,a5:t,a8:e,iE:l(L,{$:10,a:r},o)}}var s=c.a,d=c.b;switch(s.$){case 0:n=b=n,e=x=e,t=y=t,r=w=r,o=C=o,c=d;continue;case 3:var p=s.b;if(l(af,v=s.a,t)){n=b=n,e=x=e,t=y=t,r=w=r,o=C=o,c=d;continue}n=b=p+" "+n,e=x=e,t=y=l(aP,v,t),r=w=r,o=C=o,c=d;continue;case 1:n=b=n,e=x=e,t=y=t,r=w=r,o=C=o,a=l(L,s.a,a),c=d;continue;case 4:var m=s.b;if(l(af,v=s.a,t)){n=b=n,e=x=e,t=y=t,r=w=r,o=C=o,c=d;continue}if(l(aW,v,m)){n=b=r6(m)+" "+n,e=x=e,t=y=l(aP,v,t),r=w=r,o=C=o,c=d;continue}n=b=r6(m)+" "+n,e=x=e,t=y=l(aP,v,t),r=w=r,o=C=l(L,m,o),c=d;continue;case 10:var v,g=s.b;n=b=n,e=x=e,t=y=l(aP,v=s.a,t),r=w=l(a_,r,g),o=C=o,c=d;continue;case 7:var h=s.a;if(l(af,aU,t)){n=b=n,e=x=e,t=y=t,r=w=r,o=C=o,c=d;continue}switch(h.$){case 0:var b="we width-px-"+Z(z=h.a)+" "+n,x=e,y=l(aP,aU,t),w=r,C=l(L,f(ay,"width-px-"+Z(z),"width",Z(z)+"px"),o);n=b,e=x,t=y,r=w,o=C,c=d;continue;case 1:n=b=n+" wc",e=x=e,t=y=l(aP,aR,l(aP,aU,t)),r=w=r,o=C=o,c=d;continue;case 2:if(1===(F=h.a)){n=b=n+" wf",e=x=e,t=y=l(aP,am,l(aP,aU,t)),r=w=r,o=C=o,c=d;continue}b=n+" wfp width-fill-"+Z(F),x=e,y=l(aP,am,l(aP,aU,t)),w=r,C=l(L,f(ay,"s.r > "+ol("width-fill-"+Z(F)),"flex-grow",Z(1e5*F)),o),n=b,e=x,t=y,r=w,o=C,c=d;continue;default:var T=aH(h),M=T.c;b=n+" "+T.b,x=e,y=l(aj,T.a,l(aP,aU,t)),w=r,C=P(M,o),n=b,e=x,t=y,r=w,o=C,c=d;continue}case 8:var F,$=s.a;if(l(af,aB,t)){n=b=n,e=x=e,t=y=t,r=w=r,o=C=o,c=d;continue}switch($.$){case 0:var z,S=Z(z=$.a)+"px",D="height-px-"+S;n=b="he "+D+" "+n,e=x=e,t=y=l(aP,aB,t),r=w=r,o=C=l(L,f(ay,D,"height ",S),o),c=d;continue;case 1:n=b="hc "+n,e=x=e,t=y=l(aP,aE,l(aP,aB,t)),r=w=r,o=C=o,c=d;continue;case 2:if(1===(F=$.a)){n=b="hf "+n,e=x=e,t=y=l(aP,ac,l(aP,aB,t)),r=w=r,o=C=o,c=d;continue}b=n+" hfp height-fill-"+Z(F),x=e,y=l(aP,ac,l(aP,aB,t)),w=r,C=l(L,f(ay,"s.c > "+ol("height-fill-"+Z(F)),"flex-grow",Z(1e5*F)),o),n=b,e=x,t=y,r=w,o=C,c=d;continue;default:var N=aI($);M=N.c,b=n+" "+N.b,x=e,y=l(aj,N.a,l(aP,aB,t)),w=r,C=P(M,o),n=b,e=x,t=y,r=w,o=C,c=d;continue}case 2:var k=s.a;switch(k.$){case 0:n=b=n,e=x=l(aS,"main",e),t=y=t,r=w=r,o=C=o,c=d;continue;case 1:n=b=n,e=x=l(aS,"nav",e),t=y=t,r=w=r,o=C=o,c=d;continue;case 2:n=b=n,e=x=l(aS,"footer",e),t=y=t,r=w=r,o=C=o,c=d;continue;case 3:n=b=n,e=x=l(aS,"aside",e),t=y=t,r=w=r,o=C=o,c=d;continue;case 4:var V=k.a;if(V>1){if(7>V){n=b=n,e=x=l(aS,"h"+Z(V),e),t=y=t,r=w=r,o=C=o,c=d;continue}n=b=n,e=x=l(aS,"h6",e),t=y=t,r=w=r,o=C=o,c=d;continue}n=b=n,e=x=l(aS,"h1",e),t=y=t,r=w=r,o=C=o,c=d;continue;case 9:n=b=n,e=x=e,t=y=t,r=w=r,o=C=o,c=d;continue;case 8:n=b=n,e=x=e,t=y=t,r=w=r,o=C=o,a=l(L,l(ak,"role","button"),a),c=d;continue;case 5:n=b=n,e=x=e,t=y=t,r=w=r,o=C=o,a=l(L,l(ak,"aria-label",k.a),a),c=d;continue;case 6:n=b=n,e=x=e,t=y=t,r=w=r,o=C=o,a=l(L,l(ak,"aria-live","polite"),a),c=d;continue;default:n=b=n,e=x=e,t=y=t,r=w=r,o=C=o,a=l(L,l(ak,"aria-live","assertive"),a),c=d;continue}case 9:var A=s.a,_=s.b;M=function(){switch(_.$){case 3:case 2:case 0:return o;default:return P(o,_.a.iE)}}(),n=b=n,e=x=e,t=y=t,r=w=r,o=C=M,i=f(aF,A,_,i),c=d;continue;case 6:var B=s.a;if(l(af,aG,t)){n=b=n,e=x=e,t=y=t,r=w=r,o=C=o,c=d;continue}n=b=aD(B)+" "+n,e=x=e,t=y=function(n){switch(B){case 1:return l(aP,rJ,n);case 2:return l(aP,rX,n);default:return n}}(l(aP,aG,t)),r=w=r,o=C=o,c=d;continue;default:var E=s.a;if(l(af,aY,t)){n=b=n,e=x=e,t=y=t,r=w=r,o=C=o,c=d;continue}n=b=aN(E)+" "+n,e=x=e,t=y=function(n){switch(E){case 1:return l(aP,rZ,n);case 2:return l(aP,rQ,n);default:return n}}(l(aP,aY,t)),r=w=r,o=C=o,c=d;continue}}}),aX={$:0},aJ=o(function(n,e,t,r){var o,a;return f(ax,n,r,(o=function(n){switch(n){case 0:return"s r";case 1:return"s c";case 2:return"s e";case 3:return"s g";case 4:return"s p";default:return"s pg"}}(n),a=tp(t),8===aQ.a?aQ.f(o,e,aq,aX,C,C,rR,a):aQ(o)(e)(aq)(aX)(C)(C)(rR)(a)))}),aZ={$:0},aK=function(n){return 4===n.$&&11===n.b.$&&!n.b.a},a0=function(n){return rA(r0(n))},a1=function(n){return{$:8,a:n}},a3=t(function(n,e){return l(nZ,n,{$:0,a:e})}),a2=l(rs,rA,function(n){return l(a3,"click",tS(n))}),a5=t(function(n,e){return l(nZ,n,{$:2,a:e})}),a4=l(rF,rN(21),rS),a9={$:1},a6=function(n){return{$:7,a:n}},a7=t(function(n,e){var t=e.b0,r=e.hT;return s(aJ,2,rI,l(L,a6(a9),l(L,a1(a9),l(L,a0("ccx ccy sbt "+rD),l(L,a4,l(L,l(oU,aK,n)?aZ:a0("focusable"),l(L,rB(r_),l(L,rA(l(n1,"tabIndex",Z(0))),function(){if(1===t.$)return l(L,rA(rq(!0)),n);var e,r=t.a;return l(L,a2(r),l(L,(e=function(n){return v(n,"Enter")||v(n," ")?to(r):ta},rA(l(a5,"keydown",l(ni,function(n){return x(n,!0)},l(na,function(n){var t=e(n);return 1===t.$?{$:1,a:"No key matched"}:tS(t.a)},l(nr,"key",nt)))))),n))}()))))))),rE(M([r])))}),a8=rw(1),ie=r(function(n,e,t){return{$:4,a:n,b:e,c:t}}),it=t(function(n,e){return{$:4,a:n,b:e}}),ir=rN(8),io=function(n){var e=n.b,t=n.c,r=n.d;return r4(n.a)+"-"+r4(e)+"-"+r4(t)+"-"+r4(r)},ia=function(n){return l(it,ir,f(ie,"bg-"+io(n),"background-color",n))},ii=rN(14),ic=function(n){return l(it,ii,f(ie,"fc-"+io(n),"color",n))},iu=t(function(n,e){return s(aJ,1,rI,l(L,a0("ct cl"),l(L,a1(a9),l(L,a6(a9),n))),rE(e))}),il=t(function(n,e){return s(aJ,2,rI,l(L,a6(a9),l(L,a1(a9),n)),rE(M([e])))}),is={$:2,a:1},id=rN(10),ip=function(n){var e=n.gC,t=n.iC;if(t.b){if(t.b.b)return l(it,id,f(ay,"bg-grad-"+l(ti,"-",l(L,r4(e),l(tQ,io,t))),"background-image","linear-gradient("+l(ti,", ",l(L,Z(e)+"rad",l(tQ,od,t)))+")"));var r=t.a;return l(it,ir,f(ie,"bg-"+io(r),"background-color",r))}return aZ},im={$:3},iv=function(n){return{$:0,a:n}},ig=t(function(n,e){return l(il,M([a6(is),a1(iv(n)),ia(e)]),im)}),ih=function(n){return f(rL,n,77,134)},ib=rK("alt"),ix=function(n){return l(rK,"src",n6(n))},iy=t(function(n,e){var t=e.ab,r=e.W,o=l(o7,function(n){switch(n.$){case 7:case 8:return!0;default:return!1}},n);return s(aJ,2,rI,l(L,a0("ic"),n),rE(M([s(aJ,2,az("img"),P(M([rA(ix(t)),rA(ib(r))]),o),rE(C))])))}),iw=t(function(n,e){return{$:9,a:n,b:e}}),iP=t(function(n,e){return 3===e.$?aZ:l(iw,n,e)}),iC=function(n){return l(iP,4,n)},iT=a0("i"),iL=function(n){return{$:1,a:n}},iM=t(function(n,e){return{$:10,a:n,b:e}}),iF=rN(26),i$=function(n){return l(iM,iF,iL(n))},iz=function(n){return{$:0,a:n}},iS=rN(25),iD=function(n){return l(iM,iS,iz(-n))},iN=a(function(n,e,t,r,o){return{$:7,a:n,b:e,c:t,d:r,e:o}}),ik=rN(2),iV=function(n){return l(it,ik,d(iN,"p-"+Z(n),n,n,n,n))},iA=o(function(n,e,t,r){return"pad-"+Z(n)+"-"+Z(e)+"-"+Z(t)+"-"+Z(r)}),i_=function(n){var e=n.aX,t=n.aW,r=n.aK,o=n.aQ;return v(e,t)&&v(e,r)&&v(e,o)?l(it,ik,d(iN,"p-"+Z(e),e,e,e,e)):l(it,ik,d(iN,s(iA,e,t,r,o),e,t,r,o))},iB=t(function(n,e){return v(n,e)?l(it,ik,d(iN,"p-"+Z(n),n,n,n,n)):l(it,ik,d(iN,"p-"+Z(n)+"-"+Z(e),e,n,e,n))}),iE=t(function(n,e){return{$:1,a:n,b:e}}),ij=rN(5),iq=function(n){return n.toLowerCase()},iI=function(n){return M(n.trim().split(/\s+/g))},iR=t(function(n,e){return P(e,function(){switch(n.$){case 0:return"serif";case 1:return"sans-serif";case 2:return"monospace";case 3:case 4:return l(ti,"-",iI(iq(n.a)));default:return l(ti,"-",iI(iq(n.a.h_)))}}())}),iH=function(n){return{$:3,a:n}},iO=l(it,ij,l(iE,f(tu,iR,"ff-",ri=M([iH("poppins")])),ri)),iW=o(function(n,e,t,r){return{$:0,a:n,b:e,c:t,d:r}}),iU=r(function(n,e,t){return s(iW,n,e,t,1)}),iG=r(function(n,e,t){return s(iW,n/255,e/255,t/255,1)}),iY=rN(17),iQ=function(n){return{$:2,a:n}},iX=rN(4),iJ=function(n){return l(it,iX,iQ(n))},iZ=r(function(n,e,t){return{$:5,a:n,b:e,c:t}}),iK=rN(3),i0=t(function(n,e){return"spacing-"+Z(n)+"-"+Z(e)}),i1=function(n){return l(it,iK,f(iZ,l(i0,n,n),n,n))},i3=function(n){return{$:2,a:n}},i2=function(n){return i3(n)},i5=t(function(n,e){return s(aJ,0,rI,l(L,a0("cl ccy"),l(L,a6(a9),l(L,a1(a9),n))),rE(e))}),i4=rA(r0("animatedButton")),i9=n1("rel"),i6=rK("target"),i7=t(function(n,e){var t=e.i3,r=e.hT;return s(aJ,2,az("a"),l(L,rA(l(rK,"href",n5.test(t)?"":t)),l(L,rA(i9("noopener noreferrer")),l(L,rA(i6("_blank")),l(L,a6(a9),l(L,a1(a9),l(L,a0("ccx ccy lnk"),n)))))),rE(M([r])))}),i8=t(function(n,e){var t=e.a,r=e.b;return l(i7,M([i4]),{hT:l(iy,M([a1(iv(f(rL,n,20,60)))]),{W:t,ab:"/sm-icons/"+t}),i3:r})}),cn=function(n){return l(i5,M([i1(f(rL,n,30,70))]),l(tQ,i8(n),M([x("telegram.png","https://t.me/coinoplogan"),x("github.png","https://github.com/coinop-logan/"),x("email.png","mailto:coinop.logan@gmail.com"),x("medium.png","https://medium.com/@coinop.logan")])))},ce=t(function(n,e){var t,r,o,a,i,c=l(a7,M([rP,iV(f(rL,n,17,30))]),{hT:l(iy,M([a1(iv(f(rL,n,19,39)))]),{W:"close",ab:"/x.png"}),b0:to(ry(!1))});return l(iu,M([iJ(40),rT,i$(ih(n)),a8,a6(iv(rM(n))),ic(f(iU,1,1,1)),iC(l(il,M([iV(f(rL,n,0,30)),rP]),c)),iD(e/2)]),M([l(iu,M([ia(f(iG,29,134,161)),a6(is),iO,i1(f(rL,n,16,29)),i_({aK:20,aQ:f(rL,n,20,80),aW:f(rL,n,20,80),aX:f(rL,n,36,120)})]),M([l(il,M([iJ(f(rL,n,25,70)),rV]),i2("Get in touch")),l(ig,f(rL,n,2,3),f(iU,1,1,1)),l(il,M([iJ(f(rL,n,13,30)),rV]),i2("coinop.logan@gmail.com"))])),l(iu,M([ip({gC:A,iC:M([f(iG,29,134,161),f(iG,100,200,220)])}),a6(is),(r=(t={dh:f(rL,n,20,40),di:f(rL,n,20,40),ea:0,eb:0}).ea,o=t.eb,a=t.dh,i=t.di,l(it,iY,f(ay,"br-"+Z(r)+"-"+Z(o)+Z(a)+"-"+Z(i),"border-radius",Z(r)+"px "+Z(o)+"px "+Z(i)+"px "+Z(a)+"px"))),i_({aK:f(rL,n,20,90),aQ:f(rL,n,20,80),aW:f(rL,n,20,80),aX:f(rL,n,10,40)}),i1(f(rL,n,30,80))]),M([l(iu,M([iJ(f(rL,n,14,30)),iT,l(iB,20,0)]),M([i2("Rockstar developer"),i2("looking for a rockstar team"),i2("and challenging work")])),cn(n)]))]))}),ct=t(function(n,e){return l(rd,0,l(om,function(e){return n.$9.ja-e.$9.ja},e))}),cr=t(function(n,e){return{$:2,a:n,b:e}}),co=t(function(n,e){return{$:1,a:n,b:e}}),ca={gH:ta,gP:ta,is:to({bh:0,cs:s(iW,155/255,203/255,1,1),fT:x(0,0),bx:3})},ci=t(function(n,e){switch(e.$){case 0:return(0,e.a)(2);case 1:return l(e.a.hE,n(e.a.iE),2);case 2:return ah(e.a);default:return ah("")}}),cc=r(function(n,e,r){var o,a,i,c,u={hq:1===(c=(o=f(tY,t(function(n,e){switch(n.$){case 0:return 1===e.hD.$?w(e,{hD:to(n.a)}):e;case 1:return 1===e.hq.$?w(e,{hq:to(n.a)}):e;default:return 1===e.fJ.$?w(e,{fJ:to(n.a)}):e}}),{hq:ta,hD:ta,fJ:ta},n)).hq).$?ca:c.a,hD:1===(i=o.hD).$?1:i.a,fJ:1===(a=o.fJ).$?0:a.a};return l(ci,1===u.fJ?cr(u):co(u),s(aJ,2,rI,e,rE(M([r]))))}),cu=(t2=M([iH("Open Sans"),iH("Helvetica"),iH("Verdana"),{$:1}]),M([l(it,ir,f(ie,"bg-"+io(s(iW,1,1,1,0)),"background-color",s(iW,1,1,1,0))),l(it,ii,f(ie,"fc-"+io(s(iW,0,0,0,1)),"color",s(iW,0,0,0,1))),l(it,iX,iQ(20)),l(it,ij,l(iE,f(tu,iR,"font-",t2),t2))])),cl=r(function(n,e,t){return f(cc,n.ib,l(L,a0(l(ti," ",M(["ui","s","e"]))),P(cu,e)),t)}),cf=cl({ib:C}),cs=rK("id"),cd=function(n){return rA(cs(n))},cp=rN(20),cm=l(rF,cp,"cpy"),cv=l(il,M([a6(is),a1(is),ia(s(iW,0,0,0,.6)),a2(ry(!1))]),im),cg=l(rF,cp,"sby"),ch=l(rF,cp,"cpx"),cb=nY("http://www.w3.org/2000/svg"),cx=cb("defs"),cy=r(function(n,e,t){return e(n(t))}),cw=l(cy,function(n){return n.$9},l(cy,function(n){return n.ja},function(n){return 1100>n?1:0})),cP=function(n){return I(n.$9.ja)/f(rL,cw(n),5,10)|0},cC=function(n){return I(.4*cP(n))},cT=n1("class"),cL=n1("fill"),cM=n1("fill-opacity"),cF=t(function(n,e){var t=e.b6;return t.$?l(oX,1,(n-t.b)/500):1}),c$=r(function(n,e,t){return(t-e)*n+e}),cz=r(function(n,e,t){return{bF:f(c$,n,e.bF,t.bF),c9:f(c$,n,e.c9,t.c9)}}),cS=r(function(n,e,t){return(t-e)*n+e}),cD=t(function(n,e){var t=e.b6;if(t.$){var r=t.a,o=r.a,a=r.b,i=l(cF,n,e);return 1>i?x(f(cz,i,o,e.cG),f(cS,i,a,0)):x(e.cG,0)}return x(e.cG,0)}),cN=n1("height"),ck=cb("rect"),cV=n1("stroke"),cA=n1("stroke-opacity"),c_=n1("stroke-width"),cB=n1("transform"),cE=n1("width"),cj=n1("x"),cq=n1("y"),cI=o(function(n,e,t,r){var o=l(cF,e,r),a=l(cD,e,r),i=a.a,c=l(ti," ",M(["rotate("+Z(a.b/A*180)+")"]));return l(ck,M([cj(Z(I(i.bF))),cq(Z(I(i.c9))),cT("brickrect"),cE(Z(cP(n))),cN(Z(cC(n))),cB(c),c_("1"),cL("url(#"+r.ht+")"),cV("white"),cA(Z(.05*o)),cM(Z(o))]),C)}),cR=cb("g"),cH=t(function(n,e){return n.$?e:l(L,n.a,e)}),cO=l(tY,cH,C),cW=t(function(n,e){var t=cO(l(tQ,om(f(cI,e.aw,n,C)),e.aj.aj));return l(cR,C,t)}),cU=t(function(n){return n}),cG=l(rs,rU,cU),cY=f(iG,46,81,102),cQ=f(iG,2,10,34),cX=function(n){return x(cP(n),cC(n))},cJ=function(n){return n.$9.ja/2},cZ=r(function(n,e,t){return{gL:t,hu:e,ij:n}}),cK=l(cy,function(n){var e={et:n.d,gL:n.c,hu:n.b,ij:n.a};return f(cZ,e.ij,e.hu,e.gL)},function(n){return"rgb("+l(ti," ",l(tQ,Z,l(tQ,function(n){return I(255*n)},M([n.ij,n.hu,n.gL]))))+")"}),c0=n1("cx"),c1=n1("cy"),c3=t(function(n,e){return f(tu,L,e,n)}),c2=r(function(n,e,t){for(;;){if(0>=e)return n;n=l(c3,t,n),e-=1}}),c5=r(function(n,e,t){for(;;){if(n>0&&e.b){var r=e.a;n-=1,e=e.b,t=l(L,r,t);continue}return t}}),c4=t(function(n,e){return tp(f(c5,n,e,C))}),c9=r(function(n,e,t){if(e>0){var r=x(e,t);n:for(;;){e:for(;;){if(!r.b.b)return t;if(!r.b.b.b){if(1===r.a)break n;break}switch(r.a){case 1:break n;case 2:var o=r.b;return M([o.a,o.b.a]);case 3:if(r.b.b.b.b){var a=r.b,i=a.b;return M([a.a,i.a,i.b.a])}break e;default:if(r.b.b.b.b&&r.b.b.b.b.b){var c=r.b,u=c.b,s=u.b,d=s.b,p=d.b;return l(L,c.a,l(L,u.a,l(L,s.a,l(L,d.a,n>1e3?l(c4,e-4,p):f(c9,n+1,e-4,p)))))}break e}}return t}return M([r.b.a])}return C}),c6=t(function(n,e){return f(c9,0,n,e)}),c7=t(function(n,e){var t=tl(e);return!t||v(t,n)?e:0>h(t,n)?tp(l(c3,l(c6,n%t,e),f(c2,C,n/t|0,e))):l(c6,n,e)}),c8=function(n){var e=n.b;return"b"+Z(n.a)+":"+Z(e)},un=t(function(n,e){return e.b*n.aa+e.a}),ue=t(function(n,e){var t=n.a,r=n.b,o=e.b;return{bF:e.a*(t+0)-(l(V,2,o)?0:t/2)+0,c9:o*(r+0)+0}}),ut=function(n){return n.$9.e3},ur=n1("id"),uo=t(function(n,e){return x(l(V,n,e),e/n|0)}),ua=function(n){return 0>n?-n:n},ui=t(function(n,e){return ua(n.bF-e.bF)+ua(n.c9-e.c9)}),uc=t(function(n,e){if(e.b){if(e.b.b){var r,o=e.b;return to(f(tu,t(function(e,t){var r=t.a,o=t.b,a=n(e);return 0>h(a,o)?x(e,a):x(r,o)}),x(r=e.a,n(r)),o).a)}return to(r=e.a)}return ta}),uu=n1("offset"),ul=n1("r"),uf=cb("radialGradient"),us=t(function(n,e){var t=n.a,r=I((e.c9-0)/(n.b+0));return x(I((e.bF-0+(l(V,2,r)?0:t))/(t+0)),r)}),ud=cb("stop"),up=n1("stop-color"),um=t(function(n,e){return{bF:n,c9:e}}),uv=t(function(n,e){return l(um,n.bF-e.bF,n.c9-e.c9)}),ug=function(n){return n.$9.ja},uh=function(n){var e,r=l(us,cX(n.aw),{bF:n.aw.c8.ja+cJ(n.aw),c9:ut(n.aw)+cJ(n.aw)}),o=(e=I(ut(n.aw)/ug(n.aw)+1),l(td,t(function(e,t){return{bF:t,c9:e*ug(n.aw)}}),l(c7,e,M([n.aw.c8.ja,0]))));return l(tQ,function(e){var t=l(ue,cX(n.aw),e),r=l(rd,{bF:0,c9:0},l(uc,ui(t),o)),a=l(uv,r,t);return l(uf,M([ur(c8(e)),c0(Z(a.bF/cP(n.aw))),c1(Z(a.c9/cP(n.aw))),ul(Z(cJ(n.aw)/cP(n.aw)))]),M([l(ud,M([uu("0%"),up(cK(cY))]),C),l(ud,M([uu("100%"),up(cK(cQ))]),C)]))},l(tQ,uo(n.aj.aa),l(ts,0,l(un,n.aj,r))))},ub=cb("svg"),ux=t(function(n,e){return l(il,M([ch,a6(is)]),cG(l(ub,M([cE(Z(e.aw.$9.ja)),cN(Z(e.aw.$9.e3))]),M([l(cx,C,uh(e)),l(cW,n,e)]))))}),uy=function(n){return{$:4,a:n}},uw=function(n){return{$:0,a:n}},uP=rN(28),uC=function(n){return l(it,uP,f(ie,"bc-"+io(n),"border-color",n))},uT=f(iG,0,156,196),uL=function(n){return l(it,iY,f(ay,"br-"+Z(n),"border-radius",Z(n)+"px"))},uM=a(function(n,e,t,r,o){return{$:6,a:n,b:e,c:t,d:r,e:o}}),uF=function(n){return l(it,aO,d(uM,"b-"+Z(n),n,n,n,n))},u$=r(function(n,e,t){return l(i7,M([i4]),{hT:l(il,M([iV(f(rL,n,5,15)),ic(uT),iO,rV,iJ(f(rL,n,12,25)),uL(100),uF(3),uC(uT)]),i2(t)),i3:e})}),uz=rC(1),uS=l(rF,cp,"cp"),uD={$:9},uN=t(function(n,e){return s(aJ,4,rI,l(L,rB(uD),l(L,a6(is),l(L,i1(5),n))),rE(e))}),uk=i(function(n,e,t,r,o,a){var i=f(rL,n,"endorsements/mobile/","endorsements/desktop/");return l(i5,M([uL(f(rL,n,20,40)),uF(3),uC(f(iU,1,1,1)),a6(iv(rM(n))),a1(iv(f(rL,n,256,375))),uS]),(e?tp:tN)(M([l(iy,M([a6(iv(f(rL,n,126,375))),a1(iv(f(rL,n,256,375)))]),{W:r,ab:P(i,t)}),l(il,M([a1(is),a6(iv(3)),ia(f(iU,1,1,1))]),im),l(iu,M([a6(is),f(rL,n,l(iB,18,33),l(iB,55,44)),i1(f(rL,n,20,30)),a1(iv(f(rL,n,256,375))),uz]),M([l(iu,M([i1(f(rL,n,3,11)),ic(f(iG,136,231,255)),iO]),M([l(il,M([iJ(f(rL,n,12,30)),rV]),i2(r)),l(ig,3,f(iG,136,231,255)),l(il,M([iJ(f(rL,n,12,20))]),i2(o))])),l(uN,M([iJ(f(rL,n,10,20)),iO]),M([i2(a)]))]))])))}),uV=rj("controls"),uA=function(n){return l(n1,"height",Z(n))},u_=rK("poster"),uB=nQ("source"),uE=rK("type"),uj=nQ("video"),uq=function(n){return l(n1,"width",Z(n))},uI=l(rF,rk,"w8"),uR=function(n){return cG(l(r1,M([l(nK,"background","-webkit-linear-gradient(left, #88E7FF, #1D86A1)"),l(nK,"-webkit-background-clip","text"),l(nK,"-webkit-text-fill-color","transparent"),l(nK,"line-height","normal")]),M([nU(n)])))},uH=function(n){return l(iu,M([a8,i1(0),iO,i_({aK:0,aQ:0,aW:0,aX:f(rL,n,36,135)})]),M([l(il,M([a8,iJ(f(rL,n,35,80)),uI]),uR("Logan Brutsche")),l(il,M([a8,iJ(f(rL,n,15,40))]),i2("Full-Stack Software Architect"))]))},uO=t(function(n,e){return l(il,M([iJ(f(rL,n,20,43)),ic(f(iG,136,231,255)),uI,iO,a8]),i2(e))}),uW=l(rF,rk,"w3"),uU=t(function(n,e){return l(iu,M([a6(is),i1(15),iJ(f(rL,n,12,25)),uW,iO]),e)}),uG=l(rF,rk,"w2"),uY=t(function(n,e){return l(il,M([iV(f(rL,n,4,8)),uC(uT),ia(s(iW,.8,.8,1,.2)),iT,uG,ic(f(iU,.9,.9,.9)),iJ(f(rL,n,10,16))]),i2(e))}),uQ=o(function(n,e,t,r){return l(iu,M([i1(f(rL,n,21,30)),a6(is)]),M([l(i5,M([a6(is)]),M([e,l(iu,M([i1(f(rL,n,7,16)),rP]),l(tQ,function(e){return l(i5,M([i1(f(rL,n,7,16)),rP]),l(tQ,uY(n),e))},t))])),l(ig,3,f(iU,1,1,1)),function(){if(r.$)return im;var e=r.a,t=e.a,o=e.b;return l(i5,M([a6(is),iO,iJ(f(rL,n,15,25))]),M([i2(t),l(il,M([rP]),i2(o))]))}()]))}),uX=o(function(n,e,t,r){return s(iW,n/255,e/255,t/255,r)}),uJ=a(function(n,e,t,r,o){return{$:0,a:n,b:e,c:t,d:r,e:o}}),uZ=r(function(n,e,t){return{$:0,a:n,b:e,c:t}}),uK=o(function(n,e,t,r){return"pad-"+r4(n)+"-"+r4(e)+"-"+r4(t)+"-"+r4(r)}),u0=t(function(n,e){var r=f(tY,t(function(n,e){var t=e.a,r=e.b;return x(function(){if(t.$){if(4===n.$&&7===n.b.$){var e=n.b;return to(d(uJ,e.a,e.b,e.c,e.d,e.e))}return ta}return t}(),function(){if(r.$){if(4===n.$&&5===n.b.$){var e=n.b;return to(f(uZ,e.a,e.b,e.c))}return ta}return r}())}),x(ta,ta),n),o=r.a,a=r.b;if(1===a.$)return s(aJ,0,rI,l(L,a0("cl ccy wrp"),l(L,a6(a9),l(L,a1(a9),n))),rE(e));var i=a.a,c=i.a,u=i.b,p=i.c,m=function(){if(o.$)return ta;var n=o.a,e=n.b,t=n.c,r=n.d,a=n.e;if(h(t,u/2)>-1&&h(r,p/2)>-1){var i=e-p/2,c=t-u/2,f=a-u/2,m=r-p/2;return to(l(it,ik,d(iN,s(uK,i,c,m,f),i,c,m,f)))}return ta}();if(m.$){var v=-p/2,g=-u/2;return s(aJ,2,rI,n,rE(M([s(aJ,0,rI,l(L,a0("cl ccy wrp"),l(L,rA(l(nK,"margin",Z(v)+"px "+Z(g)+"px")),l(L,rA(l(nK,"width","calc(100% + "+Z(u)+"px)")),l(L,rA(l(nK,"height","calc(100% + "+Z(p)+"px)")),l(L,l(it,iK,f(iZ,c,u,p)),C))))),rE(e))])))}var b=m.a;return s(aJ,0,rI,l(L,a0("cl ccy wrp"),l(L,a6(a9),l(L,a1(a9),P(n,M([b]))))),rE(e))}),u1=c(function(n,e,t,r,o,a,i){return l(iu,M([cd(e),ia(s(uX,217,217,217,.2)),uL(f(rL,n,20,40)),f(rL,n,l(iB,24,40),l(iB,60,43)),i1(f(rL,n,30,80)),a6(iv(rM(n))),a8]),M([s(uQ,n,t,r,o),l(iu,M([a6(is),i1(f(rL,n,40,50))]),M([l(uU,n,a),l(u0,M([i1(f(rL,n,7,26))]),i)]))]))}),u3=function(n){return M([n])},u2={$:1},u5=function(n){return{$:11,a:n}},u4=t(function(n,e){switch(e.$){case 1:var r=e.a;return rW({hE:t(function(e,t){return l(nJ,n,l(r.hE,e,t))}),iE:r.iE});case 0:var o=e.a;return rU(l(rs,nJ(n),o));case 2:return i3(e.a);default:return im}}),u9=a0("u"),u6=M([ic(f(iU,.8,.8,1)),u9]),u7=r(function(n,e,t){return l(i7,P(u6,n),{hT:i2(t),i3:e})}),u8=function(n){return f(rL,n,x(320,320),x(1e3,200))},ln=r(function(n,e,t){return{bF:n,c9:e,at:t}}),le=t(function(n,e){return f(ln,e.bF*n,e.c9*n,e.at*n)}),lt=le(-1),lr=t(function(n,e){return f(ln,n.bF+e.bF,n.c9+e.c9,n.at+e.at)}),lo=t(function(n,e){return l(lr,lt(n),e)}),la=r(function(n,e,t){return l(lr,e,l(le,n,l(lo,e,t)))}),li=o(function(n,e,t,r){return{$:0,a:n,b:e,c:t,d:r}}),lc=function(n){return s(li,n.ij,n.hu,n.gL,n.et)},lu=r(function(n,e,t){var r=t.b;return x(n(t.a),e(r))}),ll=function(n){return l(lu,n,n)},lf=function(n){return{et:n.d,gL:n.c,hu:n.b,ij:n.a}},ls=r(function(n,e,t){var r=l(ll,lf,x(e,t)),o=r.a,a=r.b;return lc({et:1,gL:f(cS,n,o.gL,a.gL),hu:f(cS,n,o.hu,a.hu),ij:f(cS,n,o.ij,a.ij)})}),ld=r(function(n,e,t){var r=n.b,o=n.c,a=e.b,i=e.c,c=t.b,u=t.c;return y(l(n.a,e.a,t.a),l(r,a,c),l(o,i,u))}),lp=t(function(n,e){return x(n,e)}),lm=$(lp),lv=r(function(n,e,t){if(n){if(1===n)return t;var r=0>h(tl(e),tl(t))?x(l(c7,tl(t),e),t):h(tl(e),tl(t))>0?x(e,l(c7,tl(e),t)):x(e,t);return l(tQ,function(e){var t=e.a,r=e.b;return f(ld,y(la(n),la(n),la(n)),t,r)},l(lm,r.a,r.b))}return e}),lg=r(function(n,e,t){if(1===e.$)return e7(e.a);var r=e.a;return 1===t.$?e7(t.a):tt(l(n,r,t.a))}),lh=r(function(n,e,r){return{eF:{eo:f(lg,ls(n),e.eF.eo,r.eF.eo),ep:f(lg,ls(n),e.eF.ep,r.eF.ep),ev:f(lg,ls(n),e.eF.ev,r.eF.ev),ew:f(lg,ls(n),e.eF.ew,r.eF.ew),eC:f(lg,ls(n),e.eF.eC,r.eF.eC),eG:f(lg,ls(n),e.eF.eG,r.eF.eG),eJ:f(lg,ls(n),e.eF.eJ,r.eF.eJ),eQ:f(lg,ls(n),e.eF.eQ,r.eF.eQ),eR:f(lg,ls(n),e.eF.eR,r.eF.eR),eT:f(lg,ls(n),e.eF.eT,r.eF.eT),eU:f(lg,ls(n),e.eF.eU,r.eF.eU),cz:f(lg,ls(n),e.eF.cz,r.eF.cz),cA:f(lg,ls(n),e.eF.cA,r.eF.cA),cB:f(lg,ls(n),e.eF.cB,r.eF.cB),e1:f(lg,ls(n),e.eF.e1,r.eF.e1),fc:f(lg,ls(n),e.eF.fc,r.eF.fc),fL:f(lg,ls(n),e.eF.fL,r.eF.fL),fM:f(lg,ls(n),e.eF.fM,r.eF.fM),fR:f(lg,ls(n),e.eF.fR,r.eF.fR),f9:f(lg,ls(n),e.eF.f9,r.eF.f9),ga:f(lg,ls(n),e.eF.ga,r.eF.ga),gb:f(lg,ls(n),e.eF.gb,r.eF.gb),gc:f(lg,ls(n),e.eF.gc,r.eF.gc),gd:f(lg,ls(n),e.eF.gd,r.eF.gd)},ge:{eu:f(lg,cS(n),e.ge.eu,r.ge.eu),eA:f(lg,la(n),e.ge.eA,r.ge.eA),eB:f(lg,la(n),e.ge.eB,r.ge.eB),eH:f(lg,la(n),e.ge.eH,r.ge.eH),eI:f(lg,la(n),e.ge.eI,r.ge.eI),eM:f(lg,la(n),e.ge.eM,r.ge.eM),eN:f(lg,la(n),e.ge.eN,r.ge.eN),eO:f(lg,la(n),e.ge.eO,r.ge.eO),eP:f(lg,la(n),e.ge.eP,r.ge.eP),eS:e.ge.eS,eV:f(lg,la(n),e.ge.eV,r.ge.eV),e_:f(lg,t(function(e,t){return{cz:{dh:f(la,n,e.cz.dh,t.cz.dh),di:f(la,n,e.cz.di,t.cz.di),ea:f(la,n,e.cz.ea,t.cz.ea),eb:f(la,n,e.cz.eb,t.cz.eb)},f0:f(lv,n,e.f0,t.f0),iw:e.iw}}),e.ge.e_,r.ge.e_),cA:f(lg,la(n),e.ge.cA,r.ge.cA),e$:f(lg,la(n),e.ge.e$,r.ge.e$),cB:f(lg,la(n),e.ge.cB,r.ge.cB),fb:f(lg,la(n),e.ge.fb,r.ge.fb),fP:f(lg,la(n),e.ge.fP,r.ge.fP),fQ:f(lg,la(n),e.ge.fQ,r.ge.fQ),fS:f(lg,la(n),e.ge.fS,r.ge.fS)}}}),lb=s(li,0,0,0,1),lx=t(function(n,e){return{$:0,a:n,b:e}}),ly=function(n){var e;return l(lx,0,{$:0,a:f(eL,(e=lf(n)).ij,e.hu,e.gL)})},lw=t(function(n,e){return e.$?n(e.a):e.a}),lP={$:0},lC=function(){return lw(function(){return lP})},lT=t(function(n,e){for(;;){if(!n.b)return e;var t=n.a;n=n.b,e=l(L,t,e)}}),lL=function(n){return{$:4,a:l(lT,n,C)}},lM=function(n){return lL(n)},lF=t(function(n,e){return{$:1,a:n,b:e}}),l$=t(function(n,e){var t=e.bF,r=e.c9,o=e.at,a=n.bF,i=n.c9,c=n.at;return{fC:l(tP,a,t),fD:l(tP,i,r),fE:l(tP,c,o),fF:l(oX,a,t),fG:l(oX,i,r),fH:l(oX,c,o)}}),lz={src:"\n        precision lowp float;\n        \n        uniform lowp vec3 constantColor;\n        \n        void main () {\n            gl_FragColor = vec4(constantColor, 1.0);\n        }\n    ",attributes:{},uniforms:{constantColor:"a3"}},lS={src:"\n        precision mediump float;\n        \n        uniform mediump vec3 emissiveColor;\n        uniform highp mat4 sceneProperties;\n        \n        float gammaCorrect(float u) {\n            if (u <= 0.0031308) {\n                return 12.92 * u;\n            } else {\n                return 1.055 * pow(u, 1.0 / 2.4) - 0.055;\n            }\n        }\n        \n        vec3 gammaCorrectedColor(vec3 color) {\n            float red = gammaCorrect(color.r);\n            float green = gammaCorrect(color.g);\n            float blue = gammaCorrect(color.b);\n            return vec3(red, green, blue);\n        }\n        \n        vec3 reinhardLuminanceToneMap(vec3 color) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scale = 1.0 / (1.0 + luminance);\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 reinhardPerChannelToneMap(vec3 color) {\n            return gammaCorrectedColor(color / (color + 1.0));\n        }\n        \n        float extendedReinhardToneMap(float x, float xMax) {\n            return x * (1.0 + (x / (xMax * xMax))) / (1.0 + x);\n        }\n        \n        vec3 extendedReinhardLuminanceToneMap(vec3 color, float overexposureLimit) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scaledLuminance = extendedReinhardToneMap(luminance, overexposureLimit);\n            float scale = scaledLuminance / luminance;\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 extendedReinhardPerChannelToneMap(vec3 color, float overexposureLimit) {\n            float red = extendedReinhardToneMap(color.r, overexposureLimit);\n            float green = extendedReinhardToneMap(color.g, overexposureLimit);\n            float blue = extendedReinhardToneMap(color.b, overexposureLimit);\n            return gammaCorrectedColor(vec3(red, green, blue));\n        }\n        \n        vec3 hableFilmicHelper(vec3 color) {\n            float a = 0.15;\n            float b = 0.5;\n            float c = 0.1;\n            float d = 0.2;\n            float e = 0.02;\n            float f = 0.3;\n            return (color * (a * color + c * b) + d * e) / (color * (a * color + b) + d * f) - e / f;\n        }\n        \n        vec3 hableFilmicToneMap(vec3 color) {\n            float exposureBias = 2.0;\n            vec3 unscaled = hableFilmicHelper(exposureBias * color);\n            vec3 scale = 1.0 / hableFilmicHelper(vec3(11.2));\n            return gammaCorrectedColor(scale * unscaled);\n        }\n        \n        vec3 toneMap(vec3 color, float toneMapType, float toneMapParam) {\n            if (toneMapType == 0.0) {\n                return gammaCorrectedColor(color);\n            } else if (toneMapType == 1.0) {\n                return reinhardLuminanceToneMap(color);\n            } else if (toneMapType == 2.0) {\n                return reinhardPerChannelToneMap(color);\n            } else if (toneMapType == 3.0) {\n                return extendedReinhardLuminanceToneMap(color, toneMapParam);\n            } else if (toneMapType == 4.0) {\n                return extendedReinhardPerChannelToneMap(color, toneMapParam);\n            } else if (toneMapType == 5.0) {\n                return hableFilmicToneMap(color);\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        vec4 toSrgb(vec3 linearColor, mat4 sceneProperties) {\n            vec3 referenceWhite = sceneProperties[2].rgb;\n            float unitR = linearColor.r / referenceWhite.r;\n            float unitG = linearColor.g / referenceWhite.g;\n            float unitB = linearColor.b / referenceWhite.b;\n            float toneMapType = sceneProperties[3][2];\n            float toneMapParam = sceneProperties[3][3];\n            vec3 toneMapped = toneMap(vec3(unitR, unitG, unitB), toneMapType, toneMapParam);\n            return vec4(toneMapped, 1.0);\n        }\n        \n        void main () {\n            gl_FragColor = toSrgb(emissiveColor, sceneProperties);\n        }\n    ",attributes:{},uniforms:{emissiveColor:"bk",sceneProperties:"g"}},lD=t(function(n,e){switch(e.$){case 0:return l(eQ,n,e);case 1:return l(eX,n,e);case 2:return l(eJ,n,e);case 3:return l(eZ,n,e);case 4:return l(eK,n,e);default:return l(e0,n,e)}}),lN=t(function(n,e){switch(e.$){case 0:return l(ek,n,e);case 1:return l(eV,n,e);case 2:return l(eA,n,e);case 3:return l(e_,n,e);case 4:return l(eB,n,e);case 5:return l(eE,n,e);case 6:return l(ej,n,e);case 7:return l(eq,n,e);default:var t;return void((t=n.sampleAlphaToCoverage).toggle=n.toggle,t.enabled||(n.gl.enable(n.gl.SAMPLE_ALPHA_TO_COVERAGE),t.enabled=!0))}}),lk={src:"\n        precision highp float;\n        \n        attribute lowp float lineSegmentVertex;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        uniform highp vec3 lineSegmentStartPoint;\n        uniform highp vec3 lineSegmentEndPoint;\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        void main() {\n            vec3 position = (1.0 - lineSegmentVertex) * lineSegmentStartPoint + lineSegmentVertex * lineSegmentEndPoint;\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            gl_Position = projectionMatrix * (viewMatrix * worldPosition);\n        }\n    ",attributes:{lineSegmentVertex:"fi"},uniforms:{lineSegmentEndPoint:"fg",lineSegmentStartPoint:"fh",modelMatrix:"d",modelScale:"e",projectionMatrix:"f",sceneProperties:"g",viewMatrix:"h"}},lV=t(function(n,e){return{$:1,a:n,b:e}})({eW:2,e8:0,fJ:1})(M([x({fi:0},{fi:1})])),lA=function(n){var e=n.fF,t=n.fG,r=n.fH;return{bF:e+.5*(n.fC-e),c9:t+.5*(n.fD-t),at:r+.5*(n.fE-r)}},l_=function(n){return n.fE},lB=function(n){return n.fH},lE=t(function(n,e){return e-n}),lj=function(n){return y(l(lE,n.fF,n.fC),l(lE,n.fG,n.fD),l(lE,lB(n),l_(n)))},lq=function(n){var e=lj(n),t=e.a,r=e.b,o=e.c;return{gY:lA(n),hx:t/2,hy:r/2,hz:o/2}},lI=function(n){return new Float64Array([n.bF,n.c9,n.at])},lR=t(function(n,e){var t=lq(l(l$,e.a,e.b)),r=e.a,o=e.b;switch(n.$){case 0:if(n.b.$)return lP;var a=n.b.a;return l(lF,t,u(function(n,e,t,i,c,u,l,f){return d(eN,f,lk,lz,lV,{a3:a,fg:lI(o),fh:lI(r),d:t,e:e,f:u,g:n,h:c})}));case 1:if(n.b.$)return lP;a=n.b.a;var i=n.c;return l(lF,t,u(function(n,e,t,c,u,f,s,p){return d(eN,p,lk,lS,lV,{bk:l(eM,i,a),fg:lI(o),fh:lI(r),d:t,e:e,f:f,g:n,h:u})}));default:return lP}}),lH=t(function(n,e){return l(lR,n,e)}),lO=t(function(n,e){return e.$?e7(e.a):tt(n(e.a))}),lW={src:"\n        precision mediump float;\n        \n        uniform mediump sampler2D colorTexture;\n        \n        varying mediump vec2 interpolatedUv;\n        \n        void main () {\n            gl_FragColor = texture2D(colorTexture, interpolatedUv);\n        }\n    ",attributes:{},uniforms:{colorTexture:"ct"}},lU={src:"\n        precision mediump float;\n        \n        uniform mediump sampler2D colorTexture;\n        uniform mediump float backlight;\n        uniform highp mat4 sceneProperties;\n        \n        varying mediump vec2 interpolatedUv;\n        \n        float inverseGamma(float u) {\n            if (u <= 0.04045) {\n                return clamp(u / 12.92, 0.0, 1.0);\n            } else {\n                return clamp(pow((u + 0.055) / 1.055, 2.4), 0.0, 1.0);\n            }\n        }\n        \n        vec3 fromSrgb(vec3 srgbColor) {\n            return vec3(\n                inverseGamma(srgbColor.r),\n                inverseGamma(srgbColor.g),\n                inverseGamma(srgbColor.b)\n            );\n        }\n        \n        float gammaCorrect(float u) {\n            if (u <= 0.0031308) {\n                return 12.92 * u;\n            } else {\n                return 1.055 * pow(u, 1.0 / 2.4) - 0.055;\n            }\n        }\n        \n        vec3 gammaCorrectedColor(vec3 color) {\n            float red = gammaCorrect(color.r);\n            float green = gammaCorrect(color.g);\n            float blue = gammaCorrect(color.b);\n            return vec3(red, green, blue);\n        }\n        \n        vec3 reinhardLuminanceToneMap(vec3 color) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scale = 1.0 / (1.0 + luminance);\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 reinhardPerChannelToneMap(vec3 color) {\n            return gammaCorrectedColor(color / (color + 1.0));\n        }\n        \n        float extendedReinhardToneMap(float x, float xMax) {\n            return x * (1.0 + (x / (xMax * xMax))) / (1.0 + x);\n        }\n        \n        vec3 extendedReinhardLuminanceToneMap(vec3 color, float overexposureLimit) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scaledLuminance = extendedReinhardToneMap(luminance, overexposureLimit);\n            float scale = scaledLuminance / luminance;\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 extendedReinhardPerChannelToneMap(vec3 color, float overexposureLimit) {\n            float red = extendedReinhardToneMap(color.r, overexposureLimit);\n            float green = extendedReinhardToneMap(color.g, overexposureLimit);\n            float blue = extendedReinhardToneMap(color.b, overexposureLimit);\n            return gammaCorrectedColor(vec3(red, green, blue));\n        }\n        \n        vec3 hableFilmicHelper(vec3 color) {\n            float a = 0.15;\n            float b = 0.5;\n            float c = 0.1;\n            float d = 0.2;\n            float e = 0.02;\n            float f = 0.3;\n            return (color * (a * color + c * b) + d * e) / (color * (a * color + b) + d * f) - e / f;\n        }\n        \n        vec3 hableFilmicToneMap(vec3 color) {\n            float exposureBias = 2.0;\n            vec3 unscaled = hableFilmicHelper(exposureBias * color);\n            vec3 scale = 1.0 / hableFilmicHelper(vec3(11.2));\n            return gammaCorrectedColor(scale * unscaled);\n        }\n        \n        vec3 toneMap(vec3 color, float toneMapType, float toneMapParam) {\n            if (toneMapType == 0.0) {\n                return gammaCorrectedColor(color);\n            } else if (toneMapType == 1.0) {\n                return reinhardLuminanceToneMap(color);\n            } else if (toneMapType == 2.0) {\n                return reinhardPerChannelToneMap(color);\n            } else if (toneMapType == 3.0) {\n                return extendedReinhardLuminanceToneMap(color, toneMapParam);\n            } else if (toneMapType == 4.0) {\n                return extendedReinhardPerChannelToneMap(color, toneMapParam);\n            } else if (toneMapType == 5.0) {\n                return hableFilmicToneMap(color);\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        vec4 toSrgb(vec3 linearColor, mat4 sceneProperties) {\n            vec3 referenceWhite = sceneProperties[2].rgb;\n            float unitR = linearColor.r / referenceWhite.r;\n            float unitG = linearColor.g / referenceWhite.g;\n            float unitB = linearColor.b / referenceWhite.b;\n            float toneMapType = sceneProperties[3][2];\n            float toneMapParam = sceneProperties[3][3];\n            vec3 toneMapped = toneMap(vec3(unitR, unitG, unitB), toneMapType, toneMapParam);\n            return vec4(toneMapped, 1.0);\n        }\n        \n        void main () {\n            vec3 emissiveColor = fromSrgb(texture2D(colorTexture, interpolatedUv).rgb) * backlight;\n            gl_FragColor = toSrgb(emissiveColor, sceneProperties);\n        }\n    ",attributes:{},uniforms:{backlight:"dd",colorTexture:"ct",sceneProperties:"g"}},lG=c(function(n,e,t,r,o,a,i){for(;;){if(!i.b)return{fC:e,fD:r,fE:a,fF:n,fG:t,fH:o};var c=i.a,u=i.b,f=c.bF,s=c.c9,d=c.at;n=l(oX,f,n),e=l(tP,f,e),t=l(oX,s,t),r=l(tP,s,r),o=l(oX,d,o),a=l(tP,d,a),i=u}}),lY=t(function(n,e){var t=n.bF,r=n.c9,o=n.at;return m(lG,t,t,r,r,o,o,e)}),lQ={src:"\n        precision highp float;\n        \n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 lights12;\n        uniform highp mat4 lights34;\n        uniform highp mat4 lights56;\n        uniform highp mat4 lights78;\n        uniform lowp vec4 enabledLights;\n        uniform lowp vec3 materialColor;\n        uniform highp mat4 viewMatrix;\n        \n        varying highp vec3 interpolatedPosition;\n        varying highp vec3 interpolatedNormal;\n        \n        const lowp float kPerspectiveProjection = 0.0;\n        const lowp float kOrthographicProjection = 1.0;\n        const lowp float kDirectionalLight = 1.0;\n        const lowp float kPointLight = 2.0;\n        const highp float kPi = 3.14159265359;\n        const lowp float kDisabledLight = 0.0;\n        const lowp float kSoftLighting = 3.0;\n        \n        float getNormalSign() {\n            return 2.0 * float(gl_FrontFacing) - 1.0;\n        }\n        \n        vec3 getDirectionToCamera(vec3 surfacePosition, mat4 sceneProperties) {\n            float projectionType = sceneProperties[1].w;\n            if (projectionType == kPerspectiveProjection) {\n                vec3 cameraPoint = sceneProperties[1].xyz;\n                return normalize(cameraPoint - surfacePosition);\n            } else if (projectionType == kOrthographicProjection) {\n                return sceneProperties[1].xyz;\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        void getDirectionToLightAndNormalIlluminance(\n            vec4 xyz_type,\n            vec4 rgb_parameter,\n            vec3 surfacePosition,\n            out vec3 directionToLight,\n            out vec3 normalIlluminance\n        ) {\n            float lightType = xyz_type.w;\n            if (lightType == kDirectionalLight) {\n                directionToLight = xyz_type.xyz;\n                normalIlluminance = rgb_parameter.rgb;\n            } else if (lightType == kPointLight) {\n                vec3 lightPosition = xyz_type.xyz;\n                vec3 displacement = lightPosition - surfacePosition;\n                float distance = length(displacement);\n                directionToLight = displacement / distance;\n                normalIlluminance = rgb_parameter.rgb / (4.0 * kPi * distance * distance);\n            }\n        }\n        \n        float positiveDotProduct(vec3 v1, vec3 v2) {\n            return clamp(dot(v1, v2), 0.0, 1.0);\n        }\n        \n        vec3 softLightingLuminance(\n            vec3 aboveLuminance,\n            vec3 belowLuminance,\n            vec3 localUpDirection,\n            vec3 localLightDirection\n        ) {\n            float sinElevation = dot(localLightDirection, localUpDirection);\n            float t = (sinElevation + 1.0) / 2.0;\n            return aboveLuminance * t + belowLuminance * (1.0 - t);\n        }\n        \n        vec3 lambertianLight(\n            vec3 surfacePosition,\n            vec3 surfaceNormal,\n            vec3 materialColor,\n            vec4 xyz_type,\n            vec4 rgb_parameter\n        ) {\n            float lightType = xyz_type.w;\n            if (lightType == kDisabledLight) {\n                return vec3(0.0, 0.0, 0.0);\n            } else if (lightType == kSoftLighting) {\n                vec3 upDirection = xyz_type.xyz;\n                vec3 aboveLuminance = rgb_parameter.rgb;\n                vec3 belowLuminance = rgb_parameter.a * aboveLuminance;\n                vec3 luminance = softLightingLuminance(aboveLuminance, belowLuminance, upDirection, surfaceNormal);\n                return luminance * materialColor;\n            }\n        \n            vec3 directionToLight = vec3(0.0, 0.0, 0.0);\n            vec3 normalIlluminance = vec3(0.0, 0.0, 0.0);\n            getDirectionToLightAndNormalIlluminance(\n                xyz_type,\n                rgb_parameter,\n                surfacePosition,\n                directionToLight,\n                normalIlluminance\n            );\n        \n            float dotNL = positiveDotProduct(directionToLight, surfaceNormal);\n            return (normalIlluminance * dotNL) * (materialColor / kPi);\n        }\n        \n        vec3 lambertianLighting(\n            vec3 surfacePosition,\n            vec3 surfaceNormal,\n            vec3 materialColor,\n            mat4 lights12,\n            mat4 lights34,\n            mat4 lights56,\n            mat4 lights78,\n            vec4 enabledLights\n        ) {\n            vec3 litColor1 = enabledLights[0] == 1.0 ? lambertianLight(surfacePosition, surfaceNormal, materialColor, lights12[0], lights12[1]) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor2 = enabledLights[1] == 1.0 ? lambertianLight(surfacePosition, surfaceNormal, materialColor, lights12[2], lights12[3]) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor3 = enabledLights[2] == 1.0 ? lambertianLight(surfacePosition, surfaceNormal, materialColor, lights34[0], lights34[1]) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor4 = enabledLights[3] == 1.0 ? lambertianLight(surfacePosition, surfaceNormal, materialColor, lights34[2], lights34[3]) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor5 = lambertianLight(surfacePosition, surfaceNormal, materialColor, lights56[0], lights56[1]);\n            vec3 litColor6 = lambertianLight(surfacePosition, surfaceNormal, materialColor, lights56[2], lights56[3]);\n            vec3 litColor7 = lambertianLight(surfacePosition, surfaceNormal, materialColor, lights78[0], lights78[1]);\n            vec3 litColor8 = lambertianLight(surfacePosition, surfaceNormal, materialColor, lights78[2], lights78[3]);\n            return litColor1 + litColor2 + litColor3 + litColor4 + litColor5 + litColor6 + litColor7 + litColor8;\n        }\n        \n        float gammaCorrect(float u) {\n            if (u <= 0.0031308) {\n                return 12.92 * u;\n            } else {\n                return 1.055 * pow(u, 1.0 / 2.4) - 0.055;\n            }\n        }\n        \n        vec3 gammaCorrectedColor(vec3 color) {\n            float red = gammaCorrect(color.r);\n            float green = gammaCorrect(color.g);\n            float blue = gammaCorrect(color.b);\n            return vec3(red, green, blue);\n        }\n        \n        vec3 reinhardLuminanceToneMap(vec3 color) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scale = 1.0 / (1.0 + luminance);\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 reinhardPerChannelToneMap(vec3 color) {\n            return gammaCorrectedColor(color / (color + 1.0));\n        }\n        \n        float extendedReinhardToneMap(float x, float xMax) {\n            return x * (1.0 + (x / (xMax * xMax))) / (1.0 + x);\n        }\n        \n        vec3 extendedReinhardLuminanceToneMap(vec3 color, float overexposureLimit) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scaledLuminance = extendedReinhardToneMap(luminance, overexposureLimit);\n            float scale = scaledLuminance / luminance;\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 extendedReinhardPerChannelToneMap(vec3 color, float overexposureLimit) {\n            float red = extendedReinhardToneMap(color.r, overexposureLimit);\n            float green = extendedReinhardToneMap(color.g, overexposureLimit);\n            float blue = extendedReinhardToneMap(color.b, overexposureLimit);\n            return gammaCorrectedColor(vec3(red, green, blue));\n        }\n        \n        vec3 hableFilmicHelper(vec3 color) {\n            float a = 0.15;\n            float b = 0.5;\n            float c = 0.1;\n            float d = 0.2;\n            float e = 0.02;\n            float f = 0.3;\n            return (color * (a * color + c * b) + d * e) / (color * (a * color + b) + d * f) - e / f;\n        }\n        \n        vec3 hableFilmicToneMap(vec3 color) {\n            float exposureBias = 2.0;\n            vec3 unscaled = hableFilmicHelper(exposureBias * color);\n            vec3 scale = 1.0 / hableFilmicHelper(vec3(11.2));\n            return gammaCorrectedColor(scale * unscaled);\n        }\n        \n        vec3 toneMap(vec3 color, float toneMapType, float toneMapParam) {\n            if (toneMapType == 0.0) {\n                return gammaCorrectedColor(color);\n            } else if (toneMapType == 1.0) {\n                return reinhardLuminanceToneMap(color);\n            } else if (toneMapType == 2.0) {\n                return reinhardPerChannelToneMap(color);\n            } else if (toneMapType == 3.0) {\n                return extendedReinhardLuminanceToneMap(color, toneMapParam);\n            } else if (toneMapType == 4.0) {\n                return extendedReinhardPerChannelToneMap(color, toneMapParam);\n            } else if (toneMapType == 5.0) {\n                return hableFilmicToneMap(color);\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        vec4 toSrgb(vec3 linearColor, mat4 sceneProperties) {\n            vec3 referenceWhite = sceneProperties[2].rgb;\n            float unitR = linearColor.r / referenceWhite.r;\n            float unitG = linearColor.g / referenceWhite.g;\n            float unitB = linearColor.b / referenceWhite.b;\n            float toneMapType = sceneProperties[3][2];\n            float toneMapParam = sceneProperties[3][3];\n            vec3 toneMapped = toneMap(vec3(unitR, unitG, unitB), toneMapType, toneMapParam);\n            return vec4(toneMapped, 1.0);\n        }\n        \n        void main() {\n            vec3 normalDirection = normalize(interpolatedNormal) * getNormalSign();\n            vec3 directionToCamera = getDirectionToCamera(interpolatedPosition, sceneProperties);\n        \n            vec3 linearColor = lambertianLighting(\n                interpolatedPosition,\n                normalDirection,\n                materialColor,\n                lights12,\n                lights34,\n                lights56,\n                lights78,\n                enabledLights\n            );\n        \n            gl_FragColor = toSrgb(linearColor, sceneProperties);\n        }\n    ",attributes:{},uniforms:{enabledLights:"Y",lights12:"bX",lights34:"cL",lights56:"cM",lights78:"cN",materialColor:"dF",sceneProperties:"g",viewMatrix:"h"}},lX={src:"\n        precision highp float;\n        \n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 lights12;\n        uniform highp mat4 lights34;\n        uniform highp mat4 lights56;\n        uniform highp mat4 lights78;\n        uniform lowp vec4 enabledLights;\n        uniform mediump sampler2D materialColorTexture;\n        uniform mediump sampler2D normalMapTexture;\n        uniform lowp float useNormalMap;\n        uniform highp mat4 viewMatrix;\n        \n        varying highp vec3 interpolatedPosition;\n        varying highp vec3 interpolatedNormal;\n        varying mediump vec2 interpolatedUv;\n        varying highp vec3 interpolatedTangent;\n        \n        const lowp float kPerspectiveProjection = 0.0;\n        const lowp float kOrthographicProjection = 1.0;\n        const lowp float kDirectionalLight = 1.0;\n        const lowp float kPointLight = 2.0;\n        const highp float kPi = 3.14159265359;\n        const lowp float kDisabledLight = 0.0;\n        const lowp float kSoftLighting = 3.0;\n        \n        vec3 getLocalNormal(sampler2D normalMap, float useNormalMap, vec2 uv) {\n            vec3 rgb = useNormalMap * texture2D(normalMap, uv).rgb + (1.0 - useNormalMap) * vec3(0.5, 0.5, 1.0);\n            float x = 2.0 * (rgb.r - 0.5);\n            float y = 2.0 * (rgb.g - 0.5);\n            float z = 2.0 * (rgb.b - 0.5);\n            return normalize(vec3(-x, -y, z));\n        }\n        \n        float getNormalSign() {\n            return 2.0 * float(gl_FrontFacing) - 1.0;\n        }\n        \n        vec3 getMappedNormal(vec3 normal, vec3 tangent, float normalSign, vec3 localNormal) {\n            vec3 bitangent = cross(normal, tangent) * normalSign;\n            return normalize(localNormal.x * tangent + localNormal.y * bitangent + localNormal.z * normal);\n        }\n        \n        vec3 getDirectionToCamera(vec3 surfacePosition, mat4 sceneProperties) {\n            float projectionType = sceneProperties[1].w;\n            if (projectionType == kPerspectiveProjection) {\n                vec3 cameraPoint = sceneProperties[1].xyz;\n                return normalize(cameraPoint - surfacePosition);\n            } else if (projectionType == kOrthographicProjection) {\n                return sceneProperties[1].xyz;\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        void getDirectionToLightAndNormalIlluminance(\n            vec4 xyz_type,\n            vec4 rgb_parameter,\n            vec3 surfacePosition,\n            out vec3 directionToLight,\n            out vec3 normalIlluminance\n        ) {\n            float lightType = xyz_type.w;\n            if (lightType == kDirectionalLight) {\n                directionToLight = xyz_type.xyz;\n                normalIlluminance = rgb_parameter.rgb;\n            } else if (lightType == kPointLight) {\n                vec3 lightPosition = xyz_type.xyz;\n                vec3 displacement = lightPosition - surfacePosition;\n                float distance = length(displacement);\n                directionToLight = displacement / distance;\n                normalIlluminance = rgb_parameter.rgb / (4.0 * kPi * distance * distance);\n            }\n        }\n        \n        float positiveDotProduct(vec3 v1, vec3 v2) {\n            return clamp(dot(v1, v2), 0.0, 1.0);\n        }\n        \n        vec3 softLightingLuminance(\n            vec3 aboveLuminance,\n            vec3 belowLuminance,\n            vec3 localUpDirection,\n            vec3 localLightDirection\n        ) {\n            float sinElevation = dot(localLightDirection, localUpDirection);\n            float t = (sinElevation + 1.0) / 2.0;\n            return aboveLuminance * t + belowLuminance * (1.0 - t);\n        }\n        \n        vec3 lambertianLight(\n            vec3 surfacePosition,\n            vec3 surfaceNormal,\n            vec3 materialColor,\n            vec4 xyz_type,\n            vec4 rgb_parameter\n        ) {\n            float lightType = xyz_type.w;\n            if (lightType == kDisabledLight) {\n                return vec3(0.0, 0.0, 0.0);\n            } else if (lightType == kSoftLighting) {\n                vec3 upDirection = xyz_type.xyz;\n                vec3 aboveLuminance = rgb_parameter.rgb;\n                vec3 belowLuminance = rgb_parameter.a * aboveLuminance;\n                vec3 luminance = softLightingLuminance(aboveLuminance, belowLuminance, upDirection, surfaceNormal);\n                return luminance * materialColor;\n            }\n        \n            vec3 directionToLight = vec3(0.0, 0.0, 0.0);\n            vec3 normalIlluminance = vec3(0.0, 0.0, 0.0);\n            getDirectionToLightAndNormalIlluminance(\n                xyz_type,\n                rgb_parameter,\n                surfacePosition,\n                directionToLight,\n                normalIlluminance\n            );\n        \n            float dotNL = positiveDotProduct(directionToLight, surfaceNormal);\n            return (normalIlluminance * dotNL) * (materialColor / kPi);\n        }\n        \n        vec3 lambertianLighting(\n            vec3 surfacePosition,\n            vec3 surfaceNormal,\n            vec3 materialColor,\n            mat4 lights12,\n            mat4 lights34,\n            mat4 lights56,\n            mat4 lights78,\n            vec4 enabledLights\n        ) {\n            vec3 litColor1 = enabledLights[0] == 1.0 ? lambertianLight(surfacePosition, surfaceNormal, materialColor, lights12[0], lights12[1]) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor2 = enabledLights[1] == 1.0 ? lambertianLight(surfacePosition, surfaceNormal, materialColor, lights12[2], lights12[3]) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor3 = enabledLights[2] == 1.0 ? lambertianLight(surfacePosition, surfaceNormal, materialColor, lights34[0], lights34[1]) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor4 = enabledLights[3] == 1.0 ? lambertianLight(surfacePosition, surfaceNormal, materialColor, lights34[2], lights34[3]) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor5 = lambertianLight(surfacePosition, surfaceNormal, materialColor, lights56[0], lights56[1]);\n            vec3 litColor6 = lambertianLight(surfacePosition, surfaceNormal, materialColor, lights56[2], lights56[3]);\n            vec3 litColor7 = lambertianLight(surfacePosition, surfaceNormal, materialColor, lights78[0], lights78[1]);\n            vec3 litColor8 = lambertianLight(surfacePosition, surfaceNormal, materialColor, lights78[2], lights78[3]);\n            return litColor1 + litColor2 + litColor3 + litColor4 + litColor5 + litColor6 + litColor7 + litColor8;\n        }\n        \n        float inverseGamma(float u) {\n            if (u <= 0.04045) {\n                return clamp(u / 12.92, 0.0, 1.0);\n            } else {\n                return clamp(pow((u + 0.055) / 1.055, 2.4), 0.0, 1.0);\n            }\n        }\n        \n        vec3 fromSrgb(vec3 srgbColor) {\n            return vec3(\n                inverseGamma(srgbColor.r),\n                inverseGamma(srgbColor.g),\n                inverseGamma(srgbColor.b)\n            );\n        }\n        \n        float gammaCorrect(float u) {\n            if (u <= 0.0031308) {\n                return 12.92 * u;\n            } else {\n                return 1.055 * pow(u, 1.0 / 2.4) - 0.055;\n            }\n        }\n        \n        vec3 gammaCorrectedColor(vec3 color) {\n            float red = gammaCorrect(color.r);\n            float green = gammaCorrect(color.g);\n            float blue = gammaCorrect(color.b);\n            return vec3(red, green, blue);\n        }\n        \n        vec3 reinhardLuminanceToneMap(vec3 color) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scale = 1.0 / (1.0 + luminance);\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 reinhardPerChannelToneMap(vec3 color) {\n            return gammaCorrectedColor(color / (color + 1.0));\n        }\n        \n        float extendedReinhardToneMap(float x, float xMax) {\n            return x * (1.0 + (x / (xMax * xMax))) / (1.0 + x);\n        }\n        \n        vec3 extendedReinhardLuminanceToneMap(vec3 color, float overexposureLimit) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scaledLuminance = extendedReinhardToneMap(luminance, overexposureLimit);\n            float scale = scaledLuminance / luminance;\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 extendedReinhardPerChannelToneMap(vec3 color, float overexposureLimit) {\n            float red = extendedReinhardToneMap(color.r, overexposureLimit);\n            float green = extendedReinhardToneMap(color.g, overexposureLimit);\n            float blue = extendedReinhardToneMap(color.b, overexposureLimit);\n            return gammaCorrectedColor(vec3(red, green, blue));\n        }\n        \n        vec3 hableFilmicHelper(vec3 color) {\n            float a = 0.15;\n            float b = 0.5;\n            float c = 0.1;\n            float d = 0.2;\n            float e = 0.02;\n            float f = 0.3;\n            return (color * (a * color + c * b) + d * e) / (color * (a * color + b) + d * f) - e / f;\n        }\n        \n        vec3 hableFilmicToneMap(vec3 color) {\n            float exposureBias = 2.0;\n            vec3 unscaled = hableFilmicHelper(exposureBias * color);\n            vec3 scale = 1.0 / hableFilmicHelper(vec3(11.2));\n            return gammaCorrectedColor(scale * unscaled);\n        }\n        \n        vec3 toneMap(vec3 color, float toneMapType, float toneMapParam) {\n            if (toneMapType == 0.0) {\n                return gammaCorrectedColor(color);\n            } else if (toneMapType == 1.0) {\n                return reinhardLuminanceToneMap(color);\n            } else if (toneMapType == 2.0) {\n                return reinhardPerChannelToneMap(color);\n            } else if (toneMapType == 3.0) {\n                return extendedReinhardLuminanceToneMap(color, toneMapParam);\n            } else if (toneMapType == 4.0) {\n                return extendedReinhardPerChannelToneMap(color, toneMapParam);\n            } else if (toneMapType == 5.0) {\n                return hableFilmicToneMap(color);\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        vec4 toSrgb(vec3 linearColor, mat4 sceneProperties) {\n            vec3 referenceWhite = sceneProperties[2].rgb;\n            float unitR = linearColor.r / referenceWhite.r;\n            float unitG = linearColor.g / referenceWhite.g;\n            float unitB = linearColor.b / referenceWhite.b;\n            float toneMapType = sceneProperties[3][2];\n            float toneMapParam = sceneProperties[3][3];\n            vec3 toneMapped = toneMap(vec3(unitR, unitG, unitB), toneMapType, toneMapParam);\n            return vec4(toneMapped, 1.0);\n        }\n        \n        void main() {\n            vec3 localNormal = getLocalNormal(normalMapTexture, useNormalMap, interpolatedUv);\n            float normalSign = getNormalSign();\n            vec3 originalNormal = normalize(interpolatedNormal) * normalSign;\n            vec3 normalDirection = getMappedNormal(originalNormal, interpolatedTangent, normalSign, localNormal);\n            vec3 directionToCamera = getDirectionToCamera(interpolatedPosition, sceneProperties);\n            vec3 materialColor = fromSrgb(texture2D(materialColorTexture, interpolatedUv).rgb);\n        \n            vec3 linearColor = lambertianLighting(\n                interpolatedPosition,\n                normalDirection,\n                materialColor,\n                lights12,\n                lights34,\n                lights56,\n                lights78,\n                enabledLights\n            );\n        \n            gl_FragColor = toSrgb(linearColor, sceneProperties);\n        }\n    ",attributes:{},uniforms:{enabledLights:"Y",lights12:"bX",lights34:"cL",lights56:"cM",lights78:"cN",materialColorTexture:"dG",normalMapTexture:"bt",sceneProperties:"g",useNormalMap:"bC",viewMatrix:"h"}},lJ=function(n){return{$:5,a:n}},lZ=lJ(1029),lK=lJ(1028),l0=r(function(n,e,t){return 1===e?l(L,n?lZ:lK,t):t}),l1={src:"\n        precision highp float;\n        \n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 lights12;\n        uniform highp mat4 lights34;\n        uniform highp mat4 lights56;\n        uniform highp mat4 lights78;\n        uniform lowp vec4 enabledLights;\n        uniform lowp vec3 baseColor;\n        uniform lowp float roughness;\n        uniform lowp float metallic;\n        \n        varying highp vec3 interpolatedPosition;\n        varying highp vec3 interpolatedNormal;\n        \n        const lowp float kPerspectiveProjection = 0.0;\n        const lowp float kOrthographicProjection = 1.0;\n        const lowp float kDirectionalLight = 1.0;\n        const lowp float kPointLight = 2.0;\n        const highp float kPi = 3.14159265359;\n        const mediump float kMediumpFloatMax = 65504.0;\n        const lowp float kDisabledLight = 0.0;\n        const lowp float kSoftLighting = 3.0;\n        \n        float getNormalSign() {\n            return 2.0 * float(gl_FrontFacing) - 1.0;\n        }\n        \n        vec3 getDirectionToCamera(vec3 surfacePosition, mat4 sceneProperties) {\n            float projectionType = sceneProperties[1].w;\n            if (projectionType == kPerspectiveProjection) {\n                vec3 cameraPoint = sceneProperties[1].xyz;\n                return normalize(cameraPoint - surfacePosition);\n            } else if (projectionType == kOrthographicProjection) {\n                return sceneProperties[1].xyz;\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        void getDirectionToLightAndNormalIlluminance(\n            vec4 xyz_type,\n            vec4 rgb_parameter,\n            vec3 surfacePosition,\n            out vec3 directionToLight,\n            out vec3 normalIlluminance\n        ) {\n            float lightType = xyz_type.w;\n            if (lightType == kDirectionalLight) {\n                directionToLight = xyz_type.xyz;\n                normalIlluminance = rgb_parameter.rgb;\n            } else if (lightType == kPointLight) {\n                vec3 lightPosition = xyz_type.xyz;\n                vec3 displacement = lightPosition - surfacePosition;\n                float distance = length(displacement);\n                directionToLight = displacement / distance;\n                normalIlluminance = rgb_parameter.rgb / (4.0 * kPi * distance * distance);\n            }\n        }\n        \n        float positiveDotProduct(vec3 v1, vec3 v2) {\n            return clamp(dot(v1, v2), 0.0, 1.0);\n        }\n        \n        // Adapted from https://google.github.io/filament/Filament.md.html#materialsystem/specularbrdf/normaldistributionfunction(speculard)\n        float specularD(float alpha, float dotNH, vec3 normalDirection, vec3 halfDirection) {\n            vec3 crossNH = cross(normalDirection, halfDirection);\n            float a = dotNH * alpha;\n            float k = alpha / (dot(crossNH, crossNH) + a * a);\n            float d = k * k * (1.0 / kPi);\n            return min(d, kMediumpFloatMax);\n        }\n        \n        float safeQuotient(float numerator, float denominator) {\n            if (denominator == 0.0) {\n                return 0.0;\n            } else {\n                return numerator / denominator;\n            }\n        }\n        \n        float g1(float dotNV, float alphaSquared) {\n            return safeQuotient(2.0 * dotNV, dotNV + sqrt(alphaSquared + (1.0 - alphaSquared) * dotNV * dotNV));\n        }\n        \n        float specularG(float dotNL, float dotNV, float alphaSquared) {\n            return g1(dotNV, alphaSquared) * g1(dotNL, alphaSquared);\n        }\n        \n        vec3 fresnelColor(vec3 specularBaseColor, float dotVH) {\n            vec3 one = vec3(1.0, 1.0, 1.0);\n            float scale = exp2((-5.55473 * dotVH - 6.98316) * dotVH);\n            return specularBaseColor + (one - specularBaseColor) * scale;\n        }\n        \n        vec3 brdf(vec3 normalDirection, vec3 directionToCamera, vec3 directionToLight, float alpha, float dotNV, float dotNL, vec3 specularBaseColor, vec3 normalIlluminance) {\n            vec3 halfDirection = normalize(directionToCamera + directionToLight);\n            float dotVH = positiveDotProduct(directionToCamera, halfDirection);\n            float dotNH = positiveDotProduct(normalDirection, halfDirection);\n            float dotNHSquared = dotNH * dotNH;\n        \n            float d = specularD(alpha, dotNH, normalDirection, halfDirection);\n            float g = specularG(dotNL, dotNV, alpha * alpha);\n            vec3 f = fresnelColor(specularBaseColor, dotVH);\n            return safeQuotient(d * g, 4.0 * dotNL * dotNV) * f;\n        }\n        \n        vec3 sampleFacetNormal(vec3 vH, vec3 vT1, vec3 vT2, float s, float alpha) {\n            float t2 = (1.0 - s);\n            vec3 vNh = t2 * vT2 + sqrt(max(0.0, 1.0 - t2 * t2)) * vH;\n            return normalize(vec3(alpha * vNh.x, alpha * vNh.y, max(0.0, vNh.z)));\n        }\n        \n        vec3 softLightingLuminance(\n            vec3 aboveLuminance,\n            vec3 belowLuminance,\n            vec3 localUpDirection,\n            vec3 localLightDirection\n        ) {\n            float sinElevation = dot(localLightDirection, localUpDirection);\n            float t = (sinElevation + 1.0) / 2.0;\n            return aboveLuminance * t + belowLuminance * (1.0 - t);\n        }\n        \n        vec3 softLightingSpecularSample(\n            vec3 aboveLuminance,\n            vec3 belowLuminance,\n            vec3 localUpDirection,\n            vec3 localViewDirection,\n            vec3 localLightDirection,\n            vec3 localHalfDirection,\n            float alphaSquared,\n            vec3 specularBaseColor\n        ) {\n            vec3 luminance = softLightingLuminance(aboveLuminance, belowLuminance, localUpDirection, localLightDirection);\n            float dotVH = positiveDotProduct(localViewDirection, localHalfDirection);\n            float dotNL = localLightDirection.z;\n            return luminance * (fresnelColor(specularBaseColor, dotVH) * g1(dotNL, alphaSquared));\n        }\n        \n        vec3 softLighting(\n            vec3 normalDirection,\n            vec3 diffuseBaseColor,\n            vec3 specularBaseColor,\n            float alpha,\n            vec3 directionToCamera,\n            vec3 viewY,\n            vec4 xyz_type,\n            vec4 rgb_parameter\n        ) {\n            float alphaSquared = alpha * alpha;\n            vec3 upDirection = xyz_type.xyz;\n            vec3 luminanceAbove = rgb_parameter.rgb;\n            vec3 luminanceBelow = rgb_parameter.a * luminanceAbove;\n            vec3 crossProduct = cross(normalDirection, directionToCamera);\n            float crossMagnitude = length(crossProduct);\n            vec3 xDirection = vec3(0.0, 0.0, 0.0);\n            vec3 yDirection = vec3(0.0, 0.0, 0.0);\n            if (crossMagnitude > 1.0e-6) {\n                yDirection = (1.0 / crossMagnitude) * crossProduct;\n                xDirection = cross(yDirection, normalDirection);\n            } else {\n                vec3 viewY = vec3(viewMatrix[0][1], viewMatrix[1][1], viewMatrix[2][1]);\n                xDirection = normalize(cross(viewY, normalDirection));\n                yDirection = cross(normalDirection, xDirection);\n            }\n            float localViewX = dot(directionToCamera, xDirection);\n            float localViewZ = dot(directionToCamera, normalDirection);\n            vec3 localViewDirection = vec3(localViewX, 0, localViewZ);\n            float localUpX = dot(upDirection, xDirection);\n            float localUpY = dot(upDirection, yDirection);\n            float localUpZ = dot(upDirection, normalDirection);\n            vec3 localUpDirection = vec3(localUpX, localUpY, localUpZ);\n        \n            vec3 vH = normalize(vec3(alpha * localViewX, 0.0, localViewZ));\n            vec3 vT1 = vec3(0.0, 1.0, 0.0);\n            vec3 vT2 = cross(vH, vT1);\n            float s = 0.5 * (1.0 + vH.z);\n            \n            vec3 localHalfDirection = sampleFacetNormal(vH, vT1, vT2, s, alpha);\n            vec3 localLightDirection = vec3(0.0, 0.0, 0.0);\n            \n            localLightDirection = -reflect(localViewDirection, localHalfDirection);\n            vec3 specular = softLightingSpecularSample(luminanceAbove, luminanceBelow, localUpDirection, localViewDirection, localLightDirection, localHalfDirection, alphaSquared, specularBaseColor);\n            \n            localLightDirection = vec3(0.000000, 0.000000, 1.000000);\n            vec3 diffuse = softLightingLuminance(luminanceAbove, luminanceBelow, localUpDirection, localLightDirection) * localLightDirection.z;\n            \n            return specular + diffuse * diffuseBaseColor;\n        }\n        \n        vec3 physicalLight(\n            vec4 xyz_type,\n            vec4 rgb_parameter,\n            vec3 surfacePosition,\n            vec3 normalDirection,\n            vec3 directionToCamera,\n            vec3 viewY,\n            float dotNV,\n            vec3 diffuseBaseColor,\n            vec3 specularBaseColor,\n            float alpha\n        ) {\n            float lightType = xyz_type.w;\n            if (lightType == kDisabledLight) {\n                return vec3(0.0, 0.0, 0.0);\n            } else if (lightType == kSoftLighting) {\n                return softLighting(normalDirection, diffuseBaseColor, specularBaseColor, alpha, directionToCamera, viewY, xyz_type, rgb_parameter);\n            }\n        \n            vec3 directionToLight = vec3(0.0, 0.0, 0.0);\n            vec3 normalIlluminance = vec3(0.0, 0.0, 0.0);\n            getDirectionToLightAndNormalIlluminance(xyz_type, rgb_parameter, surfacePosition, directionToLight, normalIlluminance);\n        \n            float dotNL = positiveDotProduct(normalDirection, directionToLight);\n            vec3 specularColor = brdf(normalDirection, directionToCamera, directionToLight, alpha, dotNV, dotNL, specularBaseColor, normalIlluminance);\n            return (normalIlluminance * dotNL) * ((diffuseBaseColor / kPi) + specularColor);\n        }\n        \n        vec3 physicalLighting(\n            vec3 surfacePosition,\n            vec3 surfaceNormal,\n            vec3 baseColor,\n            vec3 directionToCamera,\n            mat4 viewMatrix,\n            float roughness,\n            float metallic,\n            mat4 lights12,\n            mat4 lights34,\n            mat4 lights56,\n            mat4 lights78,\n            vec4 enabledLights\n        ) {\n            float dotNV = positiveDotProduct(surfaceNormal, directionToCamera);\n            float alpha = roughness * roughness;\n            float nonmetallic = 1.0 - metallic;\n            vec3 diffuseBaseColor = nonmetallic * 0.96 * baseColor;\n            vec3 specularBaseColor = nonmetallic * 0.04 * vec3(1.0, 1.0, 1.0) + metallic * baseColor;\n            vec3 viewY = vec3(viewMatrix[0][1], viewMatrix[1][1], viewMatrix[2][1]);\n        \n            vec3 litColor1 = enabledLights[0] == 1.0 ? physicalLight(lights12[0], lights12[1], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor2 = enabledLights[1] == 1.0 ? physicalLight(lights12[2], lights12[3], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor3 = enabledLights[2] == 1.0 ? physicalLight(lights34[0], lights34[1], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor4 = enabledLights[3] == 1.0 ? physicalLight(lights34[2], lights34[3], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor5 = physicalLight(lights56[0], lights56[1], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha);\n            vec3 litColor6 = physicalLight(lights56[2], lights56[3], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha);\n            vec3 litColor7 = physicalLight(lights78[0], lights78[1], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha);\n            vec3 litColor8 = physicalLight(lights78[2], lights78[3], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha);\n            return litColor1 + litColor2 + litColor3 + litColor4 + litColor5 + litColor6 + litColor7 + litColor8;\n        }\n        \n        float gammaCorrect(float u) {\n            if (u <= 0.0031308) {\n                return 12.92 * u;\n            } else {\n                return 1.055 * pow(u, 1.0 / 2.4) - 0.055;\n            }\n        }\n        \n        vec3 gammaCorrectedColor(vec3 color) {\n            float red = gammaCorrect(color.r);\n            float green = gammaCorrect(color.g);\n            float blue = gammaCorrect(color.b);\n            return vec3(red, green, blue);\n        }\n        \n        vec3 reinhardLuminanceToneMap(vec3 color) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scale = 1.0 / (1.0 + luminance);\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 reinhardPerChannelToneMap(vec3 color) {\n            return gammaCorrectedColor(color / (color + 1.0));\n        }\n        \n        float extendedReinhardToneMap(float x, float xMax) {\n            return x * (1.0 + (x / (xMax * xMax))) / (1.0 + x);\n        }\n        \n        vec3 extendedReinhardLuminanceToneMap(vec3 color, float overexposureLimit) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scaledLuminance = extendedReinhardToneMap(luminance, overexposureLimit);\n            float scale = scaledLuminance / luminance;\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 extendedReinhardPerChannelToneMap(vec3 color, float overexposureLimit) {\n            float red = extendedReinhardToneMap(color.r, overexposureLimit);\n            float green = extendedReinhardToneMap(color.g, overexposureLimit);\n            float blue = extendedReinhardToneMap(color.b, overexposureLimit);\n            return gammaCorrectedColor(vec3(red, green, blue));\n        }\n        \n        vec3 hableFilmicHelper(vec3 color) {\n            float a = 0.15;\n            float b = 0.5;\n            float c = 0.1;\n            float d = 0.2;\n            float e = 0.02;\n            float f = 0.3;\n            return (color * (a * color + c * b) + d * e) / (color * (a * color + b) + d * f) - e / f;\n        }\n        \n        vec3 hableFilmicToneMap(vec3 color) {\n            float exposureBias = 2.0;\n            vec3 unscaled = hableFilmicHelper(exposureBias * color);\n            vec3 scale = 1.0 / hableFilmicHelper(vec3(11.2));\n            return gammaCorrectedColor(scale * unscaled);\n        }\n        \n        vec3 toneMap(vec3 color, float toneMapType, float toneMapParam) {\n            if (toneMapType == 0.0) {\n                return gammaCorrectedColor(color);\n            } else if (toneMapType == 1.0) {\n                return reinhardLuminanceToneMap(color);\n            } else if (toneMapType == 2.0) {\n                return reinhardPerChannelToneMap(color);\n            } else if (toneMapType == 3.0) {\n                return extendedReinhardLuminanceToneMap(color, toneMapParam);\n            } else if (toneMapType == 4.0) {\n                return extendedReinhardPerChannelToneMap(color, toneMapParam);\n            } else if (toneMapType == 5.0) {\n                return hableFilmicToneMap(color);\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        vec4 toSrgb(vec3 linearColor, mat4 sceneProperties) {\n            vec3 referenceWhite = sceneProperties[2].rgb;\n            float unitR = linearColor.r / referenceWhite.r;\n            float unitG = linearColor.g / referenceWhite.g;\n            float unitB = linearColor.b / referenceWhite.b;\n            float toneMapType = sceneProperties[3][2];\n            float toneMapParam = sceneProperties[3][3];\n            vec3 toneMapped = toneMap(vec3(unitR, unitG, unitB), toneMapType, toneMapParam);\n            return vec4(toneMapped, 1.0);\n        }\n        \n        void main() {\n            vec3 normalDirection = normalize(interpolatedNormal) * getNormalSign();\n            vec3 directionToCamera = getDirectionToCamera(interpolatedPosition, sceneProperties);\n        \n            vec3 linearColor = physicalLighting(\n                interpolatedPosition,\n                normalDirection,\n                baseColor,\n                directionToCamera,\n                viewMatrix,\n                roughness,\n                metallic,\n                lights12,\n                lights34,\n                lights56,\n                lights78,\n                enabledLights\n            );\n        \n            gl_FragColor = toSrgb(linearColor, sceneProperties);\n        }\n    ",attributes:{},uniforms:{baseColor:"df",enabledLights:"Y",lights12:"bX",lights34:"cL",lights56:"cM",lights78:"cN",metallic:"dI",roughness:"d3",sceneProperties:"g",viewMatrix:"h"}},l3={src:"\n        precision highp float;\n        \n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 lights12;\n        uniform highp mat4 lights34;\n        uniform highp mat4 lights56;\n        uniform highp mat4 lights78;\n        uniform lowp vec4 enabledLights;\n        uniform mediump sampler2D baseColorTexture;\n        uniform lowp vec4 constantBaseColor;\n        uniform mediump sampler2D roughnessTexture;\n        uniform lowp vec2 constantRoughness;\n        uniform mediump sampler2D metallicTexture;\n        uniform lowp vec2 constantMetallic;\n        uniform mediump sampler2D normalMapTexture;\n        uniform lowp float useNormalMap;\n        \n        varying highp vec3 interpolatedPosition;\n        varying highp vec3 interpolatedNormal;\n        varying mediump vec2 interpolatedUv;\n        varying highp vec3 interpolatedTangent;\n        \n        const lowp float kPerspectiveProjection = 0.0;\n        const lowp float kOrthographicProjection = 1.0;\n        const lowp float kDirectionalLight = 1.0;\n        const lowp float kPointLight = 2.0;\n        const highp float kPi = 3.14159265359;\n        const mediump float kMediumpFloatMax = 65504.0;\n        const lowp float kDisabledLight = 0.0;\n        const lowp float kSoftLighting = 3.0;\n        \n        float getFloatValue(sampler2D texture, vec2 uv, vec2 constantValue) {\n            if (constantValue.y == 1.0) {\n                return constantValue.x;\n            } else {\n                vec4 textureColor = texture2D(texture, uv);\n                return dot(textureColor, vec4(0.2126, 0.7152, 0.0722, 0.0));\n            }\n        }\n        \n        vec3 getLocalNormal(sampler2D normalMap, float useNormalMap, vec2 uv) {\n            vec3 rgb = useNormalMap * texture2D(normalMap, uv).rgb + (1.0 - useNormalMap) * vec3(0.5, 0.5, 1.0);\n            float x = 2.0 * (rgb.r - 0.5);\n            float y = 2.0 * (rgb.g - 0.5);\n            float z = 2.0 * (rgb.b - 0.5);\n            return normalize(vec3(-x, -y, z));\n        }\n        \n        float getNormalSign() {\n            return 2.0 * float(gl_FrontFacing) - 1.0;\n        }\n        \n        vec3 getMappedNormal(vec3 normal, vec3 tangent, float normalSign, vec3 localNormal) {\n            vec3 bitangent = cross(normal, tangent) * normalSign;\n            return normalize(localNormal.x * tangent + localNormal.y * bitangent + localNormal.z * normal);\n        }\n        \n        vec3 getDirectionToCamera(vec3 surfacePosition, mat4 sceneProperties) {\n            float projectionType = sceneProperties[1].w;\n            if (projectionType == kPerspectiveProjection) {\n                vec3 cameraPoint = sceneProperties[1].xyz;\n                return normalize(cameraPoint - surfacePosition);\n            } else if (projectionType == kOrthographicProjection) {\n                return sceneProperties[1].xyz;\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        void getDirectionToLightAndNormalIlluminance(\n            vec4 xyz_type,\n            vec4 rgb_parameter,\n            vec3 surfacePosition,\n            out vec3 directionToLight,\n            out vec3 normalIlluminance\n        ) {\n            float lightType = xyz_type.w;\n            if (lightType == kDirectionalLight) {\n                directionToLight = xyz_type.xyz;\n                normalIlluminance = rgb_parameter.rgb;\n            } else if (lightType == kPointLight) {\n                vec3 lightPosition = xyz_type.xyz;\n                vec3 displacement = lightPosition - surfacePosition;\n                float distance = length(displacement);\n                directionToLight = displacement / distance;\n                normalIlluminance = rgb_parameter.rgb / (4.0 * kPi * distance * distance);\n            }\n        }\n        \n        float positiveDotProduct(vec3 v1, vec3 v2) {\n            return clamp(dot(v1, v2), 0.0, 1.0);\n        }\n        \n        // Adapted from https://google.github.io/filament/Filament.md.html#materialsystem/specularbrdf/normaldistributionfunction(speculard)\n        float specularD(float alpha, float dotNH, vec3 normalDirection, vec3 halfDirection) {\n            vec3 crossNH = cross(normalDirection, halfDirection);\n            float a = dotNH * alpha;\n            float k = alpha / (dot(crossNH, crossNH) + a * a);\n            float d = k * k * (1.0 / kPi);\n            return min(d, kMediumpFloatMax);\n        }\n        \n        float safeQuotient(float numerator, float denominator) {\n            if (denominator == 0.0) {\n                return 0.0;\n            } else {\n                return numerator / denominator;\n            }\n        }\n        \n        float g1(float dotNV, float alphaSquared) {\n            return safeQuotient(2.0 * dotNV, dotNV + sqrt(alphaSquared + (1.0 - alphaSquared) * dotNV * dotNV));\n        }\n        \n        float specularG(float dotNL, float dotNV, float alphaSquared) {\n            return g1(dotNV, alphaSquared) * g1(dotNL, alphaSquared);\n        }\n        \n        vec3 fresnelColor(vec3 specularBaseColor, float dotVH) {\n            vec3 one = vec3(1.0, 1.0, 1.0);\n            float scale = exp2((-5.55473 * dotVH - 6.98316) * dotVH);\n            return specularBaseColor + (one - specularBaseColor) * scale;\n        }\n        \n        vec3 brdf(vec3 normalDirection, vec3 directionToCamera, vec3 directionToLight, float alpha, float dotNV, float dotNL, vec3 specularBaseColor, vec3 normalIlluminance) {\n            vec3 halfDirection = normalize(directionToCamera + directionToLight);\n            float dotVH = positiveDotProduct(directionToCamera, halfDirection);\n            float dotNH = positiveDotProduct(normalDirection, halfDirection);\n            float dotNHSquared = dotNH * dotNH;\n        \n            float d = specularD(alpha, dotNH, normalDirection, halfDirection);\n            float g = specularG(dotNL, dotNV, alpha * alpha);\n            vec3 f = fresnelColor(specularBaseColor, dotVH);\n            return safeQuotient(d * g, 4.0 * dotNL * dotNV) * f;\n        }\n        \n        vec3 sampleFacetNormal(vec3 vH, vec3 vT1, vec3 vT2, float s, float alpha) {\n            float t2 = (1.0 - s);\n            vec3 vNh = t2 * vT2 + sqrt(max(0.0, 1.0 - t2 * t2)) * vH;\n            return normalize(vec3(alpha * vNh.x, alpha * vNh.y, max(0.0, vNh.z)));\n        }\n        \n        vec3 softLightingLuminance(\n            vec3 aboveLuminance,\n            vec3 belowLuminance,\n            vec3 localUpDirection,\n            vec3 localLightDirection\n        ) {\n            float sinElevation = dot(localLightDirection, localUpDirection);\n            float t = (sinElevation + 1.0) / 2.0;\n            return aboveLuminance * t + belowLuminance * (1.0 - t);\n        }\n        \n        vec3 softLightingSpecularSample(\n            vec3 aboveLuminance,\n            vec3 belowLuminance,\n            vec3 localUpDirection,\n            vec3 localViewDirection,\n            vec3 localLightDirection,\n            vec3 localHalfDirection,\n            float alphaSquared,\n            vec3 specularBaseColor\n        ) {\n            vec3 luminance = softLightingLuminance(aboveLuminance, belowLuminance, localUpDirection, localLightDirection);\n            float dotVH = positiveDotProduct(localViewDirection, localHalfDirection);\n            float dotNL = localLightDirection.z;\n            return luminance * (fresnelColor(specularBaseColor, dotVH) * g1(dotNL, alphaSquared));\n        }\n        \n        vec3 softLighting(\n            vec3 normalDirection,\n            vec3 diffuseBaseColor,\n            vec3 specularBaseColor,\n            float alpha,\n            vec3 directionToCamera,\n            vec3 viewY,\n            vec4 xyz_type,\n            vec4 rgb_parameter\n        ) {\n            float alphaSquared = alpha * alpha;\n            vec3 upDirection = xyz_type.xyz;\n            vec3 luminanceAbove = rgb_parameter.rgb;\n            vec3 luminanceBelow = rgb_parameter.a * luminanceAbove;\n            vec3 crossProduct = cross(normalDirection, directionToCamera);\n            float crossMagnitude = length(crossProduct);\n            vec3 xDirection = vec3(0.0, 0.0, 0.0);\n            vec3 yDirection = vec3(0.0, 0.0, 0.0);\n            if (crossMagnitude > 1.0e-6) {\n                yDirection = (1.0 / crossMagnitude) * crossProduct;\n                xDirection = cross(yDirection, normalDirection);\n            } else {\n                vec3 viewY = vec3(viewMatrix[0][1], viewMatrix[1][1], viewMatrix[2][1]);\n                xDirection = normalize(cross(viewY, normalDirection));\n                yDirection = cross(normalDirection, xDirection);\n            }\n            float localViewX = dot(directionToCamera, xDirection);\n            float localViewZ = dot(directionToCamera, normalDirection);\n            vec3 localViewDirection = vec3(localViewX, 0, localViewZ);\n            float localUpX = dot(upDirection, xDirection);\n            float localUpY = dot(upDirection, yDirection);\n            float localUpZ = dot(upDirection, normalDirection);\n            vec3 localUpDirection = vec3(localUpX, localUpY, localUpZ);\n        \n            vec3 vH = normalize(vec3(alpha * localViewX, 0.0, localViewZ));\n            vec3 vT1 = vec3(0.0, 1.0, 0.0);\n            vec3 vT2 = cross(vH, vT1);\n            float s = 0.5 * (1.0 + vH.z);\n            \n            vec3 localHalfDirection = sampleFacetNormal(vH, vT1, vT2, s, alpha);\n            vec3 localLightDirection = vec3(0.0, 0.0, 0.0);\n            \n            localLightDirection = -reflect(localViewDirection, localHalfDirection);\n            vec3 specular = softLightingSpecularSample(luminanceAbove, luminanceBelow, localUpDirection, localViewDirection, localLightDirection, localHalfDirection, alphaSquared, specularBaseColor);\n            \n            localLightDirection = vec3(0.000000, 0.000000, 1.000000);\n            vec3 diffuse = softLightingLuminance(luminanceAbove, luminanceBelow, localUpDirection, localLightDirection) * localLightDirection.z;\n            \n            return specular + diffuse * diffuseBaseColor;\n        }\n        \n        vec3 physicalLight(\n            vec4 xyz_type,\n            vec4 rgb_parameter,\n            vec3 surfacePosition,\n            vec3 normalDirection,\n            vec3 directionToCamera,\n            vec3 viewY,\n            float dotNV,\n            vec3 diffuseBaseColor,\n            vec3 specularBaseColor,\n            float alpha\n        ) {\n            float lightType = xyz_type.w;\n            if (lightType == kDisabledLight) {\n                return vec3(0.0, 0.0, 0.0);\n            } else if (lightType == kSoftLighting) {\n                return softLighting(normalDirection, diffuseBaseColor, specularBaseColor, alpha, directionToCamera, viewY, xyz_type, rgb_parameter);\n            }\n        \n            vec3 directionToLight = vec3(0.0, 0.0, 0.0);\n            vec3 normalIlluminance = vec3(0.0, 0.0, 0.0);\n            getDirectionToLightAndNormalIlluminance(xyz_type, rgb_parameter, surfacePosition, directionToLight, normalIlluminance);\n        \n            float dotNL = positiveDotProduct(normalDirection, directionToLight);\n            vec3 specularColor = brdf(normalDirection, directionToCamera, directionToLight, alpha, dotNV, dotNL, specularBaseColor, normalIlluminance);\n            return (normalIlluminance * dotNL) * ((diffuseBaseColor / kPi) + specularColor);\n        }\n        \n        vec3 physicalLighting(\n            vec3 surfacePosition,\n            vec3 surfaceNormal,\n            vec3 baseColor,\n            vec3 directionToCamera,\n            mat4 viewMatrix,\n            float roughness,\n            float metallic,\n            mat4 lights12,\n            mat4 lights34,\n            mat4 lights56,\n            mat4 lights78,\n            vec4 enabledLights\n        ) {\n            float dotNV = positiveDotProduct(surfaceNormal, directionToCamera);\n            float alpha = roughness * roughness;\n            float nonmetallic = 1.0 - metallic;\n            vec3 diffuseBaseColor = nonmetallic * 0.96 * baseColor;\n            vec3 specularBaseColor = nonmetallic * 0.04 * vec3(1.0, 1.0, 1.0) + metallic * baseColor;\n            vec3 viewY = vec3(viewMatrix[0][1], viewMatrix[1][1], viewMatrix[2][1]);\n        \n            vec3 litColor1 = enabledLights[0] == 1.0 ? physicalLight(lights12[0], lights12[1], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor2 = enabledLights[1] == 1.0 ? physicalLight(lights12[2], lights12[3], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor3 = enabledLights[2] == 1.0 ? physicalLight(lights34[0], lights34[1], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor4 = enabledLights[3] == 1.0 ? physicalLight(lights34[2], lights34[3], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor5 = physicalLight(lights56[0], lights56[1], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha);\n            vec3 litColor6 = physicalLight(lights56[2], lights56[3], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha);\n            vec3 litColor7 = physicalLight(lights78[0], lights78[1], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha);\n            vec3 litColor8 = physicalLight(lights78[2], lights78[3], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha);\n            return litColor1 + litColor2 + litColor3 + litColor4 + litColor5 + litColor6 + litColor7 + litColor8;\n        }\n        \n        float inverseGamma(float u) {\n            if (u <= 0.04045) {\n                return clamp(u / 12.92, 0.0, 1.0);\n            } else {\n                return clamp(pow((u + 0.055) / 1.055, 2.4), 0.0, 1.0);\n            }\n        }\n        \n        vec3 fromSrgb(vec3 srgbColor) {\n            return vec3(\n                inverseGamma(srgbColor.r),\n                inverseGamma(srgbColor.g),\n                inverseGamma(srgbColor.b)\n            );\n        }\n        \n        float gammaCorrect(float u) {\n            if (u <= 0.0031308) {\n                return 12.92 * u;\n            } else {\n                return 1.055 * pow(u, 1.0 / 2.4) - 0.055;\n            }\n        }\n        \n        vec3 gammaCorrectedColor(vec3 color) {\n            float red = gammaCorrect(color.r);\n            float green = gammaCorrect(color.g);\n            float blue = gammaCorrect(color.b);\n            return vec3(red, green, blue);\n        }\n        \n        vec3 reinhardLuminanceToneMap(vec3 color) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scale = 1.0 / (1.0 + luminance);\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 reinhardPerChannelToneMap(vec3 color) {\n            return gammaCorrectedColor(color / (color + 1.0));\n        }\n        \n        float extendedReinhardToneMap(float x, float xMax) {\n            return x * (1.0 + (x / (xMax * xMax))) / (1.0 + x);\n        }\n        \n        vec3 extendedReinhardLuminanceToneMap(vec3 color, float overexposureLimit) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scaledLuminance = extendedReinhardToneMap(luminance, overexposureLimit);\n            float scale = scaledLuminance / luminance;\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 extendedReinhardPerChannelToneMap(vec3 color, float overexposureLimit) {\n            float red = extendedReinhardToneMap(color.r, overexposureLimit);\n            float green = extendedReinhardToneMap(color.g, overexposureLimit);\n            float blue = extendedReinhardToneMap(color.b, overexposureLimit);\n            return gammaCorrectedColor(vec3(red, green, blue));\n        }\n        \n        vec3 hableFilmicHelper(vec3 color) {\n            float a = 0.15;\n            float b = 0.5;\n            float c = 0.1;\n            float d = 0.2;\n            float e = 0.02;\n            float f = 0.3;\n            return (color * (a * color + c * b) + d * e) / (color * (a * color + b) + d * f) - e / f;\n        }\n        \n        vec3 hableFilmicToneMap(vec3 color) {\n            float exposureBias = 2.0;\n            vec3 unscaled = hableFilmicHelper(exposureBias * color);\n            vec3 scale = 1.0 / hableFilmicHelper(vec3(11.2));\n            return gammaCorrectedColor(scale * unscaled);\n        }\n        \n        vec3 toneMap(vec3 color, float toneMapType, float toneMapParam) {\n            if (toneMapType == 0.0) {\n                return gammaCorrectedColor(color);\n            } else if (toneMapType == 1.0) {\n                return reinhardLuminanceToneMap(color);\n            } else if (toneMapType == 2.0) {\n                return reinhardPerChannelToneMap(color);\n            } else if (toneMapType == 3.0) {\n                return extendedReinhardLuminanceToneMap(color, toneMapParam);\n            } else if (toneMapType == 4.0) {\n                return extendedReinhardPerChannelToneMap(color, toneMapParam);\n            } else if (toneMapType == 5.0) {\n                return hableFilmicToneMap(color);\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        vec4 toSrgb(vec3 linearColor, mat4 sceneProperties) {\n            vec3 referenceWhite = sceneProperties[2].rgb;\n            float unitR = linearColor.r / referenceWhite.r;\n            float unitG = linearColor.g / referenceWhite.g;\n            float unitB = linearColor.b / referenceWhite.b;\n            float toneMapType = sceneProperties[3][2];\n            float toneMapParam = sceneProperties[3][3];\n            vec3 toneMapped = toneMap(vec3(unitR, unitG, unitB), toneMapType, toneMapParam);\n            return vec4(toneMapped, 1.0);\n        }\n        \n        void main() {\n            vec3 baseColor = fromSrgb(texture2D(baseColorTexture, interpolatedUv).rgb) * (1.0 - constantBaseColor.w) + constantBaseColor.rgb * constantBaseColor.w;\n            float roughness = getFloatValue(roughnessTexture, interpolatedUv, constantRoughness);\n            float metallic = getFloatValue(metallicTexture, interpolatedUv, constantMetallic);\n        \n            vec3 localNormal = getLocalNormal(normalMapTexture, useNormalMap, interpolatedUv);\n            float normalSign = getNormalSign();\n            vec3 originalNormal = normalize(interpolatedNormal) * normalSign;\n            vec3 normalDirection = getMappedNormal(originalNormal, interpolatedTangent, normalSign, localNormal);\n            vec3 directionToCamera = getDirectionToCamera(interpolatedPosition, sceneProperties);\n        \n            vec3 linearColor = physicalLighting(\n                interpolatedPosition,\n                normalDirection,\n                baseColor,\n                directionToCamera,\n                viewMatrix,\n                roughness,\n                metallic,\n                lights12,\n                lights34,\n                lights56,\n                lights78,\n                enabledLights\n            );\n        \n            gl_FragColor = toSrgb(linearColor, sceneProperties);\n        }\n    ",attributes:{},uniforms:{baseColorTexture:"dg",constantBaseColor:"dj",constantMetallic:"dk",constantRoughness:"dl",enabledLights:"Y",lights12:"bX",lights34:"cL",lights56:"cM",lights78:"cN",metallicTexture:"dJ",normalMapTexture:"bt",roughnessTexture:"d4",sceneProperties:"g",useNormalMap:"bC",viewMatrix:"h"}},l2={src:"\n        precision highp float;\n        \n        attribute highp vec3 quadVertex;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 quadVertexPositions;\n        \n        void getQuadVertex(int quadVertexIndex, mat4 quadVertexPositions, out vec3 position, out vec3 normal, out vec3 tangent) {\n            vec3 next = vec3(0.0, 0.0, 0.0);\n            vec3 prev = vec3(0.0, 0.0, 0.0);\n            if (quadVertexIndex == 0) {\n                prev = quadVertexPositions[3].xyz;\n                position = quadVertexPositions[0].xyz;\n                next = quadVertexPositions[1].xyz;\n                tangent = normalize(next - position);\n            } else if (quadVertexIndex == 1) {\n                prev = quadVertexPositions[0].xyz;\n                position = quadVertexPositions[1].xyz;\n                next = quadVertexPositions[2].xyz;\n                tangent = normalize(position - prev);\n            } else if (quadVertexIndex == 2) {\n                prev = quadVertexPositions[1].xyz;\n                position = quadVertexPositions[2].xyz;\n                next = quadVertexPositions[3].xyz;\n                tangent = normalize(position - next);\n            } else {\n                prev = quadVertexPositions[2].xyz;\n                position = quadVertexPositions[3].xyz;\n                next = quadVertexPositions[0].xyz;\n                tangent = normalize(prev - position);\n            }\n            normal = normalize(cross(next - position, prev - position));\n        }\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        void main() {\n            vec3 position = vec3(0.0, 0.0, 0.0);\n            vec3 normal = vec3(0.0, 0.0, 0.0);\n            vec3 tangent = vec3(0.0, 0.0, 0.0);\n            getQuadVertex(int(quadVertex.z), quadVertexPositions, position, normal, tangent);\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            gl_Position = projectionMatrix * (viewMatrix * worldPosition);\n        }\n    ",attributes:{quadVertex:"cZ"},uniforms:{modelMatrix:"d",modelScale:"e",projectionMatrix:"f",quadVertexPositions:"aD",sceneProperties:"g",viewMatrix:"h"}},l5=function(n){var e=new Float64Array(16);return e[0]=n.fk,e[1]=n.fo,e[2]=n.fs,e[3]=n.fw,e[4]=n.fl,e[5]=n.fp,e[6]=n.ft,e[7]=n.fx,e[8]=n.fm,e[9]=n.fq,e[10]=n.fu,e[11]=n.fy,e[12]=n.fn,e[13]=n.fr,e[14]=n.fv,e[15]=n.fz,e},l4=o(function(n,e,t,r){return l5({fk:n.bF,fl:e.bF,fm:t.bF,fn:r.bF,fo:n.c9,fp:e.c9,fq:t.c9,fr:r.c9,fs:n.at,ft:e.at,fu:t.at,fv:r.at,fw:0,fx:0,fy:0,fz:0})}),l9=t(function(n,e){return{$:0,a:n,b:e}}),l6=l9({eW:1,e8:0,fJ:6})(M([{cZ:f(eL,0,0,0)},{cZ:f(eL,1,0,1)},{cZ:f(eL,1,1,2)},{cZ:f(eL,0,1,3)}])),l7=t(function(n,e){return{$:1,a:n,b:e}}),l8=t(function(n,e){return e.$?x(e.a.G,1):x(n,0)}),fn=function(n){return n[0]},fe=function(n){return n[1]},ft=function(n){return n[2]},fr=s(eF,0,0,0,0),fo=t(function(n,e){var t;return e.$?x(e.a.G,fr):x(n,s(eF,fn(t=e.a),fe(t),ft(t),1))}),fa=t(function(n,e){var t,r=x(n,e);return r.a.$?l(l7,x(t=r.a.a.G,fr),l(l8,t,e)):r.b.$?l(l7,l(fo,t=r.b.a.G,n),l(l8,t,e)):{$:0,a:r.a.a}}),fi=r(function(n,e,t){return{$:0,a:n,b:e,c:t}}),fc=o(function(n,e,t,r){return{$:1,a:n,b:e,c:t,d:r}}),fu=o(function(n,e,t,r){return{$:0,a:n,b:e,c:t,d:r}}),fl=l(eT,0,0),ff=t(function(n,e){return e.$?x(e.a.G,fl):x(n,l(eT,e.a,1))}),fs=o(function(n,e,t,r){var o,a=s(fu,n,e,t,r);return a.a.$?s(fc,x(o=a.a.a.G,fr),l(ff,o,e),l(ff,o,t),l(l8,o,r)):a.b.$?s(fc,l(fo,o=a.b.a.G,n),x(o,fl),l(ff,o,t),l(l8,o,r)):a.c.$?s(fc,l(fo,o=a.c.a.G,n),l(ff,o,e),x(o,fl),l(l8,o,r)):a.d.$?s(fc,l(fo,o=a.d.a.G,n),l(ff,o,e),l(ff,o,t),x(o,1)):f(fi,a.a.a,a.b.a,a.c.a)}),fd={src:"\n        precision highp float;\n        \n        attribute highp vec3 quadVertex;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 quadVertexPositions;\n        \n        varying highp vec3 interpolatedPosition;\n        varying highp vec3 interpolatedNormal;\n        \n        void getQuadVertex(int quadVertexIndex, mat4 quadVertexPositions, out vec3 position, out vec3 normal, out vec3 tangent) {\n            vec3 next = vec3(0.0, 0.0, 0.0);\n            vec3 prev = vec3(0.0, 0.0, 0.0);\n            if (quadVertexIndex == 0) {\n                prev = quadVertexPositions[3].xyz;\n                position = quadVertexPositions[0].xyz;\n                next = quadVertexPositions[1].xyz;\n                tangent = normalize(next - position);\n            } else if (quadVertexIndex == 1) {\n                prev = quadVertexPositions[0].xyz;\n                position = quadVertexPositions[1].xyz;\n                next = quadVertexPositions[2].xyz;\n                tangent = normalize(position - prev);\n            } else if (quadVertexIndex == 2) {\n                prev = quadVertexPositions[1].xyz;\n                position = quadVertexPositions[2].xyz;\n                next = quadVertexPositions[3].xyz;\n                tangent = normalize(position - next);\n            } else {\n                prev = quadVertexPositions[2].xyz;\n                position = quadVertexPositions[3].xyz;\n                next = quadVertexPositions[0].xyz;\n                tangent = normalize(prev - position);\n            }\n            normal = normalize(cross(next - position, prev - position));\n        }\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        vec3 safeNormalize(vec3 vector) {\n            if (vector == vec3(0.0, 0.0, 0.0)) {\n                return vector;\n            } else {\n                return normalize(vector);\n            }\n        }\n        \n        vec3 getWorldNormal(vec3 modelNormal, vec4 modelScale, mat4 modelMatrix) {\n            vec3 normalScale = vec3(modelScale.w / modelScale.x, modelScale.w / modelScale.y, modelScale.w / modelScale.z);\n            return (modelMatrix * vec4(safeNormalize(normalScale * modelNormal), 0.0)).xyz;\n        }\n        \n        void main() {\n            vec3 position = vec3(0.0, 0.0, 0.0);\n            vec3 normal = vec3(0.0, 0.0, 0.0);\n            vec3 tangent = vec3(0.0, 0.0, 0.0);\n            getQuadVertex(int(quadVertex.z), quadVertexPositions, position, normal, tangent);\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            gl_Position = projectionMatrix * (viewMatrix * worldPosition);\n            interpolatedPosition = worldPosition.xyz;\n            interpolatedNormal = getWorldNormal(normal, modelScale, modelMatrix);\n        }\n    ",attributes:{quadVertex:"cZ"},uniforms:{modelMatrix:"d",modelScale:"e",projectionMatrix:"f",quadVertexPositions:"aD",sceneProperties:"g",viewMatrix:"h"}},fp={src:"\n        precision highp float;\n        \n        attribute highp vec3 quadVertex;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 quadVertexPositions;\n        \n        varying highp vec3 interpolatedPosition;\n        varying highp vec3 interpolatedNormal;\n        varying mediump vec2 interpolatedUv;\n        varying highp vec3 interpolatedTangent;\n        \n        void getQuadVertex(int quadVertexIndex, mat4 quadVertexPositions, out vec3 position, out vec3 normal, out vec3 tangent) {\n            vec3 next = vec3(0.0, 0.0, 0.0);\n            vec3 prev = vec3(0.0, 0.0, 0.0);\n            if (quadVertexIndex == 0) {\n                prev = quadVertexPositions[3].xyz;\n                position = quadVertexPositions[0].xyz;\n                next = quadVertexPositions[1].xyz;\n                tangent = normalize(next - position);\n            } else if (quadVertexIndex == 1) {\n                prev = quadVertexPositions[0].xyz;\n                position = quadVertexPositions[1].xyz;\n                next = quadVertexPositions[2].xyz;\n                tangent = normalize(position - prev);\n            } else if (quadVertexIndex == 2) {\n                prev = quadVertexPositions[1].xyz;\n                position = quadVertexPositions[2].xyz;\n                next = quadVertexPositions[3].xyz;\n                tangent = normalize(position - next);\n            } else {\n                prev = quadVertexPositions[2].xyz;\n                position = quadVertexPositions[3].xyz;\n                next = quadVertexPositions[0].xyz;\n                tangent = normalize(prev - position);\n            }\n            normal = normalize(cross(next - position, prev - position));\n        }\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        vec3 safeNormalize(vec3 vector) {\n            if (vector == vec3(0.0, 0.0, 0.0)) {\n                return vector;\n            } else {\n                return normalize(vector);\n            }\n        }\n        \n        vec3 getWorldNormal(vec3 modelNormal, vec4 modelScale, mat4 modelMatrix) {\n            vec3 normalScale = vec3(modelScale.w / modelScale.x, modelScale.w / modelScale.y, modelScale.w / modelScale.z);\n            return (modelMatrix * vec4(safeNormalize(normalScale * modelNormal), 0.0)).xyz;\n        }\n        \n        void main() {\n            vec3 position = vec3(0.0, 0.0, 0.0);\n            vec3 normal = vec3(0.0, 0.0, 0.0);\n            vec3 tangent = vec3(0.0, 0.0, 0.0);\n            getQuadVertex(int(quadVertex.z), quadVertexPositions, position, normal, tangent);\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            gl_Position = projectionMatrix * (viewMatrix * worldPosition);\n            interpolatedPosition = worldPosition.xyz;\n            interpolatedNormal = getWorldNormal(normal, modelScale, modelMatrix);\n            interpolatedUv = quadVertex.xy;\n            interpolatedTangent = tangent;\n        }\n    ",attributes:{quadVertex:"cZ"},uniforms:{modelMatrix:"d",modelScale:"e",projectionMatrix:"f",quadVertexPositions:"aD",sceneProperties:"g",viewMatrix:"h"}},fm={src:"\n        precision highp float;\n        \n        attribute highp vec3 quadVertex;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 quadVertexPositions;\n        \n        varying mediump vec2 interpolatedUv;\n        \n        void getQuadVertex(int quadVertexIndex, mat4 quadVertexPositions, out vec3 position, out vec3 normal, out vec3 tangent) {\n            vec3 next = vec3(0.0, 0.0, 0.0);\n            vec3 prev = vec3(0.0, 0.0, 0.0);\n            if (quadVertexIndex == 0) {\n                prev = quadVertexPositions[3].xyz;\n                position = quadVertexPositions[0].xyz;\n                next = quadVertexPositions[1].xyz;\n                tangent = normalize(next - position);\n            } else if (quadVertexIndex == 1) {\n                prev = quadVertexPositions[0].xyz;\n                position = quadVertexPositions[1].xyz;\n                next = quadVertexPositions[2].xyz;\n                tangent = normalize(position - prev);\n            } else if (quadVertexIndex == 2) {\n                prev = quadVertexPositions[1].xyz;\n                position = quadVertexPositions[2].xyz;\n                next = quadVertexPositions[3].xyz;\n                tangent = normalize(position - next);\n            } else {\n                prev = quadVertexPositions[2].xyz;\n                position = quadVertexPositions[3].xyz;\n                next = quadVertexPositions[0].xyz;\n                tangent = normalize(prev - position);\n            }\n            normal = normalize(cross(next - position, prev - position));\n        }\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        void main() {\n            vec3 position = vec3(0.0, 0.0, 0.0);\n            vec3 normal = vec3(0.0, 0.0, 0.0);\n            vec3 tangent = vec3(0.0, 0.0, 0.0);\n            getQuadVertex(int(quadVertex.z), quadVertexPositions, position, normal, tangent);\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            gl_Position = projectionMatrix * (viewMatrix * worldPosition);\n            interpolatedUv = quadVertex.xy;\n        }\n    ",attributes:{quadVertex:"cZ"},uniforms:{modelMatrix:"d",modelScale:"e",projectionMatrix:"f",quadVertexPositions:"aD",sceneProperties:"g",viewMatrix:"h"}},fv=a(function(n,e,t,r,o){var a=lq(l(lY,e,M([t,r,o])));return l(lF,a,function(){switch(n.$){case 0:if(n.b.$){var a=n.b.a.G;return u(function(n,i,c,u,l,p,m,v){return d(eN,f(l0,u,0,v),fm,lW,l6,{ct:a,d:c,e:i,f:p,aD:s(l4,e,t,r,o),g:n,h:l})})}var i=n.b.a;return u(function(n,a,c,u,l,p,m,v){return d(eN,f(l0,u,0,v),l2,lz,l6,{a3:i,d:c,e:a,f:p,aD:s(l4,e,t,r,o),g:n,h:l})});case 1:if(n.b.$)return a=n.b.a.G,p=n.c,u(function(n,i,c,u,l,m,v,g){return d(eN,f(l0,u,0,g),fm,lU,l6,{dd:p,ct:a,d:c,e:i,f:m,aD:s(l4,e,t,r,o),g:n,h:l})});var c=n.b.a,p=n.c;return u(function(n,a,i,u,m,v,g,h){return d(eN,f(l0,u,0,h),l2,lS,l6,{dd:p,bk:l(eM,p,c),d:i,e:a,f:v,aD:s(l4,e,t,r,o),g:n,h:m})});case 2:var m=l(fa,n.b,n.c);if(m.$){var v=m.a.a,g=m.b,h=g.a,b=g.b;return u(function(n,a,i,c,u,l,p,m){var g=p.a,x=p.b;return d(eN,f(l0,c,0,m),fp,lX,l6,{Y:x,bX:g.bX,cL:g.cL,cM:g.cM,cN:g.cN,dG:v,d:i,e:a,bt:h,f:l,aD:s(l4,e,t,r,o),g:n,bC:b,h:u})})}var x=m.a;return u(function(n,a,i,c,u,l,p,m){var v=p.a,g=p.b;return d(eN,f(l0,c,0,m),fd,lQ,l6,{Y:g,bX:v.bX,cL:v.cL,cM:v.cM,cN:v.cN,dF:x,d:i,e:a,f:l,aD:s(l4,e,t,r,o),g:n,h:u})});default:var y=s(fs,n.b,n.c,n.d,n.e);if(y.$){var w=y.a,P=w.a,C=w.b,T=y.b,L=T.a,M=T.b,F=y.c,$=F.a,z=F.b,S=y.d;return h=S.a,b=S.b,u(function(n,a,i,c,u,l,p,m){var v=p.a,g=p.b;return d(eN,f(l0,c,0,m),fp,l3,l6,{dg:P,dj:C,dk:z,dl:M,Y:g,bX:v.bX,cL:v.cL,cM:v.cM,cN:v.cN,dJ:$,d:i,e:a,bt:h,f:l,aD:s(l4,e,t,r,o),d4:L,g:n,bC:b,h:u})})}var D=y.a,N=y.b,k=y.c;return u(function(n,a,i,c,u,l,p,m){var v=p.a,g=p.b;return d(eN,f(l0,c,0,m),fd,l1,l6,{df:D,Y:g,bX:v.bX,cL:v.cL,cM:v.cM,cN:v.cN,dI:k,d:i,e:a,f:l,aD:s(l4,e,t,r,o),d3:N,g:n,h:u})})}}())}),fg=function(n){return{$:2,a:n}},fh=r(function(n,e,t){return{$:3,a:n,b:e,c:t}})({eW:1,e8:3,fJ:4}),fb=(rc=M([{aV:l(eT,0,1)},{aV:l(eT,1,1)},{aV:l(eT,2,1)},{aV:l(eT,3,1)},{aV:l(eT,0,-1)},{aV:l(eT,1,-1)},{aV:l(eT,2,-1)},{aV:l(eT,3,-1)}]),l(fh,rc,M([y(0,1,2),y(0,2,3),y(4,6,5),y(4,7,6),y(4,5,1),y(1,0,4),y(5,6,2),y(2,1,5),y(6,7,3),y(3,2,6),y(7,4,0),y(0,3,7)]))),fx={src:"\n        precision highp float;\n        \n        attribute highp vec2 quadShadowVertex;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 shadowLight;\n        uniform highp mat4 quadVertexPositions;\n        \n        const lowp float kDirectionalLight = 1.0;\n        const lowp float kPointLight = 2.0;\n        \n        void getQuadVertex(int quadVertexIndex, mat4 quadVertexPositions, out vec3 position, out vec3 normal, out vec3 tangent) {\n            vec3 next = vec3(0.0, 0.0, 0.0);\n            vec3 prev = vec3(0.0, 0.0, 0.0);\n            if (quadVertexIndex == 0) {\n                prev = quadVertexPositions[3].xyz;\n                position = quadVertexPositions[0].xyz;\n                next = quadVertexPositions[1].xyz;\n                tangent = normalize(next - position);\n            } else if (quadVertexIndex == 1) {\n                prev = quadVertexPositions[0].xyz;\n                position = quadVertexPositions[1].xyz;\n                next = quadVertexPositions[2].xyz;\n                tangent = normalize(position - prev);\n            } else if (quadVertexIndex == 2) {\n                prev = quadVertexPositions[1].xyz;\n                position = quadVertexPositions[2].xyz;\n                next = quadVertexPositions[3].xyz;\n                tangent = normalize(position - next);\n            } else {\n                prev = quadVertexPositions[2].xyz;\n                position = quadVertexPositions[3].xyz;\n                next = quadVertexPositions[0].xyz;\n                tangent = normalize(prev - position);\n            }\n            normal = normalize(cross(next - position, prev - position));\n        }\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        vec3 safeNormalize(vec3 vector) {\n            if (vector == vec3(0.0, 0.0, 0.0)) {\n                return vector;\n            } else {\n                return normalize(vector);\n            }\n        }\n        \n        vec3 getWorldNormal(vec3 modelNormal, vec4 modelScale, mat4 modelMatrix) {\n            vec3 normalScale = vec3(modelScale.w / modelScale.x, modelScale.w / modelScale.y, modelScale.w / modelScale.z);\n            return (modelMatrix * vec4(safeNormalize(normalScale * modelNormal), 0.0)).xyz;\n        }\n        \n        vec3 getDirectionToLight(vec3 surfacePosition, vec4 xyz_type, vec4 rgb_parameter) {\n            float lightType = xyz_type.w;\n            if (lightType == kDirectionalLight) {\n                return xyz_type.xyz;\n            } else if (lightType == kPointLight) {\n                vec3 lightPosition = xyz_type.xyz;\n                return normalize(lightPosition - surfacePosition);\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        vec4 shadowVertexPosition(vec3 position, vec3 normal, mat4 shadowLight, vec4 modelScale, mat4 modelMatrix, mat4 viewMatrix, mat4 projectionMatrix, mat4 sceneProperties) {\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            vec3 worldNormal = getWorldNormal(normal, vec4(modelScale.xyz, 1.0), modelMatrix);\n            vec4 xyz_type = shadowLight[0];\n            vec4 rgb_parameter = shadowLight[1];\n            vec3 directionToLight = getDirectionToLight(worldPosition.xyz, xyz_type, rgb_parameter);\n            vec3 offset = vec3(0.0, 0.0, 0.0);\n            float sceneDiameter = sceneProperties[3][1];\n            if (dot(directionToLight, worldNormal) <= 0.0) {\n                offset = -sceneDiameter * directionToLight;\n            } else {\n                offset = -0.001 * sceneDiameter * directionToLight;\n            }\n            vec4 offsetPosition = worldPosition + vec4(offset, 0.0);\n            return projectionMatrix * (viewMatrix * offsetPosition);\n        }\n        \n        void main () {\n            vec3 position = vec3(0.0, 0.0, 0.0);\n            vec3 normal = vec3(0.0, 0.0, 0.0);\n            vec3 tangent = vec3(0.0, 0.0, 0.0);\n            getQuadVertex(int(quadShadowVertex.x), quadVertexPositions, position, normal, tangent);\n            normal *= quadShadowVertex.y;\n            gl_Position = shadowVertexPosition(\n                position,\n                normal,\n                shadowLight,\n                modelScale,\n                modelMatrix,\n                viewMatrix,\n                projectionMatrix,\n                sceneProperties\n            );\n        }\n    ",attributes:{quadShadowVertex:"aV"},uniforms:{modelMatrix:"d",modelScale:"e",projectionMatrix:"f",quadVertexPositions:"aD",sceneProperties:"g",shadowLight:"c3",viewMatrix:"h"}},fy={src:"\n        precision lowp float;\n        \n        void main () {\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n        }\n    ",attributes:{},uniforms:{}},fw=function(n){return function(e){return function(t){return function(r){return function(o){return function(a){return function(i){return function(c){return function(u){return function(l){return function(f){return{$:2,a:n,b:e,c:t,d:r,e:o,f:a,g:i,h:c,i:u,j:l,k:f}}}}}}}}}}}},fP=r(function(n,e,r){var o=n.d0,a=n.dE,i=n.ek,c=t(function(n,e){return e(n)}),u=t(function(n,e){return e(n)}),s=function(n){return l(cy,c(n.b8),l(cy,u(n.bR),l(cy,u(n.ch),u(n.ci))))};return l(s,r,l(s,e,f(fw,o,a,i)))}),fC=f(fP,{dE:0,d0:0,ek:15},{bR:7680,b8:519,ch:7680,ci:7683},{bR:7680,b8:519,ch:7680,ci:7682}),fT=f(fP,{dE:0,d0:0,ek:15},{bR:7680,b8:519,ch:7680,ci:7682},{bR:7680,b8:519,ch:7680,ci:7683}),fL=t(function(n,e){return l(L,n?fT:fC,e)}),fM=o(function(n,e,t,r){return fg(u(function(o,a,i,c,u,f,p,m){return d(eN,l(fL,c,m),fx,fy,fb,{d:i,e:a,f:f,aD:s(l4,n,e,t,r),g:o,c3:p,h:u})}))}),fF=c(function(n,e,t,r,o,a,i){var c=d(fv,t,r,o,a,i),u=x(n,e);return u.a?u.b?lL(M([c,s(fM,r,o,a,i)])):c:u.b?s(fM,r,o,a,i):lP}),f$=a(function(n,e,t,r,o){return m(fF,!0,!1,n,e,t,r,o)}),fz=function(n){return n},fS=a(function(n,e,t,r,o){return d(f$,ly(n),e,t,r,o)}),fD=r(function(n,e,t){return t.$?n(t.a):e(t.a)}),fN=function(){return l(fD,function(){return lb},tN)},fk=a(function(n,e,t,r,o){if(1===e.$)return e7(e.a);var a=e.a;if(1===t.$)return e7(t.a);var i=t.a;if(1===r.$)return e7(r.a);var c=r.a;return 1===o.$?e7(o.a):tt(s(n,a,i,c,o.a))}),fV=i(function(n,e,t,r,a,i){return l(lC,n,d(fk,o(function(t,r,o,a){return d(fS,l(fN,n,e),t,r,o,a)}),t,r,a,i))}),fA=t(function(n,e){return l(tP,n,e)}),f_=t(function(n,e){return l(oX,n,e)}),fB=function(n){return n.bF},fE=function(n){return n.c9},fj=function(n){return n.at},fq={src:"\n        precision highp float;\n        \n        attribute lowp float triangleVertex;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 triangleVertexPositions;\n        \n        void getTriangleVertex(int triangleVertexIndex, mat4 triangleVertexPositions, out vec3 position, out vec3 normal) {\n            vec3 p1 = triangleVertexPositions[0].xyz;\n            vec3 p2 = triangleVertexPositions[1].xyz;\n            vec3 p3 = triangleVertexPositions[2].xyz;\n            normal = normalize(cross(p2 - p1, p3 - p2));\n            float t1 = float(triangleVertexIndex == 0);\n            float t2 = float(triangleVertexIndex == 1);\n            float t3 = float(triangleVertexIndex == 2);\n            position = t1 * p1 + t2 * p2 + t3 * p3;\n        }\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        void main() {\n            vec3 position = vec3(0.0, 0.0, 0.0);\n            vec3 normal = vec3(0.0, 0.0, 0.0);\n            getTriangleVertex(int(triangleVertex), triangleVertexPositions, position, normal);\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            gl_Position = projectionMatrix * (viewMatrix * worldPosition);\n        }\n    ",attributes:{triangleVertex:"ec"},uniforms:{modelMatrix:"d",modelScale:"e",projectionMatrix:"f",sceneProperties:"g",triangleVertexPositions:"ce",viewMatrix:"h"}},fI={src:"\n        precision highp float;\n        \n        attribute lowp float triangleVertex;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 triangleVertexPositions;\n        \n        varying highp vec3 interpolatedPosition;\n        varying highp vec3 interpolatedNormal;\n        \n        void getTriangleVertex(int triangleVertexIndex, mat4 triangleVertexPositions, out vec3 position, out vec3 normal) {\n            vec3 p1 = triangleVertexPositions[0].xyz;\n            vec3 p2 = triangleVertexPositions[1].xyz;\n            vec3 p3 = triangleVertexPositions[2].xyz;\n            normal = normalize(cross(p2 - p1, p3 - p2));\n            float t1 = float(triangleVertexIndex == 0);\n            float t2 = float(triangleVertexIndex == 1);\n            float t3 = float(triangleVertexIndex == 2);\n            position = t1 * p1 + t2 * p2 + t3 * p3;\n        }\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        vec3 safeNormalize(vec3 vector) {\n            if (vector == vec3(0.0, 0.0, 0.0)) {\n                return vector;\n            } else {\n                return normalize(vector);\n            }\n        }\n        \n        vec3 getWorldNormal(vec3 modelNormal, vec4 modelScale, mat4 modelMatrix) {\n            vec3 normalScale = vec3(modelScale.w / modelScale.x, modelScale.w / modelScale.y, modelScale.w / modelScale.z);\n            return (modelMatrix * vec4(safeNormalize(normalScale * modelNormal), 0.0)).xyz;\n        }\n        \n        void main() {\n            vec3 position = vec3(0.0, 0.0, 0.0);\n            vec3 normal = vec3(0.0, 0.0, 0.0);\n            getTriangleVertex(int(triangleVertex), triangleVertexPositions, position, normal);\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            gl_Position = projectionMatrix * (viewMatrix * worldPosition);\n            interpolatedPosition = worldPosition.xyz;\n            interpolatedNormal = getWorldNormal(normal, modelScale, modelMatrix);\n        }\n    ",attributes:{triangleVertex:"ec"},uniforms:{modelMatrix:"d",modelScale:"e",projectionMatrix:"f",sceneProperties:"g",triangleVertexPositions:"ce",viewMatrix:"h"}},fR=function(n){var e=n.a,t=n.b,r=n.c;return l5({fk:e.bF,fl:t.bF,fm:r.bF,fn:0,fo:e.c9,fp:t.c9,fq:r.c9,fr:0,fs:e.at,ft:t.at,fu:r.at,fv:0,fw:0,fx:0,fy:0,fz:0})},fH=t(function(n,e){return{$:2,a:n,b:e}})({eW:3,e8:0,fJ:4})(M([y({ec:0},{ec:1},{ec:2})])),fO=t(function(n,e){var t,r,o,a,i,c,p,m,v,g,h,b,x,y,w,P,C,T,L,M=lq((v=e.b,g=e.c,h=fB(m=e.a),b=fE(m),x=fj(m),y=fB(v),w=fE(v),P=fj(v),C=fB(g),T=fE(g),L=fj(g),r=(t={fC:l(fA,h,l(fA,y,C)),fD:l(fA,b,l(fA,w,T)),fE:l(fA,x,l(fA,P,L)),fF:l(f_,h,l(f_,y,C)),fG:l(f_,b,l(f_,w,T)),fH:l(f_,x,l(f_,P,L))}).fE,o=t.fH,a=t.fD,i=t.fG,c=t.fC,{fC:l(tP,p=t.fF,c),fD:l(tP,i,a),fE:l(tP,o,r),fF:l(oX,p,c),fG:l(oX,i,a),fH:l(oX,o,r)}));switch(n.$){case 0:if(n.b.$)return lP;var F=n.b.a;return l(lF,M,u(function(n,t,r,o,a,i,c,u){return d(eN,f(l0,o,0,u),fq,lz,fH,{a3:F,d:r,e:t,f:i,g:n,ce:fR(e),h:a})}));case 1:if(n.b.$)return lP;var $=n.b.a,z=n.c;return l(lF,M,u(function(n,t,r,o,a,i,c,u){return d(eN,f(l0,o,0,u),fq,lS,fH,{bk:l(eM,z,$),d:r,e:t,f:i,g:n,ce:fR(e),h:a})}));case 2:var S=l(fa,n.b,n.c);if(S.$)return lP;var D=S.a;return l(lF,M,u(function(n,t,r,o,a,i,c,u){var l=c.a,s=c.b;return d(eN,f(l0,o,0,u),fI,lQ,fH,{Y:s,bX:l.bX,cL:l.cL,cM:l.cM,cN:l.cN,dF:D,d:r,e:t,f:i,g:n,ce:fR(e),h:a})}));default:var N=s(fs,n.b,n.c,n.d,n.e);if(N.$)return lP;var k=N.a,V=N.b,A=N.c;return l(lF,M,u(function(n,t,r,o,a,i,c,u){var l=c.a,s=c.b;return d(eN,f(l0,o,0,u),fI,l1,fH,{df:k,Y:s,bX:l.bX,cL:l.cL,cM:l.cM,cN:l.cN,dI:A,d:r,e:t,f:i,d3:V,g:n,ce:fR(e),h:a})}))}}),fW=l(fh,M([{bB:l(eT,0,1)},{bB:l(eT,1,1)},{bB:l(eT,2,1)},{bB:l(eT,0,-1)},{bB:l(eT,1,-1)},{bB:l(eT,2,-1)}]),M([y(0,1,2),y(3,5,4),y(3,4,1),y(3,1,0),y(4,5,2),y(4,2,1),y(5,3,0),y(5,0,2)])),fU={src:"\n        precision highp float;\n        \n        attribute highp vec2 triangleShadowVertex;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 shadowLight;\n        uniform highp mat4 triangleVertexPositions;\n        \n        const lowp float kDirectionalLight = 1.0;\n        const lowp float kPointLight = 2.0;\n        \n        void getTriangleVertex(int triangleVertexIndex, mat4 triangleVertexPositions, out vec3 position, out vec3 normal) {\n            vec3 p1 = triangleVertexPositions[0].xyz;\n            vec3 p2 = triangleVertexPositions[1].xyz;\n            vec3 p3 = triangleVertexPositions[2].xyz;\n            normal = normalize(cross(p2 - p1, p3 - p2));\n            float t1 = float(triangleVertexIndex == 0);\n            float t2 = float(triangleVertexIndex == 1);\n            float t3 = float(triangleVertexIndex == 2);\n            position = t1 * p1 + t2 * p2 + t3 * p3;\n        }\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        vec3 safeNormalize(vec3 vector) {\n            if (vector == vec3(0.0, 0.0, 0.0)) {\n                return vector;\n            } else {\n                return normalize(vector);\n            }\n        }\n        \n        vec3 getWorldNormal(vec3 modelNormal, vec4 modelScale, mat4 modelMatrix) {\n            vec3 normalScale = vec3(modelScale.w / modelScale.x, modelScale.w / modelScale.y, modelScale.w / modelScale.z);\n            return (modelMatrix * vec4(safeNormalize(normalScale * modelNormal), 0.0)).xyz;\n        }\n        \n        vec3 getDirectionToLight(vec3 surfacePosition, vec4 xyz_type, vec4 rgb_parameter) {\n            float lightType = xyz_type.w;\n            if (lightType == kDirectionalLight) {\n                return xyz_type.xyz;\n            } else if (lightType == kPointLight) {\n                vec3 lightPosition = xyz_type.xyz;\n                return normalize(lightPosition - surfacePosition);\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        vec4 shadowVertexPosition(vec3 position, vec3 normal, mat4 shadowLight, vec4 modelScale, mat4 modelMatrix, mat4 viewMatrix, mat4 projectionMatrix, mat4 sceneProperties) {\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            vec3 worldNormal = getWorldNormal(normal, vec4(modelScale.xyz, 1.0), modelMatrix);\n            vec4 xyz_type = shadowLight[0];\n            vec4 rgb_parameter = shadowLight[1];\n            vec3 directionToLight = getDirectionToLight(worldPosition.xyz, xyz_type, rgb_parameter);\n            vec3 offset = vec3(0.0, 0.0, 0.0);\n            float sceneDiameter = sceneProperties[3][1];\n            if (dot(directionToLight, worldNormal) <= 0.0) {\n                offset = -sceneDiameter * directionToLight;\n            } else {\n                offset = -0.001 * sceneDiameter * directionToLight;\n            }\n            vec4 offsetPosition = worldPosition + vec4(offset, 0.0);\n            return projectionMatrix * (viewMatrix * offsetPosition);\n        }\n        \n        void main () {\n            vec3 position = vec3(0.0, 0.0, 0.0);\n            vec3 normal = vec3(0.0, 0.0, 0.0);\n            getTriangleVertex(int(triangleShadowVertex.x), triangleVertexPositions, position, normal);\n            normal *= triangleShadowVertex.y;\n            gl_Position = shadowVertexPosition(\n                position,\n                normal,\n                shadowLight,\n                modelScale,\n                modelMatrix,\n                viewMatrix,\n                projectionMatrix,\n                sceneProperties\n            );\n        }\n    ",attributes:{triangleShadowVertex:"bB"},uniforms:{modelMatrix:"d",modelScale:"e",projectionMatrix:"f",sceneProperties:"g",shadowLight:"c3",triangleVertexPositions:"ce",viewMatrix:"h"}},fG=function(n){return fg(u(function(e,t,r,o,a,i,c,u){return d(eN,l(fL,o,u),fU,fy,fW,{d:r,e:t,f:i,g:e,c3:c,ce:fR(n),h:a})}))},fY=o(function(n,e,t,r){var o=l(fO,t,r),a=x(n,e);return a.a?a.b?lL(M([o,fG(r)])):o:a.b?fG(r):lP}),fQ=t(function(n,e){return s(fY,!0,!1,n,e)}),fX=r(function(n,e,t){return{$:1,a:n,b:e,c:t}}),fJ=r(function(n,e,t){return{$:2,a:n,b:e,c:t}}),fZ=a(function(n,e,t,r,o){return{$:3,a:n,b:e,c:t,d:r,e:o}}),fK=t(function(n,e){return l(fQ,function(n){switch(n.$){case 0:return l(lx,n.a,n.b);case 1:return f(fX,n.a,n.b,n.c);case 2:return f(fJ,n.a,n.b,n.c);default:return d(fZ,n.a,n.b,n.c,n.d,n.e)}}(n),e)}),f0=o(function(n,e,t,r){return l(fK,ly(n),y(e,t,r))}),f1=o(function(n,e,t,r){if(1===e.$)return e7(e.a);var o=e.a;if(1===t.$)return e7(t.a);var a=t.a;return 1===r.$?e7(r.a):tt(f(n,o,a,r.a))}),f3=a(function(n,e,t,o,a){return l(lC,n,s(f1,r(function(t,r,o){return s(f0,l(fN,n,e),t,r,o)}),t,o,a))}),f2=t(function(n,e){return{$:5,a:n,b:e}}),f5=t(function(n,e){return{fa:v(n.fa,e.fa),v:n.v*e.v+n.w*e.y+n.x*e.B,w:n.v*e.w+n.w*e.z+n.x*e.C,x:n.v*e.x+n.w*e.A+n.x*e.D,y:n.y*e.v+n.z*e.y+n.A*e.B,z:n.y*e.w+n.z*e.z+n.A*e.C,A:n.y*e.x+n.z*e.A+n.A*e.D,B:n.B*e.v+n.C*e.y+n.D*e.B,C:n.B*e.w+n.C*e.z+n.D*e.C,D:n.B*e.x+n.C*e.A+n.D*e.D,N:e.N+(n.N*e.v+n.O*e.y+n.P*e.B)*e.c1,O:e.O+(n.N*e.w+n.O*e.z+n.P*e.C)*e.c1,P:e.P+(n.N*e.x+n.O*e.A+n.P*e.D)*e.c1,c1:n.c1*e.c1}}),f4=t(function(n,e){switch(e.$){case 0:return lP;case 5:var t=e.b;return l(f2,l(f5,e.a,n),t);default:return l(f2,n,e)}}),f9=t(function(n,e){var t,r,o,a,i,c,u,f;return l(f4,(t=n.dQ,o=1-2*(r=n.fO).at*r.at,a=-2*r.c9*r.at,i=1-2*r.c9*r.c9,c=-2*r.bF*r.at,u=-2*r.bF*r.c9,{fa:!1,v:f=1-2*r.bF*r.bF,w:u,x:c,y:u,z:i,A:a,B:c,C:a,D:o,N:t.bF-f*t.bF-u*t.c9-c*t.at,O:t.c9-u*t.bF-i*t.c9-a*t.at,P:t.at-c*t.bF-a*t.c9-o*t.at,c1:1}),e)}),f6={bF:0,c9:0,at:0},f7={bF:1,c9:0,at:0},f8=t(function(n,e){return l(f9,n,e)})(l(t(function(n,e){return{fO:e,dQ:n}}),f6,f7)),sn=function(n){return w(n,{bF:-n.bF})},se=function(n){return{$:2,a:n}},st=l(tY,lg(L),tt(C)),sr=function(n){var e=M([l(lO,l(cy,function(n){return n.cz},function(n){return n.ea}),n.e_),l(lO,l(cy,function(n){return n.cz},function(n){return n.eb}),n.e_),l(lO,l(cy,function(n){return n.cz},function(n){return n.dh}),n.e_),l(lO,l(cy,function(n){return n.cz},function(n){return n.di}),n.e_),n.fS,n.fQ,n.fP,n.eA,n.eI,n.cB,n.e$,n.cA,n.fb,n.eB,n.eH,n.eO,n.eN,n.eM,n.eV,n.eP]);return st(l(o7,function(n){return 1!==n.$||1!==n.a.$},l(o$,e,l(tQ,lO(sn),e))))},so=t(function(n,e){return e.$?e7(n):tt(e.a)}),sa=function(n){return 1===n.$?e7(n.a):1===n.a.$?e7(n.a.a):tt(n.a.a)},si=t(function(n,e){return l(le,.5,l(lr,n,e))}),sc=t(function(n,e){return l(f4,{fa:!0,v:1,w:0,x:0,y:0,z:1,A:0,B:0,C:0,D:1,N:n.bF,O:n.c9,P:n.at,c1:1},e)}),su=t(function(n,e){return l(sc,n,e)}),sl=function(n){return n.a},sf=function(n){return n.c},ss=function(n){return n.b},sd=t(function(n,e){return e.$?n:e.a}),sp=t(function(n,e){var r,o,a=p(fV,"snoutTop",e.eF.gd,e.ge.fS,e.ge.fQ,l(lO,sn,e.ge.fQ),l(lO,sn,e.ge.fS)),i=d(f3,"snoutSideMiddle",e.eF.ga,e.ge.fS,e.ge.eA,e.ge.fP),c=d(f3,"snoutSideBottom",e.eF.f9,e.ge.eA,e.ge.fP,e.ge.fb),u=p(fV,"noseTip",e.eF.fR,e.ge.fP,e.ge.fS,l(lO,sn,e.ge.fS),l(lO,sn,e.ge.fP)),m=p(fV,"neck",e.eF.fM,e.ge.cA,e.ge.fb,l(lO,sn,e.ge.fb),l(lO,sn,e.ge.cA)),v=p(fV,"mouth",e.eF.fL,e.ge.eB,e.ge.fP,l(lO,sn,e.ge.fP),l(lO,sn,e.ge.eB)),g=n?lM(M([l(lH,ly(lb),x(f(ln,0,0,0),f(ln,0,0,2)))])):lP,h=d(f3,"jawSide",e.eF.fc,e.ge.fP,e.ge.eB,e.ge.fb),b=p(fV,"faceSideBottom",e.eF.cA,e.ge.cA,e.ge.e$,e.ge.eA,e.ge.fb),y=l(lO,function(n){return n.cz},e.ge.e_),w=p(fV,"faceSideTop",e.eF.cB,l(lO,function(n){return n.eb},y),e.ge.cB,e.ge.e$,e.ge.eA),P=p(fV,"forehead",e.eF.e1,l(lO,function(n){return n.ea},y),e.ge.eI,l(lO,sn,e.ge.eI),l(lO,sn,l(lO,function(n){return n.ea},y))),C=p(fV,"snoutSideTopMajor",e.eF.gb,l(lO,function(n){return n.dh},y),e.ge.fS,e.ge.eA,l(lO,function(n){return n.di},y)),T=lM(M([d(f3,"snoutSideTopMinor",e.eF.gc,e.ge.fS,e.ge.fQ,l(lO,function(n){return n.dh},y)),d(f3,"snoutSideTopMinor",e.eF.gc,e.ge.fQ,l(lO,function(n){return n.ea},y),l(lO,function(n){return n.dh},y))])),L=l(lC,"eyeQuadAndPupil",f(lg,t(function(n,e){return lM(M([d(fS,e,n.cz.di,n.cz.dh,n.cz.ea,n.cz.eb),lM(l(tQ,function(n){return s(f0,lb,sl(n),ss(n),sf(n))},n.f0))]))}),e.ge.e_,e.eF.cz)),F=lM(M([d(f3,"earBackOuter",e.eF.eR,e.ge.eN,e.ge.eM,e.ge.eV),d(f3,"earBackInner",e.eF.eQ,e.ge.eM,e.ge.eO,e.ge.eV),d(f3,"earFrontOuter",e.eF.eU,e.ge.eN,e.ge.eP,e.ge.eV),d(f3,"earFrontInner",e.eF.eT,e.ge.eP,e.ge.eO,e.ge.eV)])),$=d(f3,"crownSide",e.eF.eJ,e.ge.eH,e.ge.eI,e.ge.cB),z=p(fV,"crown",e.eF.eG,e.ge.eI,e.ge.eH,l(lO,sn,e.ge.eH),l(lO,sn,e.ge.eI)),S=p(fV,"chinBottom",e.eF.eC,e.ge.fb,e.ge.eB,l(lO,sn,e.ge.eB),l(lO,sn,e.ge.fb)),D=lM(M([a,u,p(fV,"bridge",e.eF.ew,e.ge.fQ,l(lO,function(n){return n.ea},y),l(lO,sn,l(lO,function(n){return n.ea},y)),l(lO,sn,e.ge.fQ)),P,v,S,m,z])),N=d(f3,"belowEar",e.eF.ev,l(lO,function(n){return n.eb},y),e.ge.eI,e.ge.cB),k=d(f3,"aboveEye",e.eF.ep,l(lO,function(n){return n.ea},y),e.ge.eI,l(lO,function(n){return n.eb},y)),V=lM(M([L,C,T,i,c,d(f3,"aboveCheekbone",e.eF.eo,l(lO,function(n){return n.di},y),l(lO,function(n){return n.eb},y),e.ge.eA),k,N,w,h,b,lP,$,F])),A=f8(V),_=lM(M([D,V,A,g]));return l(su,lt(l(sd,f(ln,0,0,0),l(lO,function(n){return l(si,n.a,n.b)},(r=e.ge,o=t(function(n,e){if(1===e.$)return to(x(n,n));var t=e.a,r=t.a,o=t.b;return to(x(f(ln,l(oX,n.bF,r.bF),l(oX,n.c9,r.c9),l(oX,n.at,r.at)),f(ln,l(tP,n.bF,o.bF),l(tP,n.c9,o.c9),l(tP,n.at,o.at))))}),sa(l(lO,so(se("getBoundingBox had no points to iterate over")),l(lO,l(tu,o,ta),sr(r)))))))),_)}),sm=function(n){return l(sp,!1,f(lh,n.b_,n.dO,n.dL))},sv=function(n){return{$:6,a:n}},sg=t(function(n,e){return{bF:n,c9:e}}),sh={bF:.31271,c9:.32902},sb=function(n){return n/180*A},sx=t(function(n,e){return{bF:e.c9*n.at-e.at*n.c9,c9:e.at*n.bF-e.bF*n.at,at:e.bF*n.c9-e.c9*n.bF}}),sy=function(n){var e=l(tP,ua(n.bF),l(tP,ua(n.c9),ua(n.at)));if(e){var t=n.at/e,r=n.c9/e,o=n.bF/e,a=H(o*o+r*r+t*t);return to({bF:o/a,c9:r/a,at:t/a})}return ta},sw=t(function(n,e){return{bF:e.bF-n.bF,c9:e.c9-n.c9,at:e.at-n.at}}),sP=t(function(n,e){return e.$?ta:n(e.a)}),sC=t(function(n,e){return e.bF*n.bF+e.c9*n.c9+e.at*n.at}),sT=t(function(n,e){return h(e,n)>0}),sL=t(function(n,e){return 0>h(e,n)}),sM=t(function(n,e){return{bF:e.bF-n.bF,c9:e.c9-n.c9,at:e.at-n.at}}),sF=t(function(n,e){var t=e.bF*n.bF+e.c9*n.c9+e.at*n.at;return{bF:n.bF*t,c9:n.c9*t,at:n.at*t}}),s$=function(n){return{bF:-n.bF,c9:-n.c9,at:-n.at}},sz={bF:0,c9:0,at:0},sS=r(function(n,e,t){return l(sP,function(r){return l(sP,function(o){var a=l(sx,e,n),i=l(sC,t,a),c=l(sT,0,i)?a:l(sL,0,i)?s$(a):sz;return l(om,function(n){return y(r,o,n)},sy(c))},sy(l(sM,l(sF,r,e),e)))},sy(n))}),sD=function(n){var e=function(n){var e=ua(n.at),t=ua(n.c9),r=ua(n.bF);if(1>h(r,t)){if(1>h(r,e)){var o=H(n.at*n.at+n.c9*n.c9);return{bF:0,c9:-n.at/o,at:n.c9/o}}return o=H(n.c9*n.c9+n.bF*n.bF),{bF:-n.c9/o,c9:n.bF/o,at:0}}return 1>h(t,e)?(o=H(n.at*n.at+n.bF*n.bF),{bF:n.at/o,c9:0,at:-n.bF/o}):(o=H(n.bF*n.bF+n.c9*n.c9),{bF:-n.c9/o,c9:n.bF/o,at:0})}(n);return x(e,{bF:n.c9*e.at-n.at*e.c9,c9:n.at*e.bF-n.bF*e.at,at:n.bF*e.c9-n.c9*e.bF})},sN=t(function(n,e){var t=sD(n);return{dQ:e,el:t.a,em:t.b,en:n}}),sk=function(n){var e=l(sw,n.hp,n.hk),t=n.i1,r=f(sS,e,t,l(sx,e,t));if(r.$){var o=sy(e);if(o.$){var a=sD(n.i1);return{dQ:n.hk,el:a.b,em:n.i1,en:a.a}}return l(sN,o.a,n.hk)}var i=r.a;return{dQ:n.hk,el:i.c,em:i.b,en:i.a}},sV=r(function(n,e,t){return{bF:n,c9:e,at:t}}),sA={cm:0,gX:!1,cD:0,dZ:0,c_:0,ed:0,bF:0,c9:0,at:0},s_=t(function(n,e){return l5({fk:n.bF,fl:n.c_,fm:e.bF,fn:e.c_,fo:n.c9,fp:n.cD,fq:e.c9,fr:e.cD,fs:n.at,ft:n.cm,fu:e.at,fv:e.cm,fw:n.ed,fx:n.dZ,fy:e.ed,fz:e.dZ})}),sB=x({bX:l(s_,sA,sA),cL:l(s_,sA,sA),cM:l(s_,sA,sA),cN:l(s_,sA,sA)},s(eF,0,0,0,0)),sE={$:0,a:sB.a},sj={$:0},sq=function(n){return ua(n)},sI={bF:0,c9:1,at:0},sR=s(eF,1,1,1,1),sH=r(function(n,e,t){return l(tQ,function(n){return l(n,e,t)},n)}),sO=r(function(n,e,t){return{$:0,a:n,b:e,c:t}}),sW=t(function(n,e){var t=e.bF,r=e.c9;return f(sO,n*t/r,n,n*(1-t-r)/r)}),sU=t(function(n,e){var t,r,o,a;return f(eL,3.2406*(r=(t=l(sW,n,e)).a)-1.5372*(o=t.b)-.4986*(a=t.c),-.9689*r+1.8758*o+.0415*a,.0557*r-.204*o+1.057*a)}),sG=a(function(n,e,t,r,o){return p(o,n,s(eF,r.c1,r.c1,r.c1,r.fa?1:-1),l5({fk:r.v,fl:r.y,fm:r.B,fn:r.N,fo:r.w,fp:r.z,fq:r.C,fr:r.O,fs:r.x,ft:r.A,fu:r.D,fv:r.P,fw:0,fx:0,fy:0,fz:1}),r.fa,e,t)}),sY=i(function(n,e,t,r,o,a){for(;;)switch(o.$){case 0:return a;case 5:var i=o.b;r=l(f5,o.a,r),o=i;continue;case 1:return{T:l(L,d(sG,n,e,t,r,o.b),a.T),af:a.af,ag:a.ag};case 3:return{T:a.T,af:l(L,d(sG,n,e,t,r,o.b),a.af),ag:a.ag};case 2:return{T:a.T,af:a.af,ag:l(L,d(sG,n,e,t,r,o.a),a.ag)};default:var c=o.a;return f(tu,s(sY,n,e,t,r),a,c)}}),sQ=o(function(n,e,t,r){return{$:4,a:n,b:e,c:t,d:r}}),sX=o(function(n,e,t,r){return{$:1,a:n,b:e,c:t,d:r}}),sJ=t(function(n,e){return{$:6,a:n,b:e}}),sZ=M([s(sX,518,!1,0,1),s(sQ,!1,!1,!1,!1),l(sJ,0,1)]),sK={src:"\n        precision lowp float;\n\n        void main() {\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n        }\n    ",attributes:{},uniforms:{}},s0=l9({eW:1,e8:0,fJ:5})(M([{cY:l(eT,-1,-1)},{cY:l(eT,1,-1)},{cY:l(eT,-1,1)},{cY:l(eT,1,1)}])),s1={src:"\n        precision lowp float;\n\n        attribute vec2 position;\n\n        void main() {\n            gl_Position = vec4(position, 0.0, 1.0);\n        }\n    ",attributes:{position:"cY"},uniforms:{}},s3=function(n){return f(fP,{dE:n.dE,d0:n.d0,ek:n.ek},{bR:n.bR,b8:n.b8,ch:n.ch,ci:n.ci},{bR:n.bR,b8:n.b8,ch:n.ch,ci:n.ci})},s2=function(n){return d(eN,M([s3(n),s(sQ,!1,!1,!1,!1)]),s1,sK,s0,{})},s5=s2({bR:7681,dE:0,d0:8,b8:519,ek:15,ch:7681,ci:7681}),s4=function(n){return s2({bR:7680,dE:15,d0:8,b8:516,ek:l(k,2,n+4),ch:5386,ci:5386})},s9=r(function(n,e,t){return oz(M([f(sH,n,t,sZ),M([s4(e),s5])]))}),s6=t(function(n,e){return oz(l(td,s9(n),e))}),s7=r(function(n,e,t){return{$:0,a:n,b:e,c:t}}),s8=t(function(n,e){return f(s7,32774,n,e)}),dn=M([(t4=(t5={cj:0,et:l(s8,1,771),cm:0,cs:l(s8,770,771),cD:0,c_:0}).c_,t9=t5.cD,t6=t5.cm,t7=t5.cj,t8=t5.cs,rn=t5.et,l(t(function(n,e){var t,r=n.b,o=n.c,a=e.a,i=e.b,c=e.c;return(t=n.a,function(n){return function(e){return function(r){return function(o){return function(a){return function(i){return function(c){return function(u){return function(l){return{$:0,a:t,b:n,c:e,d:r,e:o,f:a,g:i,h:c,i:u,j:l}}}}}}}}}})(r)(o)(a)(i)(c)(t4)(t9)(t6)(t7)}),t8,rn)),{$:8}]),de=l(L,s(sX,513,!0,0,1),dn),dt=function(n){return n.dQ},dr=function(n){return dt(n)},da=t(function(n,e){var t=n.en,r=n.em,o=n.el;return{bF:e.bF*o.bF+e.c9*o.c9+e.at*o.at,c9:e.bF*r.bF+e.c9*r.c9+e.at*r.at,at:e.bF*t.bF+e.c9*t.c9+e.at*t.at}}),di=t(function(n,e){var t=n.dQ,r=e.bF-t.bF,o=e.c9-t.c9,a=e.at-t.at,i=n.en,c=n.em,u=n.el;return{bF:r*u.bF+o*u.c9+a*u.at,c9:r*c.bF+o*c.c9+a*c.at,at:r*i.bF+o*i.c9+a*i.at}}),dc=function(n){return n.el},du=function(n){return n.em},dl=function(n){return n.en},df=t(function(n,e){return{dQ:l(di,n,dt(e)),el:l(da,n,dc(e)),em:l(da,n,du(e)),en:l(da,n,dl(e))}}),ds=t(function(n,e){return{fC:l(tP,n.fC,e.fC),fD:l(tP,n.fD,e.fD),fE:l(tP,n.fE,e.fE),fF:l(oX,n.fF,e.fF),fG:l(oX,n.fG,e.fG),fH:l(oX,n.fH,e.fH)}}),dd=t(function(n,e){var t=e.bF,r=e.c9,o=e.at,a=n.b,i=n.c,c=ua(n.a)/2,u=ua(a)/2,l=ua(i)/2;return{fC:t+c,fD:r+u,fE:o+l,fF:t-c,fG:r-u,fH:o-l}}),dp=o(function(n,e,t,r){var o=t.gY,a=2*t.hz*e,i=2*t.hy*e,c=2*t.hx*e,u=o.at*e,s=o.c9*e,d=o.bF*e,p=dl(n),m=ua(c*p.bF)+ua(i*p.c9)+ua(a*p.at),v=du(n),g=ua(c*v.bF)+ua(i*v.c9)+ua(a*v.at),h=dc(n),b=l(dd,y(ua(c*h.bF)+ua(i*h.c9)+ua(a*h.at),g,m),l(di,n,f(sV,d,s,u)));return to(r.$?b:l(ds,r.a,b))}),dm=o(function(n,e,t,r){for(;;){if(!r.b)return t;var o=r.a,a=r.b;switch(o.$){case 0:case 2:n=c=n,e=u=e,t=f=t,r=a;continue;case 1:var i=s(dp,n,e,o.a,t);n=c=n,e=u=e,t=f=i,r=a;continue;case 3:i=s(dp,n,e,o.a,t),n=c=n,e=u=e,t=f=i,r=a;continue;case 4:c=n,u=e,f=s(dm,n,e,t,o.a),n=c,e=u,t=f,r=a;continue;default:var c,u,f,d=o.a,p=o.b,m=l(df,{dQ:{bF:d.N,c9:d.O,at:d.P},el:{bF:d.v,c9:d.w,at:d.x},em:{bF:d.y,c9:d.z,at:d.A},en:{bF:d.B,c9:d.C,at:d.D}},n),v=e*d.c1;n=c=n,e=u=e,t=f=s(dm,m,v,t,M([p])),r=a;continue}}}),dv={fa:!0,v:1,w:0,x:0,y:0,z:1,A:0,B:0,C:0,D:1,N:0,O:0,P:0,c1:1},dg=function(n){return n},dh=s2({bR:7681,dE:0,d0:8,b8:519,ek:255,ch:7681,ci:7681}),db=function(n){var e=l(tP,ua(n.bF),l(tP,ua(n.c9),ua(n.at)));if(e){var t=n.at/e,r=n.c9/e,o=n.bF/e;return H(o*o+r*r+t*t)*e}return 0},dx=t(function(n,e){return n*e}),dy=function(n){return-n},dw=function(n){return s(sX,515,n.as,n.al,n.ak)},dP=P(M([dw({ak:1,al:0,as:!0}),s3({bR:7680,dE:240,d0:0,b8:514,ek:0,ch:7680,ci:7680})]),dn),dC=t(function(n,e){return e+n}),dT=function(n){return n===1/0||n===-1/0},dL=t(function(n,e){var t=e.hn,r=e.gF,o=sq(e.h$),a=sq(t),i=n.d$;if(i.$){var c=i.a;return dT(a)?l5({fk:2/(r*c),fl:0,fm:0,fn:0,fo:0,fp:2/c,fq:0,fr:0,fs:0,ft:0,fu:0,fv:-1,fw:0,fx:0,fy:0,fz:1}):l5({fk:2/(r*c),fl:0,fm:0,fn:0,fo:0,fp:2/c,fq:0,fr:0,fs:0,ft:0,fu:-2/(a-o),fv:-(a+o)/(a-o),fw:0,fx:0,fy:0,fz:1})}var u=i.a;return dT(a)?l5({fk:1/(r*u),fl:0,fm:0,fn:0,fo:0,fp:1/u,fq:0,fr:0,fs:0,ft:0,fu:-1,fv:-2*o,fw:0,fx:0,fy:-1,fz:0}):l5({fk:1/(r*u),fl:0,fm:0,fn:0,fo:0,fp:1/u,fq:0,fr:0,fs:0,ft:0,fu:-(a+o)/(a-o),fv:-2*a*o/(a-o),fw:0,fx:0,fy:-1,fz:0})}),dM=t(function(n,e){return 1==(1&n>>e)?0:1}),dF=r(function(n,e,t){return oz(l(tQ,function(t){var r=t<<4;return f(sH,n,x(e,s(eF,l(dM,t,0),l(dM,t,1),l(dM,t,2),l(dM,t,3))),P(M([dw({ak:1,al:0,as:!0}),s3({bR:7680,dE:240,d0:r,b8:514,ek:0,ch:7680,ci:7680})]),dn))},l(ts,1,l(k,2,t)-1)))}),d$=function(n){return{bF:-n.bF,c9:-n.c9,at:-n.at}},dz=function(n){return d$(dl(n))},dS={bF:0,c9:0,at:1},dD={dQ:f6,el:f7,em:sI,en:dS},dN=t(function(n,e){var t,r,o,a,i;return r=dt(t=l(df,e,n)),o=dl(t),a=du(t),l5({fk:(i=dc(t)).bF,fl:a.bF,fm:o.bF,fn:r.bF,fo:i.c9,fp:a.c9,fq:o.c9,fr:r.c9,fs:i.at,ft:a.at,fu:o.at,fv:r.at,fw:0,fx:0,fy:0,fz:1})}),dk=r(function(n,e,t){return{bF:n,c9:e,at:t}}),dV=r(function(n,e,t){var r;return function(n){var e=n.gU.i7,t={dQ:dr(e),el:dc(e),em:du(e),en:d$(dz(e))},r=lL(n.hh),o=s(dm,t,1,ta,M([r]));if(1===o.$)return C;var a=o.a,i=l(dN,dD,e),c=l(dx,.99,l(fA,sq(n.g0),dy(l_(a)))),u=lj(a),d=db(f(dk,u.a,u.b,u.c)),m=l(dx,1.01,l(dC,d,dy(lB(a)))),v=l(dL,n.gU,{gF:n.gF,hn:m,h$:c}),g={fk:v[0],fo:v[1],fs:v[2],fw:v[3],fl:v[4],fp:v[5],ft:v[6],fx:v[7],fm:v[8],fq:v[9],fu:v[10],fy:v[11],fn:v[12],fr:v[13],fv:v[14],fz:v[15]}.fz,h=g?d$(dz(e)):dr(e),b=function(){var e=n.i$;switch(e.$){case 0:return x(0,0);case 1:return x(1,0);case 2:return x(2,0);case 3:return x(3,e.a);case 4:return x(4,e.a);default:return x(5,0)}}(),y=b.a,w=b.b,P=l(sU,n.hj,n.i9),T=p(sY,l5({fk:0,fl:h.bF,fm:fn(P),fn:n.iJ,fo:0,fp:h.c9,fq:fe(P),fr:d,fs:0,ft:h.at,fu:ft(P),fv:y,fw:0,fx:g,fy:0,fz:w}),i,v,dv,r,{T:C,af:C,ag:C}),L=n.hU;switch(L.$){case 0:return oz(M([f(sH,T.T,x(F=L.a,sR),de),f(sH,T.af,sB,de)]));case 1:var F=L.a;return oz(M([f(sH,T.T,sB,de),M([dh]),f(sH,T.ag,F.bX,sZ),M([s4(0)]),f(sH,T.T,x(F,sR),dP),f(sH,T.af,sB,de)]));default:var $=L.a,z=L.b;return oz(M([f(sH,T.T,x(z,sR),de),M([dh]),l(s6,T.ag,$),f(dF,T.T,z,tl($)),f(sH,T.af,sB,de)]))}}({gF:e,gU:{d$:{$:0,a:E(.5*sq((r={i5:sb(30),i7:sk({hk:f(sV,0,0,f(rL,n,10,5)),hp:f6,i1:sI})}).i5))},i7:r.i7},g0:1,hh:t,hj:1.2*l(k,2,5),hU:sE,iJ:1,i$:sj,i9:sh})}),dA=o(function(n,e,t,r){return{h2:t,h3:r,h4:n,h5:e}}),d_=t(function(n,e){return f(tY,nr,e,n)}),dB=d(nu,dA,l(d_,M(["offsetX"]),nn),l(d_,M(["offsetY"]),nn),l(d_,M(["target","offsetHeight"]),ne),l(d_,M(["target","offsetWidth"]),ne)),dE=function(n){return j(n)},dj=t(function(n,e){var t=e.at-n.at,r=e.c9-n.c9,o=e.bF-n.bF,a=l(tP,ua(o),l(tP,ua(r),ua(t)));if(a){var i=t/a,c=r/a,u=o/a,f=H(u*u+c*c+i*i);return to({bF:u/f,c9:c/f,at:i/f})}return ta}),dq=r(function(n,e,t){var r=.5*e,o=_(r),a=B(r),i=n.hb,c=i.bF*a,u=o*c,l=c*c,f=i.c9*a,s=o*f,d=c*f,p=f*f,m=i.at*a,v=o*m,g=c*m,h=f*m,b=m*m;return{bF:(1-2*(p+b))*t.bF+2*(d-v)*t.c9+2*(g+s)*t.at,c9:2*(d+v)*t.bF+(1-2*(l+b))*t.c9+2*(h-u)*t.at,at:2*(g-s)*t.bF+2*(h+u)*t.c9+(1-2*(l+p))*t.at}}),dI=r(function(n,e,t){var r=.5*e,o=_(r),a=B(r),i=n.dQ,c=t.bF-i.bF,u=t.c9-i.c9,l=t.at-i.at,f=n.hb,s=f.bF*a,d=o*s,p=s*s,m=f.c9*a,v=o*m,g=s*m,h=m*m,b=f.at*a,x=o*b,y=s*b,w=m*b,P=b*b;return{bF:i.bF+(1-2*(h+P))*c+2*(g-x)*u+2*(y+v)*l,c9:i.c9+2*(g+x)*c+(1-2*(p+P))*u+2*(w-d)*l,at:i.at+2*(y-v)*c+2*(w+d)*u+(1-2*(p+h))*l}}),dR=t(function(n,e){return{hb:e,dQ:n}}),dH=t(function(n,e){var t=l(dI,n,e),r=l(dq,n,e);return function(n){return l(dR,t(n.dQ),r(n.hb))}}),dO=t(function(n,e){var t=n.dQ,r=.5*e,o=_(r),a=B(r),i=n.hb,c=i.bF*a,u=o*c,l=c*c,f=i.c9*a,s=o*f,d=c*f,p=f*f,m=1-2*(l+p),v=i.at*a,g=o*v,h=2*(d-g),b=2*(d+g),x=c*v,y=2*(x+s),w=2*(x-s),P=f*v,C=2*(P-u),T=2*(P+u),L=v*v,M=1-2*(p+L),F=1-2*(l+L);return{fa:!0,v:M,w:b,x:w,y:h,z:F,A:T,B:y,C:C,D:m,N:t.bF-M*t.bF-h*t.c9-y*t.at,O:t.c9-b*t.bF-F*t.c9-C*t.at,P:t.at-w*t.bF-T*t.c9-m*t.at,c1:1}}),dW=r(function(n,e,t){return l(f4,l(dO,n,e),t)}),dU=r(function(n,e,t){return f(dW,n,e,t)}),dG=l(dR,f6,f7),dY=l(dR,f6,sI),dQ=t(function(n,e){return l(tQ,function(e){var t=e.a,r=e.b,o=l(rd,dS,l(dj,r,f(sV,10.4*n.bF,-10.4*n.c9,2))),a=dE(o.bF),i=dE(-o.c9);return l(su,l(sw,f6,r),f(dU,f(dH,dY,a,dG),i,f(dU,dY,a,t)))},e)}),dX=r(function(n,e,t){return f(eY,n,e,t)})(M([{$:0,a:!0},{$:3},{$:1,a:1}])),dJ=r(function(n,e,t){var r=f(rL,n,M([f(sV,-1,-1,0),f(sV,1,-1,0),f(sV,-1,1,0),f(sV,1,1,0)]),M([f(sV,-4.5,0,0),f(sV,-1.5,0,0),f(sV,1.5,0,0),f(sV,4.5,0,0)])),o=f($,lp,t,r),a=u8(n),i=a.a,c=a.b;return cG(l(dX,M([l(nK,"width","100%"),l(nK,"height","100%"),uq(i),uA(c),l(a3,"mousemove",l(ni,sv,dB))]),f(dV,n,i/c,l(dQ,l(sg,e.bF,e.c9),o))))}),dZ=r(function(n,e,t){return f(dJ,n,e,l(tQ,sm,t))}),dK=t(function(n,e){return f(dZ,n,e.ds,e.a7)}),d0=t(function(n,e){return l(it,aO,d(uM,"b-"+Z(n)+"-"+Z(e),e,n,e,n))}),d1=function(n){var e=n.aK,t=n.aX,r=n.aQ,o=n.aW;return v(t,e)&&v(r,o)?v(t,o)?uF(t):l(d0,r,t):l(it,aO,d(uM,"b-"+Z(t)+"-"+Z(o)+"-"+Z(e)+"-"+Z(r),t,o,e,r))},d3=t(function(n,e){var t=f(rL,n,37,130);return l(iu,M([i1(t),a6(is)]),M([m(u1,n,"coinfight",l(i5,M([i1(f(rL,n,5,15))]),M([l(iy,M([a6(iv(f(rL,n,110,330)))]),{W:"coinfight",ab:"coinfight-title.png"}),l(i7,M([rT]),{hT:l(iy,M([a1(iv(f(rL,n,15,25)))]),{W:"link",ab:"external-link.png"}),i3:"https://coinfight.io/"})])),f(rL,n,M([M(["C++","Multiplayer Networking"]),M(["Blockchain Integration"]),M(["Game Design","Entrepreneurship"])]),M([M(["C++","Multiplayer Networking","Blockchain Integration"]),M(["Game Design","Entrepreneurship"])])),to(x("2022 / 2023","Entrepreneur/Developer")),l(tQ,l(cy,i2,l(cy,u3,uN(C))),M(['An RTS game where users fight over stablecoins in-game, on the battlefield. Players must invest real crypto into their units (i.e. $1.50 for a Fighter, $0.50 for a worker); if these units are killed, this investment is dropped onto the battlefield for anyone else to pick up, capture, and withdraw. This is a zero-sum game where the goal is to get more out than you put in. "Like Poker, but the chips shoot at each other!"',"Coinfight was a successful POC that delivered the experience of fighting over real money in real time, something the crypto/gaming industry has still not delivered commercially. This was largely achieved by implementing the game itself with traditional server/client architecture (specifically, a deterministic lockstep protocol). the blockchain is only used to process withdrawals/deposits - a rare but rewarding approach to web3 gaming."])),M([f(u$,n,"https://www.youtube.com/watch?v=7tw10KUO1_U","demo video"),f(u$,n,"https://medium.com/p/472636deec57","dev blog post"),f(u$,n,"https://coinfight.io/","coinfight.io"),f(u$,n,"https://github.com/coinop-logan/coinfight","github")])),l(iu,M([a8,i1(f(rL,n,5,20)),iD(f(rL,n,5,0)),i_({aK:f(rL,n,5,20),aQ:f(rL,n,5,56),aW:0,aX:0}),uL(f(rL,n,15,40)),d1({aK:0,aQ:3,aW:0,aX:0}),uC(f(iU,1,.6,.3))]),M([l(iu,M([cd("foundrydao"),iJ(f(rL,n,15,30)),iO,l(iM,iF,iL(-f(rL,n,7,15))),l(iM,iS,iz(f(rL,n,15,0))),i1(f(rL,n,5,15))]),M([l(i5,C,M([l(il,M([ic(f(iU,1,.6,.3))]),i2("FoundryDAO Projects ")),i2("- "),f(u7,C,"/LoganBrutsche_resume.pdf","See resume")])),l(il,M([iJ(f(rL,n,12,26))]),i2("2019 - 2021"))])),l(iu,M([i1(t)]),M([m(u1,n,"nyms",l(i5,M([i1(f(rL,n,5,15))]),M([l(il,M([iJ(f(rL,n,20,60)),rV,iO,ic(uT)]),i2("Nyms")),l(i7,M([rT]),{hT:l(iy,M([a1(iv(f(rL,n,15,25)))]),{W:"link",ab:"external-link.png"}),i3:"https://team-toast.github.io/nym/"})])),M([M(["Elm","Solidity","NFTs"]),M(["Generative 3D Modelling"])]),to(x("2021","Senior Developer")),l(L,l(il,M([a6(iv(u8(n).a)),a8]),l(u4,u5,l(dK,n,e))),l(tQ,l(cy,i2,l(cy,u3,uN(C))),M(["An experimental NFT/identicon project intended to provide cryprographically secure but visually recognizeable identicons.","The above are generated on-the-fly from 113 bits of entropy (72 for structure and 41 for color) to produce over one thousand quintillion (1,000,000,000,000,000,000,000,000,000,000,000) visually distinct 3D mammalian faces.","You could stay on this page for millions of years and refresh as many times as you want, and you won't see a repeated face."]))),M([f(u$,n,"https://team-toast.github.io/nym/","more info"),f(u$,n,"https://opensea.io/collection/alpha-nyms","Alpha Nym NFT set")])),m(u1,n,"smokesignal",l(iy,M([a6(iv(f(rL,n,120,230)))]),{W:"smokesignal",ab:"smokesignal-title.svg"}),f(rL,n,M([M(["Elm","Solidity"]),M(["Game Theory Design"]),M(["Tech Lead"])]),M([M(["Elm","Solidity"]),M(["Game Theory Design","Tech Lead"])])),to(x("2020 / 2021","Tech Lead")),l(tQ,l(cy,i2,l(cy,u3,uN(C))),M(["SmokeSignal was an uncensorable, global chat forum. It offered Reddit-like functionality (nested comments in topical forums) and allowed users to tip each other for posts. The backend was entirely implemented with Ethereum smart contracts (other than supporting architecture for things like SEO and analytics); the frontend was a page hosted on IPFS and used an ENS domain.","As with DAIHard, below, a major goal of SmokeSignal was to be both radically free (no censorship or moderation) and unkillable (no central organization or nation-state could stop it); hence the motivation for the above architecture."])),M([f(u$,n,"https://medium.com/daihard-buidlers/introducing-smokesignal-da8f19bc27af","intro post"),f(u$,n,"https://www.youtube.com/watch?v=pV70Q0wgnnU","demo video"),f(u$,n,"https://github.com/team-toast/SmokeSignal","github")])),m(u1,n,"daihard",l(il,M([iJ(f(rL,n,20,60)),rV,iO,ic(uT)]),i2("DAIHard")),f(rL,n,M([M(["Elm","Solidity"]),M(["Cryptographic Protocol Design"]),M(["Game Theory Design","Tech Lead"])]),M([M(["Elm","Solidity","Cryptographic Protocol Design"]),M(["Game Theory Design","Tech Lead"])])),to(x("2019 / 2020","Senior Developer")),l(tQ,l(cy,i2,l(cy,u3,uN(C))),M(["DAIHard was a crypto/fiat exchange built entirely with Ethereum smart contracts, so that there was no central server anyone could take down. The application was designed to continue to function even in adversarial jurisdictions.",'Traders find and engage with each other by depositing crypto and entering into a "burnable payment" contract (described in the game theory link below, and prototyped in the Toastycoin project further down). This contract moved through various stages of the deal and allowed users to punish bad actors by burning any funds they might receive as a result of a scam.',"To enable secure communication between traders without any central server, I designed and implemented a messaging protocol that leverages Ethereum event logs as the transport layer. Each conversation is encrypted using dual-key cryptography, with messages visible but unreadable on the public blockchain. Thus, Ethereum's public ledger was used in lieu of a centralized backend server to facilitate secure, pseudonymous communication between strangers - a necessary feature of any p2p trading marketplace.",'As part of this project, I spent two months in Zimbabwe researching the viability of crypto adoption in the face of a hyperinflated currency. A summary of my findings can be found in the below-linked ZimDai paper "ZimDai: Blueprint for an Economic Jailbreak".'])),M([f(u$,n,"https://github.com/team-toast/DAIHard/blob/master/smart-contracts/DAIHard/contracts/DAIHard.sol","DAIHard Contract (Solidity)"),f(u$,n,"https://www.youtube.com/watch?v=WR4WovM0qwg","demo video"),f(u$,n,"https://medium.com/@coinop.logan/daihard-game-theory-21a456ef224e","game theory writeup"),f(u$,n,"https://github.com/team-toast/DAIHard","github"),f(u$,n,"https://github.com/coinop-logan/ZimDai/blob/master/whitepaper.pdf","ZimDai paper")]))]))])),m(u1,n,"toastycoin",l(il,M([iJ(f(rL,n,20,60)),rV,iO,ic(uT)]),i2("Toastycoin")),f(rL,n,M([M(["Javascript","Solidity"]),M(["Game Theory Design"]),M(["Research/Prototyping"])]),M([M(["Javascript","Solidity"]),M(["Game Theory Design","Research/Prototyping"])])),to(x("2017","Solo Project")),l(tQ,l(cy,i2,l(cy,u3,uN(C))),M(['Toastycoin was an experimental dapp that used "burnable payment" contracts on the Ethereum blockchain to allow users to contract work from strangers on the Internet, without any previous trust or association.',"The burnable payment contracts used game theory to facilitate this, centering around the payer's ability to burn the payment (but not get it back) if the worker does not deliver the requested service. Scammers attempting to game the system would be punished more than they profited in nearly every case - all without any moderation/dispute teams, arbitrators, or escrow system.",'See the "game theory writeup" link under the DAIHard project above, to read more about this game theory, as DAIHard was simply a narrowed use-case of the burnable payments developed for Toastycoin.'])),M([f(u$,n,"https://medium.com/@coinop.logan/preventing-scammer-profit-with-burnable-payments-ad2e9b632ef2","Burnable Payments?"),f(u$,n,"https://medium.com/@coinop.logan/toasted-money-part-2-b5dfd0b1e946","experiment conclusion"),f(u$,n,"https://github.com/coinop-logan/toastycoin","github")]))]))}),d2=t(function(n,e){return l(iu,M([a6(is),i1(f(rL,n,43,140))]),M([uH(n),l(d3,n,e),l(a7,M([a8,iV(f(rL,n,10,15)),i4]),{hT:l(i5,M([i1(f(rL,n,10,20))]),M([l(il,M([iJ(f(rL,n,20,35)),ic(f(iG,136,231,255)),iO,rV]),i2("Current Work")),l(iy,M([a1(iv(f(rL,n,20,35)))]),{W:"Current Work",ab:"/arrow-right.png"})])),b0:to(uy(u2))})]))}),d5=t(function(n,e){var t,r;return l(il,M([cd("body-element"),cm,cg,rA(l(nK,"min-height","auto")),a6(is),a1(is),(t=1===(r=e.bK).$?im:l(ux,e.ck,r.a),l(iP,5,t)),i_({aK:100,aQ:0,aW:0,aX:0})]),l(il,M([a6(is),iC(e.f7?cv:im)]),e.f3.$?l(iu,M([a6(is),i1(f(rL,n,43,140))]),M([uH(n),l(iu,M([a6(is),i1(f(rL,n,15,30))]),M([l(iu,M([a6(is),i1(15)]),M([l(il,M([a8]),cG(l(uj,M([uq(rM(n)),uA(I(rM(n)/1.8)),u_("portfolio-intro-preview.png"),uV(!0)]),M([l(uB,M([ix("portfolio-intro.mp4"),uE("video/mp4")]),M([nU("Your browser does not support the video tag.")]))]))))])),l(il,M([a8]),cn(n))])),l(iu,M([i1(f(rL,n,30,80)),a8]),M([l(uO,n,"From my Colleagues"),p(uk,n,!0,"chase.jpg","Chase Van Etten","CEO at OPFN",f(rL,n,"Logan is the rare engineer that is both competent with his tools and genuinely cares about business goals. He's an excellent partner throughout product development, challenges assumptions that would be easy to overlook, and is considerate of his teammates.","Logan is the rare engineer that is both competent with his tools and genuinely cares about business goals. He's an excellent partner throughout product development, challenges assumptions that would be easy to overlook, and is considerate of his teammates. Logan knows technology is still the best tool for empowering individuals and takes that responsibility seriously.")),p(uk,n,!1,"schalk.jpg","Schalk Dormehl","Cofounder of FoundryDAO\nCTO of Swiftcom","Logan is excellent at plotting out complex projects, then pushing forward in the execution with a consistent, healthy momentum. He keeps the whole scope of the project in mind, and can fill in any needed gaps in things like UX design and cloud infrastructure."),p(uk,n,!0,"chris.jpg","Chris Lemmer","CEO at SwiftCom","Logan is a standout software architect, who consistently delivers software that works seamlessly. When needed, he builds custom solutions from the ground up. Aside from his technical skills, what really makes Logan shine is his ability to communicate effectively and work well with others.")])),l(iu,M([i1(f(rL,n,30,80)),a8]),M([l(uO,n,"Current Projects"),m(u1,n,"eestisse",l(i5,M([i1(f(rL,n,5,15))]),M([l(iy,M([a6(iv(f(rL,n,100,220)))]),{W:"eestisse",ab:"eestisse-title.png"}),l(i7,M([rT]),{hT:l(iy,M([a1(iv(f(rL,n,15,25)))]),{W:"external link",ab:"external-link.png"}),i3:"https://eestisse.ee/"})])),M([M(["Lamdera/Elm","Entrepreneurship"]),M(["UX Design","Prompt Engineering"])]),ta,l(tQ,l(cy,i2,l(cy,u3,uN(C))),M(['An LLM-powered tool that explains the counter-intuitive Estonian grammar to English speakers (for example, why "eestisse" means "into Estonia"). The tool takes English or Estonian text, translates it, and explains word by word how the Estonian is constructed.',"The app is mostly a thin wrapper around the surprisingly high competence of LLMs when providing translations and explanations of the translations. The LLM is primed by providing a few examples of expected responses - both content and JSON structure. The app then decodes this and provides the information in a user-friendly manner, word-by-word, and also keeps a history for the user of their previous translations.","Future work will add flashcard functionality, to strengthen the product as a learning tool."])),M([f(u$,n,"https://eestisse.ee","eestisse.ee"),f(u$,n,"https://github.com/eestisse/eestisse","github")]))])),l(a7,M([a8,iV(f(rL,n,10,15)),i4]),{hT:l(i5,M([i1(f(rL,n,10,20))]),M([l(iy,M([a1(iv(f(rL,n,20,35)))]),{W:"Past Projects",ab:"/arrow-left.png"}),l(il,M([iJ(f(rL,n,20,35)),ic(f(iG,136,231,255)),iO,rV]),i2("Past Projects"))])),b0:to(uy(uw(ta)))})])):l(d2,n,e.cT)))}),d4=f(iG,3,9,32),d9=t(function(n,e){return l(il,M([iV(f(rL,n,4,15)),ic(uT),uL(100),uF(2),uC(uT)]),i2(e))}),d6=t(function(n,e){return e.$?100:l(tP,0,70-(e.a.c8.c9-200)/120*60)}),d7=o(function(n,e,t,r){return l(a7,M([l(iB,5,15),i4]),{hT:l(il,v(t,r)?M([uI,ic(f(iU,1,1,1)),i_({aK:5,aQ:0,aW:0,aX:5}),d1({aK:2,aQ:0,aW:0,aX:0}),uC(f(iU,1,1,1))]):M([ic(uT)]),e),b0:to(uy(t))})}),d8=t(function(n,e){return l(i5,M([a6(is),a1(iv(ih(n))),ia(d4),l(iB,f(rL,n,20,70),0),cm]),M([l(il,M([iJ(f(rL,n,35,45)),iO,uI,i$(l(d6,n,e.aw))]),uR(f(rL,n,"LB","Logan Brutsche"))),l(i5,M([rP,i1(f(rL,n,6,53)),uz,iJ(f(rL,n,10,20)),iO,rV]),M([s(d7,n,i2("PROJECTS"),uw(ta),e.f3),s(d7,n,i2("ABOUT"),u2,e.f3),l(a7,M([l(iB,5,15),i4]),{hT:l(il,C,l(d9,n,"CONTACT")),b0:to(ry(!e.f7))}),l(i7,M([l(iB,5,15),i4]),{hT:l(i5,M([i1(f(rL,n,5,10)),ic(uT)]),M([i2("RESUME"),l(iy,M([a1(iv(f(rL,n,11,22)))]),{W:"download",ab:"/download.png"})])),i3:"/LoganBrutsche_resume.pdf"})]))]))}),pn=function(n){var e=cw(n.c8);return l(iu,M([a6(is),a1(is),ic(f(iU,1,1,1)),ia(d4)]),M([l(d8,e,n),l(d5,e,n)]))},pe=l(il,M([a8,iV(20)]),i2("(loading)")),pt=function(n){return{$:9,a:n}},pr=function(n){return{$:8,a:n}},po={$:3},pa=t(function(n,e){return{$:0,a:n,b:e}}),pi=t(function(n,e){return{f$:e,gg:n}}),pc=nx(l(pi,r3,r3)),pu=t(function(n,e){var t=n.a,r=n.b,o=l(or,t,e);return f(oe,t,1===o.$?M([r]):l(L,r,o.a),e)}),pl=function(n){return ny(function(e){var t=n.f;2===t.$&&t.c&&t.c(),n.f=null,e(nx(0))})},pf=r(function(n,e,t){for(;;){if(-2===t.$)return e;var r=t.e,o=n,a=f(n,t.b,t.c,f(pf,n,e,t.d));n=o,e=a,t=r}}),ps=i(function(n,e,o,a,i,c){var u=r(function(t,r,a){for(;;){var i=a.a,c=a.b;if(i.b){var u=i.a,l=u.a,d=u.b,p=i.b;if(0>h(l,t)){a=x(p,f(n,l,d,c));continue}return h(l,t)>0?x(i,f(o,t,r,c)):x(p,s(e,l,d,r,c))}return x(i,f(o,t,r,c))}}),l=f(pf,u,x(e6(a),c),i),d=l.a,p=l.b;return f(tu,t(function(e,t){return f(n,e.a,e.b,t)}),p,d)}),pd=r(function(n,e,t){if(e.b){var r=e.a,o=e.b,a=nL(l(eC,r,l(nV,n,r)));return l(nw,function(e){return f(pd,n,o,f(oe,r,e,t))},a)}return nx(t)}),pp=r(function(n,e,t){var a=t.f$,i=r(function(n,e,t){var r=t.c;return y(t.a,t.b,l(nw,function(){return r},pl(e)))}),c=f(tu,pu,r3,e),u=p(ps,r(function(n,e,t){var r=t.b,o=t.c;return y(l(L,n,t.a),r,o)}),o(function(n,e,t,r){var o=r.c;return y(r.a,f(oe,n,t,r.b),o)}),i,c,a,y(C,r3,nx(0))),s=u.a,d=u.b;return l(nw,function(n){return nx(l(pi,c,n))},l(nw,function(){return f(pd,n,s,d)},u.c))}),pm=r(function(n,e,t){var r=l(or,e,t.gg);if(1===r.$)return nx(t);var o=r.a;return l(nw,function(){return nx(t)},l(nw,function(e){return tZ(l(tQ,function(t){return l(nk,n,t(e))},o))},rb))}),pv=t(function(n,e){return l(pa,e.a,l(rs,n,e.b))});nD.Time=nN(pc,pp,pm,0,pv);var pg=nA("Time"),ph=t(function(n,e){return pg(l(pa,n,e))}),pb=n_(C),px=function(n){return{$:0,a:n}},py=r(function(n,e,t){return{dP:t,f2:e,gf:n}}),pw=nx(f(py,C,ta,0)),pP=ny(function(n){n(nx(Date.now()))}),pC=ny(function(n){var e=ep(function(){n(nx(Date.now()))});return function(){ed(e)}}),pT=r(function(n,e,t){var r=t.f2,o=t.dP,a=x(r,e);return 1===a.a.$?a.b.b?l(nw,function(n){return l(nw,function(t){return nx(f(py,e,to(n),t))},pP)},nL(l(nw,nV(n),pC))):pw:a.b.b?nx(f(py,e,r,o)):l(nw,function(){return pw},pl(a.a.a))}),pL=r(function(n,e,t){var r=t.gf,o=t.dP,a=function(t){return l(nk,n,(0,t.a)(t.$?e-o:tN(e)))};return l(nw,function(n){return l(nw,function(){return nx(f(py,r,to(n),e))},tZ(l(tQ,a,r)))},nL(l(nw,nV(n),pC)))}),pM=function(n){return{$:1,a:n}};nD["Browser.AnimationManager"]=nN(pw,pT,pL,0,t(function(n,e){return e.$?pM(l(rs,n,e.a)):px(l(rs,n,e.a))}));var pF=nA("Browser.AnimationManager"),p$=r(function(n,e,t){return{$:0,a:n,b:e,c:t}}),pz=t(function(n,e){return{fY:e,gf:n}}),pS=nx(l(pz,C,r3)),pD=function(n){return x(P(n.a?"w_":"d_",n.b),n)},pN=function(n){return f(tu,t(function(n,e){return f(oe,n.a,n.b,e)}),r3,n)},pk=t(function(n,e){return{eZ:e,bV:n}}),pV=r(function(n,e,t){return l(tX,function(n){return x(e,n)},f(ex,t.a?eb:eh,t.b,function(t){return l(nV,n,l(pk,e,t))}))}),pA=t(function(n,e){return f(pf,oe,e,n)}),p_=r(function(n,e,t){var a=r(function(e,t,r){var o=r.c;return y(r.a,r.b,l(L,f(pV,n,e,t),o))}),i=r(function(n,e,t){var r=t.b,o=t.c;return y(l(L,e,t.a),r,o)}),c=o(function(n,e,t,r){var o=r.c;return y(r.a,f(oe,n,e,r.b),o)}),u=l(tQ,pD,e),s=p(ps,i,c,a,t.fY,pN(u),y(C,r3,C)),d=s.b,m=s.c;return l(nw,function(n){return nx(l(pz,u,l(pA,d,pN(n))))},l(nw,function(){return tZ(m)},tZ(l(tQ,pl,s.a))))}),pB=r(function(n,e,t){var r=e.bV,o=e.eZ,a=l(os,function(n){var e=n.b.c;return v(n.a,r)?l(ey,e,o):ta},t.gf);return l(nw,function(){return nx(t)},tZ(l(tQ,nk(n),a)))}),pE=t(function(n,e){return f(p$,e.a,e.b,l(ni,n,e.c))});nD["Browser.Events"]=nN(pS,p_,pB,0,pE);var pj,pq,pI,pR,pH,pO,pW,pU,pG,pY,pQ,pX=nA("Browser.Events"),pJ=r(function(n,e,t){return pX(f(p$,n,e,t))}),pZ=function(n){return{$:3,a:n}},pK={$:4},p0=function(n){return{$:1,a:n}},p1=function(n){return{$:1,a:n}},p3=t(function(n,e){return rl(l(nP,l(rs,l(rs,nx,n),e7),l(nw,l(rs,l(rs,nx,n),tt),e)))}),p2=l(p3,function(n){return{$:2,a:n}},ew("body-element",function(n){return{$9:{ja:n.scrollWidth,e3:n.scrollHeight},c8:{bF:n.scrollLeft,c9:n.scrollTop,ja:n.clientWidth,e3:n.clientHeight}}})),p5=function(n){return x(1,n)},p4=t(function(n,e){return{$:0,a:n,b:e}}),p9=function(n){var e=n.b;return l(p4,1664525*n.a+e>>>0,e)},p6=function(n){var e=n.a,t=277803737*(e^e>>>4+(e>>>28));return(t>>>22^t)>>>0},p7=t(function(n,e){return function(t){var r=p9(t),o=ua(e-n),a=p6(r);return x((1*(67108863&p6(t))*134217728+1*(134217727&a))/9007199254740992*o+n,p9(r))}}),p8=r(function(n,e,t){for(;;){var r=n.a,o=n.b;if(!e.b)return o;var a=e.a,i=e.b;if(1>h(t,ua(r)))return o;n=a,e=i,t-=ua(r)}}),mn=t(function(n,e){return function(t){var r=e(t),o=r.b;return x(n(r.a),o)}}),me=t(function(n,e){var t=function(n){return ua(n.a)},r=t(n)+f(tu,N,0,l(tQ,t,e));return l(mn,l(p8,n,e),l(p7,0,r))}),mt=t(function(n,e){return l(me,p5(n),l(tQ,p5,e))}),mr=l(mt,!0,M([!1])),mo=o(function(n,e,t,r){for(;;){if(1>e)return x(n,r);var o=t(r),a=o.b;n=l(L,o.a,n),e-=1,r=a}}),ma=t(function(n,e){return function(t){return s(mo,C,n,e,t)}}),mi=l(mn,tN,l(mn,tN,l(ma,256,mr))),mc=t(function(n,e){return{eF:e,ge:n}}),mu={$:1},ml=(pj=e7(mu),function(n){return function(e){return function(t){return function(r){return function(o){return function(a){return function(i){return function(c){return function(u){return function(l){return function(f){return function(s){return function(d){return function(p){return function(m){return function(v){return function(g){return function(h){return function(b){return function(x){return function(y){return function(w){return function(P){return{eo:o,ep:c,ev:l,ew:a,eC:v,eG:h,eJ:b,eQ:y,eR:x,eT:P,eU:w,cz:u,cA:s,cB:f,e1:i,fc:p,fL:m,fM:g,fR:r,f9:d,ga:t,gb:n,gc:e,gd:pj}}}}}}}}}}}}}}}}}}}}}}}})(e7(mu))(e7(mu))(e7(mu))(e7(mu))(e7(mu))(e7(mu))(e7(mu))(e7(mu))(e7(mu))(e7(mu))(e7(mu))(e7(mu))(e7(mu))(e7(mu))(e7(mu))(e7(mu))(e7(mu))(e7(mu))(e7(mu))(e7(mu))(e7(mu))(e7(mu))(e7(mu)),mf=function(n){var e=lf(n);return f(ln,e.ij,e.hu,e.gL)},ms=t(function(n,e){var t;return lc({et:1,gL:(t=w(e,{bF:n(e.bF),c9:n(e.c9),at:n(e.at)})).at,hu:t.c9,ij:t.bF})}),md=function(n){return 0>n?md(n+1):n>1?md(n-1):n},mp=ms(md),mm=t(function(n,e){return mp(l(lr,mf(e),n))}),mv=t(function(n,e){return e.$?e7(e.a):n(e.a)}),mg=t(function(n,e){var t=n.b;return l(sP,function(n){var e=n.b,r=n.c;return l(om,function(n){var t=n.c;return y(n.a,x(e,n.b),r+t)},t(n.a))},(0,n.a)(e))}),mh=function(n){return F(n).join("")},mb=l(cy,tQ(function(n){return n?"1":"0"}),mh),mx=function(n){switch(n){case"0":return to(0);case"1":return to(1);default:return ta}},my=function(n){switch(n){case"0":return to(0);case"1":return to(1);case"2":return to(2);case"3":return to(3);case"4":return to(4);case"5":return to(5);case"6":return to(6);case"7":return to(7);case"8":return to(8);case"9":return to(9);case"A":case"a":return to(10);case"B":case"b":return to(11);case"C":case"c":return to(12);case"D":case"d":return to(13);case"E":case"e":return to(14);case"F":case"f":return to(15);default:return ta}},mw=function(n){switch(n){case"0":return to(0);case"1":return to(1);case"2":return to(2);case"3":return to(3);case"4":return to(4);case"5":return to(5);case"6":return to(6);case"7":return to(7);default:return ta}},mP=t(function(n,e){var t=n.a,r=n.b,o=e.a,a=e.b,i=n.c+e.c,c=0>h(i,16777216)?r+a:r+a+1;return y(65535&(0>h(c,16777216)?t+o:t+o+1),16777215&c,16777215&i)}),mC=t(function(n,e){return 1>n?e:f(Y,0,-n,e)}),mT=y(31,16777215,16777215),mL=y(0,0,0),mM=function(n){if(n>0){if(1>h(n,9007199254740991)){var e=I(n/281474976710656),t=n-281474976710656*e,r=I(t/16777216);return y(e,r,t-16777216*r)}return mT}return mL},mF=t(function(n,e){var t=n.a,r=n.b,o=n.c,a=e.a,i=e.b,c=e.c,u=o*c,l=I(u/16777216),f=l+o*i+r*c,s=I(f/16777216);return y(65535&s+o*a+r*i+t*c,f-16777216*s,u-16777216*l)}),m$=t(function(n,e){return 1>n?"":f(Y,-n,tA(e),e)}),mz=function(n){var e=tA(n);if(l(X,"-",n)||l(X,"+",n))return ta;if(e>15){if(e>20)return v(tj(l(mC,20,n)),to(0))?mz(l(m$,20,n)):ta;var t=l(m$,10,n);if(l(X,"-",t)||l(X,"+",t))return ta;var r=x(tj(l(mC,10,n)),tj(t));if(r.a.$||r.b.$)return ta;var o=r.a.a,a=r.b.a;return o>1844674407||1844674407===o&&a>3709551615?ta:to(l(mP,mM(a),l(mF,mM(o),y(0,596,779264))))}var i=tj(n);return i.$?ta:to(mM(i.a))},mS=o(function(n,e,t,r){for(;;){if(!r.b)return to(x(e,tp(t)));var o=r.b,a=n(r.a);if(a.$)return ta;e+=1,t=l(L,a.a,t),r=o}}),mD=i(function(n,e,t,r,o,a){for(;;){if(!a.b)return h(t,65535)>0?ta:to(y(t,r,o));var i=a.a,c=a.b;if(e>24){if(e>48){e-=n,t=i|t<<n,r=u=r,o=l=o,a=c;continue}var u=i|r<<n;e-=n,r=u,o=l=o,a=c}else{var l=i|o<<n;e-=n,r=u=r,o=l,a=c}}}),mN=r(function(n,e,t){var r=e*n;return r>66?ta:p(mD,n,r,0,0,0,t)}),mk=r(function(n,e,t){for(;;){if(!t.b||"0"!==t.a){var r=s(mS,n,0,C,t);if(r.$)return ta;var o=r.a;return f(mN,e,o.a,o.b)}t=t.b}}),mV=function(n){return f(W,L,C,n)},mA=function(n){var e,t;return(t=(e=l(rd,mT,function(n){var e=r(function(n,e,t){var r=mV(t);return r.b?f(mk,n,e,r):ta}),t=tm(n);if(t.$||"0"!==t.a.a)return mz(n);var o=tm(t.a.b);n:for(;!o.$;)switch(o.a.a){case"x":return f(e,my,4,o.a.b);case"o":return f(e,mw,3,o.a.b);case"b":return f(e,mx,1,o.a.b);default:break n}return mz(n)}("0b"+mb(n)))).b,x((e.a<<16|t>>>8)>>>0,(t<<24|e.c)>>>0)).b},m_=l(cy,mV,tQ(function(n){return"0"!==n})),mB=l(cy,m_,l(cy,tN,tN)),mE=r(function(n,e,t){return n?e:t}),mj=function(n){return mh(l(tQ,function(n){return 1===n?"1":"0"},l(tQ,function(n){return f(mE,n,1,0)},n)))},mq=t(function(n,e){var t=mj(e);return h(tA(t),n)>-1?to(y(mB(l(t_,n,t)),tN(m_(l(tE,n,t))),n)):ta}),mI=t(function(n,e){var t=e.c;return y(e.a,n(e.b),t)}),mR=t(function(n,e){return l(om,mI(mA),l(mq,n,e))}),mH=t(function(n,e){return l(om,mI(n),e)}),mO=function(n){return l(mH,function(n){return 1===n},l(mR,1,n))},mW=s(li,52/255,101/255,164/255,1),mU=s(li,193/255,125/255,17/255,1),mG=s(li,85/255,87/255,83/255,1),mY=s(li,32/255,74/255,135/255,1),mQ=s(li,143/255,89/255,2/255,1),mX=s(li,46/255,52/255,54/255,1),mJ=s(li,186/255,189/255,182/255,1),mZ=s(li,78/255,154/255,6/255,1),mK=s(li,186/255,189/255,182/255,1),m0=s(li,206/255,92/255,0,1),m1=s(li,92/255,53/255,.4,1),m3=s(li,164/255,0,0,1),m2=s(li,196/255,160/255,0,1),m5=s(li,211/255,215/255,207/255,1),m4=s(li,115/255,210/255,22/255,1),m9=s(li,211/255,215/255,207/255,1),m6=s(li,114/255,159/255,207/255,1),m7=s(li,233/255,185/255,110/255,1),m8=s(li,136/255,138/255,133/255,1),vn=s(li,238/255,238/255,236/255,1),ve=s(li,138/255,226/255,52/255,1),vt=s(li,238/255,238/255,236/255,1),vr=s(li,252/255,175/255,62/255,1),vo=s(li,173/255,127/255,168/255,1),va=s(li,239/255,41/255,41/255,1),vi=s(li,1,233/255,79/255,1),vc=s(li,245/255,121/255,0,1),vu=s(li,117/255,80/255,123/255,1),vl=s(li,.8,0,0,1),vf=s(li,1,1,1,1),vs=M([va,vl,m3,vr,vc,m0,vi,s(li,237/255,212/255,0,1),m2,ve,m4,mZ,m6,mW,mY,vo,vu,m1,m7,mU,mQ,lb,vf,vt,m9,mK,vn,m5,mJ,m8,mG,mX]),vd=t(function(n,e){for(;;){if(n>0&&e.b){n-=1,e=e.b;continue}return e}}),vp=t(function(n,e){var t;return 0>n?ta:(t=l(vd,n,e)).b?to(t.a):ta}),vm=function(n){return function(n){if(n.$||n.a.b.$)return ta;var e=n.a;return to(y(e.a,e.b.a,e.c))}(l(om,mI(function(n){return l(vp,n,vs)}),l(mR,5,n)))},vv=t(function(n,e){return l(om,mI(function(e){return e/(l(k,2,n)-1)}),l(mR,n,e))}),vg=t(function(n,e){var t=e.a,r=e.b;return l(cy,vv(n),mH(function(n){return n*(r-t)+t}))}),vh=t(function(n,e){var t=n.b,r=n.c;return l(sP,function(n){var e=n.b,o=n.c;return l(sP,function(n){var t=n.b,a=n.c;return l(om,function(n){var r=n.c;return y(n.a,y(e,t,n.b),o+a+r)},r(n.a))},t(n.a))},(0,n.a)(e))}),vb=t(function(n,e){var t=e.b,r=e.c;return y(n(e.a),n(t),n(r))}),vx=t(function(n,e){return l(mH,function(n){return f(ln,n.a,n.b,n.c)},l(vh,l(vb,function(n){return l(vg,n.a,x(n.b,n.c))},n),e))}),vy=r(function(n,e,t){return e+n*(t-e)}),vw=function(n){return l(lu,n,n)},vP=r(function(n,e,t){var r=l(vw,lf,x(e,t)),o=r.a,a=r.b;return lc({et:1,gL:f(vy,n,o.gL,a.gL),hu:f(vy,n,o.hu,a.hu),ij:f(vy,n,o.ij,a.ij)})}),vC=ms(l(cy,tP(0),oX(1))),vT=t(function(n,e){return vC(l(le,n,mf(e)))}),vL={$:0},vM=t(function(n,e){var t=l(so,vL,l(om,ss,e)),r=l(rd,C,l(om,sl,e)),o=l(rd,0,l(om,sf,e));return y(r,n(t),o)}),vF=t(function(n,e){return f(lg,mm,e,n)}),v$=(pq=vx(y(y(1,-.1,.1),y(1,-.1,.1),y(1,-.1,.1))),M([t(function(n,e){return y(n,w(e,{cz:tt(vf)}),0)}),t(function(n,e){return l(vM,function(n){return w(e,{e1:n})},vm(n))}),t(function(n,e){return l(vM,function(n){return w(e,{ew:l(vF,e.e1,n)})},pq(n))}),t(function(n,e){return l(vM,function(n){return w(e,{gd:l(vF,e.ew,n)})},pq(n))}),t(function(n,e){return l(vM,function(n){return w(e,{eG:l(vF,e.e1,n)})},pq(n))}),t(function(n,e){return y(n,w(e,{fR:tt(lb)}),0)}),t(function(n,e){return l(vM,function(n){return w(e,{eC:l(lO,vT(.9),n),fL:n,fM:l(lO,vT(.8),n)})},vm(n))}),t(function(n,e){return l(vM,function(n){return w(e,{cB:n})},vm(n))}),t(function(n,e){return l(vM,function(n){return w(e,{cA:s(f1,vP,n,e.cB,e.eC)})},f(vg,2,x(.1,.9),n))}),t(function(n,e){return l(vM,function(n){return w(e,{eJ:s(f1,vP,n,e.cB,e.eG)})},f(vg,2,x(.1,.9),n))}),t(function(n,e){return l(vM,function(n){return w(e,{ev:s(f1,vP,n,e.cB,e.eG)})},f(vg,2,x(.1,.9),n))}),t(function(n,e){return l(vM,function(n){return w(e,{ep:l(mv,function(n){return n?e.e1:e.ev},n)})},mO(n))}),t(function(n,e){return l(vM,function(n){return w(e,{eo:l(mv,function(n){return n?e.ep:e.cB},n)})},mO(n))}),t(function(n,e){return l(vM,function(n){return w(e,{gc:l(vF,e.gd,n)})},pq(n))}),t(function(n,e){return l(vM,function(n){return w(e,{gb:s(f1,r(function(n,e,t){return l(mm,n.b,n.a?e:t)}),n,e.gc,e.cB)})},l(mg,x(mO,pq),n))}),t(function(n,e){return y(n,w(e,{ga:l(lO,vT(.8),e.gb)}),0)}),t(function(n,e){return l(vM,function(n){return w(e,{f9:l(mv,function(n){return n?l(lO,vT(.9),e.ga):e.cA},n)})},mO(n))}),t(function(n,e){return y(n,w(e,{fc:e.fL}),0)}),t(function(n,e){var t,r;return y(n,w(e,{eQ:t=e.cB,eR:t,eT:r=l(lO,vT(.8),t),eU:r}),0)})])),vz=function(n){for(;;){if(n.b){if(n.b.b){n=n.b;continue}return to(n.a)}return ta}},vS=(pI=e7(mu),function(n){return function(e){return function(t){return function(r){return function(o){return function(a){return function(i){return function(c){return function(u){return function(l){return function(f){return function(s){return function(d){return function(p){return function(m){return function(v){return function(g){return function(h){return{eu:i,eA:r,eB:s,eH:a,eI:o,eM:v,eN:p,eO:d,eP:g,eS:m,eV:h,e_:pI,cA:l,e$:u,cB:c,fb:f,fP:t,fQ:e,fS:n}}}}}}}}}}}}}}}}}}})(e7(mu))(e7(mu))(e7(mu))(e7(mu))(e7(mu))(e7(mu))(e7(mu))(e7(mu))(e7(mu))(e7(mu))(e7(mu))(e7(mu))(e7(mu))(e7(mu))(e7(mu))(e7(mu))(e7(mu))(e7(mu)),vD=t(function(n,e){return{bF:n,c9:e}}),vN=t(function(n,e){return l(n,e.a,e.b)}),vk=r(function(n,e,t){return{cz:e,f0:t,iw:n}}),vV=t(function(n,e){return{cz:e,f0:n}}),vA=o(function(n,e,t,r){return{dh:e,di:n,ea:t,eb:r}}),v_=t(function(n,e){return l(mg,x(n,n),e)}),vB=t(function(n,e){return tN(x(n,e))}),vE=function(n){return n.b?f($,vB,n,P(n.b,M([n.a]))):C},vj=t(function(n,e){return{bF:n(e.bF),c9:n(e.c9)}}),vq=function(n){return l(vj,dg,n)},vI=r(function(n,e,t){return t>.5?{bF:e.bF+(1-t)*(n.bF-e.bF),c9:e.c9+(1-t)*(n.c9-e.c9)}:{bF:n.bF+t*(e.bF-n.bF),c9:n.c9+t*(e.c9-n.c9)}}),vR=t(function(n,e){return f(vI,n.a,n.b,e)}),vH=t(function(n,e){var t=l(vw,function(n){var t=n.a;return e.bF*(n.b.c9-t.c9)+t.c9},x(x(n.dh,n.di),x(n.ea,n.eb))),r=t.a,o=t.b,a=l(vw,function(n){var t=n.a;return e.c9*(n.b.bF-t.bF)+t.bF},x(x(n.dh,n.ea),x(n.di,n.eb))),i=a.a;return l(vD,e.bF*(a.b-i)+i,e.c9*(o-r)+r)}),vO=t(function(n,e){return l(vD,n.bF+e.bF,n.c9+e.c9)}),vW=t(function(n,e){return e.bF*n.c9-e.c9*n.bF}),vU=t(function(n,e){return{bF:e.bF-n.bF,c9:e.c9-n.c9}}),vG=r(function(n,e,t){return y(n,e,t)}),vY=function(n){if(n.b&&n.b.b){if(n.b.b.b){o=n.a;var e=n.b,r=(a=e.a,e.b);return f(tu,dC,0,f($,t(function(n,e){var t,r,a,i;return a=(t=f(vG,o,n,e)).c,i=l(vU,r=t.a,t.b),l(dx,.5,l(vW,l(vU,r,a),i))}),l(L,a,r),r))}var o=n.a,a=n.b.a}return 0},vQ=t(function(n,e){return 1>h(e,n)}),vX=function(n){return l(vQ,0,vY(n))?n:tp(n)},vJ=t(function(n,e){return h(e,n)>-1}),vZ=t(function(n,e){return{bo:l(tQ,vX,n),bv:l(vJ,0,vY(e))?e:tp(e)}}),vK=function(n){return n},v0=function(n){var e=function(n){var e,t,r,o,a,i,c=n.a,u=n.b,d=(e=u.a,t=u.b,a=(r=x(l(vD,0,0),l(vD,e,0))).b,i=f(lu,vO(o=r.a),vO(a),l(vw,function(n){return l(vD,n.a,n.b)},l(vw,ov(function(n){return n*e}),t))),s(vA,a,o,i.a,i.b)),p=function(){var n,e=c.b,t=4>(n=e+c.c)?n:n-4,r=l(vH,d,c.a),o=l(vw,function(n){var e=I(n);return x(e,n-e)},x(e,t)),a=o.a,i=o.b,u=l(vw,function(n){var e,t,r,o;return l(vp,n.a,(o=l(tQ,vK,M([d.di,d.dh,d.ea,d.eb])),t=vE((e=l(vZ,C,o)).bv),r=l(tQ,vE,e.bo),oz(l(L,t,r))))},x(a,i)),f=x(u.a,u.b);if(f.a.$||f.b.$)return e7(se("index error when trying to index edges of eyeQuad when constructing pupil"));var s=f.a.a,p=f.b.a,m=l(vw,function(n){return vq(l(vR,n.a,n.b))},x(x(s,a.b),x(p,i.b))),g=m.a,h=m.b;if(v(a.a,i.a))return tt(M([y(r,g,h)]));var b=vq(s.b);return tt(M([y(r,g,b),y(r,b,h)]))}();return l(lO,function(n){return l(vV,n,d)},p)},t=mg(x(vh(y(l(cy,v_(l(vg,2,x(.2,.8))),mH(function(n){return l(vD,n.a,n.b)})),l(vg,3,x(0,3.999)),l(vg,2,x(.3,.99)))),mg(x(l(vg,2,x(.1,.4)),mg(x(mg(x(l(vg,2,x(-.5,.3)),l(vg,2,x(.1,.25)))),mg(x(l(vg,2,x(-.3,.5)),l(vg,2,x(.1,.25))))))))));return l(mv,function(n){var t=n.a,r=n.c,o=e(n.b);return o.$?e7(o.a):tt(y(t,o.a,r))},l(so,vL,t(n)))},v1=t(function(n,e){return{bF:n(fB(e)),c9:n(fE(e)),at:n(fj(e))}}),v3=function(n){return l(v1,dg,n)},v2=t(function(n,e){var t=n.dQ,r=n.em,o=n.el;return{bF:t.bF+e.bF*o.bF+e.c9*r.bF,c9:t.c9+e.bF*o.c9+e.c9*r.c9,at:t.at+e.bF*o.at+e.c9*r.at}}),v5=function(n){return n.dQ},v4=function(n){return n.el},v9=function(n){return n.em},v6=r(function(n,e,t){return tN({dQ:f(dI,n,e,v5(t)),el:f(dq,n,e,v4(t)),em:f(dq,n,e,v9(t))})}),v7=t(function(n,e){return{bF:e.bF+n.bF,c9:e.c9+n.c9,at:e.at+n.at}}),v8=t(function(n,e){return tN({dQ:l(v7,n,v5(e)),el:v4(e),em:v9(e)})}),gn=t(function(n,e){return{bF:n*e.bF,c9:n*e.c9,at:n*e.at}}),ge=r(function(n,e,t){return l(v8,l(gn,e,n),t)}),gt=tN({dQ:f6,el:f7,em:sI}),gr=t(function(n,e){return l(mH,function(e){var t,r=e.b,o=e.c,a=f(v6,l(dR,f6,{bF:_(t=e.a),c9:B(t),at:0}),r,gt);return f(ge,f7,-l(rd,0,o8(l(tQ,function(n){return n.bF},l(tQ,v3,l(tQ,v2(a),l(tQ,vK,M([n.cz.dh,n.cz.ea])))))))+o,a)},l(vh,y(l(vg,2,x(2.827433388230814,1.5707963267948966)),l(vg,2,x(.2,1.5707963267948966)),l(vg,2,x(.1,.3))),e))}),go=t(function(n,e){return{bF:n.c9*e.at-n.at*e.c9,c9:n.at*e.bF-n.bF*e.at,at:n.bF*e.c9-n.c9*e.bF}}),ga=function(n){return l(go,v4(n),v9(n))},gi=t(function(n,e){return f(ge,ga(e),n,e)}),gc=t(function(n,e){return{bF:n(e.bF),c9:n(e.c9),at:n(e.at)}}),gu=r(function(n,e,t){return t>.5?{bF:e.bF+(1-t)*(n.bF-e.bF),c9:e.c9+(1-t)*(n.c9-e.c9),at:e.at+(1-t)*(n.at-e.at)}:{bF:n.bF+t*(e.bF-n.bF),c9:n.c9+t*(e.c9-n.c9),at:n.at+t*(e.at-n.at)}}),gl=t(function(n,e){return f(gu,n.a,n.b,e)}),gf=t(function(n,e){return l(vD,e.bF*n,e.c9*n)}),gs=gf(-1),gd=t(function(n,e){return l(vO,gs(n),e)}),gp=t(function(n,e){return{bF:e.bF+n.bF,c9:e.c9+n.c9,at:e.at+n.at}}),gm=t(function(n,e){return{bF:n*e.bF,c9:n*e.c9,at:n*e.at}}),gv=t(function(n,e){var t=l(dj,n,e);return t.$?ta:to(l(dR,n,t.a))}),gg=r(function(n,e,t){return{bF:t.bF+e*n.bF,c9:t.c9+e*n.c9,at:t.at+e*n.at}}),gh=l(dR,f6,dS),gb=M([t(function(n,e){var r=l(mv,function(n){var e=n.b,r=n.c;return l(lO,function(n){var o=n.a,a=n.b,i=n.c,c=t(function(n,e){return v3(l(v2,l(gi,n,a),e))});return y(o,f(vk,a,{dh:l(c,0,e.cz.dh),di:l(c,0,e.cz.di),ea:l(c,0,e.cz.ea),eb:l(c,0,e.cz.eb)},l(tQ,vb(c(.001)),e.f0)),r+i)},l(so,vL,l(gr,e,n.a)))},v0(n));if(r.$)return y(n,w(e,{e_:e7(r.a)}),0);var o=r.a,a=o.c;return y(o.a,w(e,{e_:tt(o.b)}),a)}),t(function(n,e){return y(n,w(e,{eA:l(lO,function(n){var e=l(vN,gp,l(vw,s$,l(vw,gm(.3),x(l(sw,n.cz.di,n.cz.eb),l(sw,n.cz.di,n.cz.dh))))),t=l(gn,db(e),ga(n.iw));return l(lr,f(ln,0,-.3,0),l(lr,n.cz.di,l(gc,dg,l(gp,e,t))))},e.e_)}),0)}),t(function(n,e){return l(vM,function(n){return w(e,{fS:f(lg,t(function(n,e){var t=n.b,r=n.c;return f(ln,n.a,e.c9-t*_(r),e.at+t*B(r))}),n,l(lO,l(cy,function(n){return n.cz},function(n){return n.dh}),e.e_))})},l(vh,y(l(vg,2,x(.03,.3)),l(vg,2,x(.2,.8)),l(vg,2,x(.5235987755982988,1.5707963267948966))),n))}),t(function(n,e){return l(vM,function(n){return w(e,{fQ:s(f1,r(function(n,e,t){var r,o,a=n.a,i=n.b,c=v3(l(gl,x(e.cz.ea,t),.2)),u=e.cz.dh,s=u.bF*a,d=(o=l(vw,function(n){return l(vD,n.at,n.c9)},x(u,c)),l(gf,i,0>(r=l(gd,o.a,o.b)).c9+r.bF?l(gf,-1,r):r));return f(ln,s,u.c9+d.c9,u.at+d.bF)}),n,e.e_,e.fS)})},l(mg,x(l(vg,2,x(.1,.9)),l(vg,2,x(.2,1.5))),n))}),t(function(n,e){return l(vM,function(n){return w(e,{fP:f(lg,t(function(n,e){return f(ln,e.bF,e.c9-n,e.at)}),n,e.fS)})},f(vg,2,x(.08,.2),n))}),t(function(n,e){return l(vM,function(n){return w(e,{eB:f(lg,t(function(n,e){return f(ln,e.bF*n.a,e.c9-n.b,e.at)}),n,e.fP)})},l(mg,x(l(vg,2,x(.5,1)),l(vg,2,x(.05,.2))),n))}),t(function(n,e){return l(vM,function(n){return w(e,{eI:f(lg,t(function(n,e){var t=n.b,r=e.ea.at-n.c;return f(ln,n.a,l(tP,e.eb.c9,e.ea.c9)+t,r)}),n,l(lO,function(n){return n.cz},e.e_))})},l(vh,y(l(vg,2,x(.03,.2)),l(vg,2,x(.05,.23)),l(vg,2,x(.1,.4))),n))}),t(function(n,e){return l(vM,function(n){var r=sa(l(lO,so(se("allSetStructurePoints returning empty list")),l(lO,uc(function(n){return n.at}),sr(e))));return w(e,{eu:f(lg,t(function(n,e){return n.at-e}),r,n)})},f(vg,2,x(.1,.3),n))}),t(function(n,e){return y(n,w(e,{eH:f(lg,t(function(n,e){return w(n,{at:e})}),e.eI,e.eu)}),0)}),t(function(n,e){return l(vM,function(n){return w(e,{cB:s(f1,r(function(n,e,t){return f(ln,e.bF*n.a,e.c9+n.b,t)}),n,l(lO,l(cy,function(n){return n.cz},function(n){return n.eb}),e.e_),e.eu)})},l(mg,x(l(vg,2,x(.8,1.4)),l(vg,2,x(-.15,.15))),n))}),t(function(n,e){return l(vM,function(n){return w(e,{e$:d(fk,o(function(n,e,t,r){return f(ln,e.bF+n.a,t.c9+(e.c9-t.c9)*n.b,r)}),n,e.eA,e.cB,e.eu)})},l(mg,x(l(vg,2,x(0,.3)),l(vg,2,x(.6,1.3))),n))}),t(function(n,e){return l(vM,function(n){return w(e,{fb:s(f1,r(function(n,e,t){var r=n.b,o=n.c,a=v3(f(gu,e,t,n.a));return w(a,{bF:e.bF*r,c9:a.c9-o})}),n,e.eA,e.fP)})},l(vh,y(l(vg,2,x(0,.4)),l(vg,2,x(.5,1)),l(vg,2,x(.15,.2))),n))}),t(function(n,e){return l(vM,function(n){return w(e,{cA:d(fk,o(function(n,e,t,r){var o=n.b;return f(ln,e.bF*n.a,l(oX,e.c9,t.c9)-o,r)}),n,e.e$,e.fb,e.eu)})},l(mg,x(l(vg,2,x(.3,.9)),l(vg,2,x(.1,.4))),n))}),t(function(n,e){return l(vM,function(n){var t=r(function(n,e,t){return sa(l(lO,l(cy,sy,so(se("Triangle cross product was a zero vector"))),s(f1,r(function(n,e,t){return l(sx,l(sw,e,n),l(sw,e,t))}),n,e,t)))}),o=f1(r(function(n,e,t){return l(le,1/3,l(lr,t,l(lr,n,e)))})),a=function(){if(1===n.$){var r=n.a;return x(y(e7(r),e7(r),e7(r)),e7(r))}var a=n.a,i=l(lO,l(cy,function(n){return n.cz},function(n){return n.eb}),e.e_),c=f(o,i,e.cB,e.e$),u=f(o,i,e.eI,e.cB),s=e.eI;return a?x(y(u,c,e.cB),l(lO,l(dq,gh,sb(90)),sa(l(lO,so(se("baseOption 2 and 3 coincide")),f(lg,dj,l(lO,fz,u),l(lO,fz,c)))))):x(y(s,u,e.eH),f(t,e.eI,e.cB,e.eH))}(),i=a.a,c=i.a,u=i.b,d=i.c,p=a.b;return w(e,{eM:d,eN:u,eO:c,eP:s(f1,r(function(n,e,t){return v3(f(gu,t,l(si,n,e),.5))}),c,u,d),eS:p})},l(mR,1,n))}),t(function(n,e){return l(vM,function(n){return w(e,{eV:sa(d(fk,o(function(n,e,t,r){var o=n.a,a=n.b,i=n.c,c=l(gv,t,r),u=db(l(lo,r,t))*o,s=l(le,.5,l(lr,t,r)),d=l(so,se("earAttach points coincide"),l(om,function(n){return f(dq,gh,-a,f(dq,n,i,e))},c));return l(lO,function(n){return v3(f(gg,n,u,s))},d)}),n,e.eS,e.eO,e.eN))})},l(vh,y(l(vg,2,x(1,3)),l(vg,1,x(0,.5235987755982988)),l(vg,1,x(0,.4487989505128276))),n))})]),gx=function(n){var e,r=f(tu,t(function(n,e){var t=e.c,r=l(n,e.a,e.b);return y(r.a,r.b,l(o$,t,M([r.c+l(rd,0,vz(t))])))}),y(n,vS,C),gb),o=r.b,a=r.c,i=(e=r.a,f(tu,t(function(n,e){var t=e.c,r=l(n,e.a,e.b);return y(r.a,r.b,l(o$,t,M([r.c+l(rd,0,vz(t))])))}),y(e,ml,C),v$)),c=i.a,u=i.b,s=i.c,d=P(a,l(tQ,N(l(rd,0,vz(a))),s)),p=tA(mj(c));return y(l(mC,p,mj(n)),x(p,d),l(mc,o,u))},gy=function(n){var e=gx(n).c;return{dt:n,cR:0,b_:1,dL:e,dO:e}},gw=t(function(n,e){return n(e)}),gP=function(n){var e=l(gw,l(ma,4,l(mn,gy,mi)),n),t=e.a,r=e.b;return{ds:l(um,0,0),du:tN(0),dv:tN(0),a7:t,cS:l(um,0,0),bu:tN(0),b4:r}},gC=function(n){var e=p9(l(p4,0,1013904223));return p9(l(p4,e.a+n>>>0,e.b))},gT=n_(C),gL=a(function(n,e,t,r,o){return{a4:r,ba:t,aY:e,aF:o,bf:n}}),gM=function(n){return n.b&&(""!==n.a||n.b.b)?l(L,n.a,gM(n.b)):C},gF=t(function(n,e){return to(1===e.$?M([n]):l(L,n,e.a))}),g$=function(n){try{return to(decodeURIComponent(n))}catch(n){return ta}},gz=function(n){if(-1===n.$&&-1===n.d.$&&-1===n.e.$){if(-1!==n.e.d.$||n.e.d.a){var e=n.d,t=n.e;return i=t.b,c=t.c,r=t.d,f=t.e,d(r7,1,n.b,n.c,d(r7,0,e.b,e.c,e.d,e.e),d(r7,0,i,c,r,f))}var r,o=n.d,a=n.e,i=a.b,c=a.c,u=(r=a.d).d,l=r.e,f=a.e;return d(r7,0,r.b,r.c,d(r7,1,n.b,n.c,d(r7,0,o.b,o.c,o.d,o.e),u),d(r7,1,i,c,l,f))}return n},gS=function(n){if(-1===n.$&&-1===n.d.$&&-1===n.e.$){if(-1!==n.d.d.$||n.d.d.a){var e=n.d,t=n.e;return l=t.b,f=t.c,s=t.d,p=t.e,d(r7,1,r=n.b,o=n.c,d(r7,0,e.b,e.c,e.d,c=e.e),d(r7,0,l,f,s,p))}var r=n.b,o=n.c,a=n.d,i=a.d,c=a.e,u=n.e,l=u.b,f=u.c,s=u.d,p=u.e;return d(r7,0,a.b,a.c,d(r7,1,i.b,i.c,i.d,i.e),d(r7,1,r,o,c,d(r7,0,l,f,s,p)))}return n},gD=c(function(n,e,t,r,o,a,i){if(-1!==a.$||a.a){for(;;){if(-1===i.$&&1===i.a){if(-1===i.d.$){if(1===i.d.a)return gS(e);break}return gS(e)}break}return e}return d(r7,t,a.b,a.c,a.d,d(r7,0,r,o,a.e,i))}),gN=function(n){if(-1===n.$&&-1===n.d.$){var e=n.a,t=n.b,r=n.c,o=n.d,a=o.d,i=n.e;if(1===o.a&&(-1!==a.$||a.a)){var c=gz(n);if(-1===c.$){var u=c.e;return d(r8,c.a,c.b,c.c,gN(c.d),u)}return r3}return d(r7,e,t,r,gN(o),i)}return r3},gk=t(function(n,e){if(-2===e.$)return r3;var t=e.a,r=e.b,o=e.c,a=e.d,i=e.e;if(0>h(n,r)){if(-1===a.$&&1===a.a){var c=a.d;if(-1!==c.$||c.a){var u=gz(e);if(-1===u.$){var f=u.e;return d(r8,u.a,u.b,u.c,l(gk,n,u.d),f)}return r3}}return d(r7,t,r,o,l(gk,n,a),i)}return l(gV,n,m(gD,n,e,t,r,o,a,i))}),gV=t(function(n,e){if(-1===e.$){var t=e.a,r=e.b,o=e.c,a=e.d,i=e.e;if(v(n,r)){var c=function(n){for(;;){if(-1!==n.$||-1!==n.d.$)return n;n=n.d}}(i);return -1===c.$?d(r8,t,c.b,c.c,a,gN(i)):r3}return d(r8,t,r,o,a,l(gk,n,i))}return r3}),gA=t(function(n,e){var t=l(gk,n,e);return -1!==t.$||t.a?t:d(r7,1,t.b,t.c,t.d,t.e)}),g_=r(function(n,e,t){var r=e(l(or,n,t));return r.$?l(gA,n,t):f(oe,n,r.a,t)}),gB=t(function(n,e){var t=l(tc,"=",n);if(t.b&&t.b.b&&!t.b.b.b){var r=t.b.a,o=g$(t.a);if(1===o.$)return e;var a=o.a,i=g$(r);return 1===i.$?e:f(g_,a,gF(i.a),e)}return e}),gE=t(function(n,e){var t,r;return function(n){for(;;){if(n.b){var e=n.a,t=e.aY;if(t.b&&(""!==t.a||t.b.b)){n=n.b;continue}return to(e.aF)}return ta}}(n(d(gL,C,gM((r=l(tc,"/",e.ie)).b&&""===r.a?r.b:r),1===(t=e.ih).$?r3:f(tY,gB,r3,l(tc,"&",t.a)),e.hr,tN)))}),gj=t(function(n,e){return d(gL,e.bf,e.aY,e.ba,e.a4,n(e.aF))}),gq=t(function(n,e){return function(t){var r=t.bf,o=t.aY,a=t.ba,i=t.a4;return l(tQ,gj(t.aF),e(d(gL,r,o,a,i,n)))}}),gI=function(n){return function(e){var t=e.bf,r=e.aY,o=e.ba,a=e.a4,i=e.aF;if(r.b){var c=r.a,u=r.b;return v(c,n)?M([d(gL,l(L,c,t),u,o,a,i)]):C}return C}},gR=t(function(n,e){return function(t){return l(oS,e,n(t))}}),gH=t(function(n,e){return function(n){var t=n.bf,r=n.aY,o=n.ba,a=n.a4,i=n.aF;if(r.b){var c=r.a,u=r.b,f=e(c);if(f.$)return C;var s=f.a;return M([d(gL,l(L,c,t),u,o,a,i(s))])}return C}}),gO=l(gH,"STRING",to),gW=(pR=M([l(gq,uw,l(gR,gI("projects"),l(gq,to,gO))),l(gq,uw(ta),gI("projects")),l(gq,u2,function(n){return M([n])})]),function(n){return l(oS,function(e){return e(n)},pR)}),gU=function(n){return l(rd,u2,l(gE,gW,n))},gG=(nD[pH="scrollToProjectId"]&&D(3),nD[pH]={e:nH,u:nh,a:function(n){var e=[],t=nD[n].u,o=ny(function(n){var e=setTimeout(function(){n(nx(0))},0);return function(){clearTimeout(e)}});return nD[n].b=o,nD[n].c=r(function(n,r){for(;r.b;r=r.b)for(var a=e,i=t(r.a),c=0;a.length>c;c++)a[c](i);return o}),{subscribe:function(n){e.push(n)},unsubscribe:function(n){var t=(e=e.slice()).indexOf(n);0>t||e.splice(t,1)}}}},nA(pH)),gY=o(function(n,e,t,r){var o=gU(t);return x(p1({ck:e,aw:ta,bK:ta,bV:r,cT:gP(gC(e)),f3:o,f7:!1,b9:e,c8:n}),n_(M([rg,p2,o.$||o.a.$?gT:gG(o.a.a)])))}),gQ={$:0},gX=r(function(n,e,t){for(;;){if(!t.b)return ta;var r=t.b;if(e(t.a))return to(n);n+=1,t=r}})(0),gJ=function(n){return 1===n.$},gZ=function(n){var e;return l(ue,cX(n.aw),l(uo,(e=n.aj).aa,l(rd,tl(e.aj),l(gX,gJ,e.aj)))).c9},gK=t(function(n,e){return{aj:l(tQ,to,e),aa:n}}),g0=r(function(n,e,t){return{ht:t,cG:n,b6:e}}),g1=t(function(n,e){return{$:1,a:n,b:e}}),g3=t(function(n,e){return l(um,n.bF+e.bF,n.c9+e.c9)}),g2=r(function(n,e,t){return function(r){var o=e(r),a=o.a,i=t(o.b),c=i.b;return x(l(n,a,i.a),c)}}),g5=t(function(n,e){return f(g2,t(function(n,e){return x(n,e)}),n,e)}),g4={$:0},g9=t(function(n,e){return f(g0,l(ue,n,e),g4,c8(e))}),g6=o(function(n,e,t,r){var o,a=l(ue,cX(n),e);return t?(o=l(g9,cX(n),e),function(n){return x(o,n)}):l(mn,function(n){return f(g0,a,n,c8(e))},l(mn,function(n){return l(g1,n,r)},l(g5,l(mn,function(n){return l(g3,a,n)},f(g2,um,l(p7,-200,200),l(p7,600,1200))),l(p7,-10,10))))}),g7=a(function(n,e,t,r,o){var a=l(gw,s(g6,n,o,t,e),r);return x(a.b,a.a)}),g8=r(function(n,e,r){var o=f(tu,t(function(e,t){var r=t.b,o=l(n,t.a,e);return x(o.a,l(L,o.b,r))}),x(e,C),r);return x(o.a,tp(o.b))}),hn=t(function(n,e){var t=I((n.c8.c9+n.c8.e3)/cC(n)),r=1+I(n.$9.ja/cP(n)),o=gC(e),a=f(g8,f(g7,n,e,!0),o,l(tQ,uo(r),l(ts,0,r*t-1))),i=a.a;return{aw:n,aj:l(gK,r,a.b),bZ:i,gj:ta}}),he=t(function(n,e){var t;return(t=l(vp,l(un,n,e),n.aj)).$?ta:t.a}),ht=r(function(n,e,t){for(;;){if(0>=e)return n;n=l(L,t,n),e-=1}}),hr=t(function(n,e){return f(ht,C,n,e)}),ho=t(function(n,e){return h(tl(e),n)>-1?e:l(o$,e,l(hr,n-tl(e),ta))}),ha=r(function(n,e,t){if(0>n)return t;var r=l(vd,n,t);if(r.b){var o=r.a,a=r.b;return P(l(c6,n,t),l(L,e(o),a))}return t}),hi=t(function(n,e){return l(ha,n,cU(e))}),hc=r(function(n,e,t){var r=l(un,t,n);return w(t,{aj:f(hi,r,to(e),l(ho,r+1,t.aj))})}),hu=r(function(n,e,t){return l(he,t,n).$?f(hc,n,e,t):t}),hl=function(n){return 1!==n.$},hf=r(function(n,e,r){var o=t(function(e,t){var r=t.a;return x(r-1,f(n,r,e,t.b))});return f(tY,o,x(tl(r)-1,e),r).b}),hs=function(n){return l(hf,r(function(e,t,r){return n(t)?l(L,e,r):r}),C)},hd=r(function(n,e,t){return 0>h(l(ue,cX(n),t).c9,e)}),hp=t(function(n,e){return hl(l(he,n,e))}),hm=t(function(n,e){var t,r,o,a,i,c=e.a,u=e.b,f=(r=(t=x(c,u)).a,i=(a=l(V,2,o=t.b)?x(r,r+1):x(r-1,r)).b,x(x(a.a,o-1),x(i,o-1))),s=f.a,d=f.b;return 0>=u||0>c||h(c,n.aa)>-1||l(hp,n,s)&&l(hp,n,d)}),hv=r(function(n,e,t){var r,o,a=(o=l(rd,0,l(om,r5,l(om,uo(t.aa),l(om,function(n){return tl(r)-n},l(gX,hl,tp(r=t.aj))))))+1,w(t,{aj:l(ho,o*t.aa,t.aj)}));return l(o7,hm(t),l(o7,l(hd,n,e),l(tQ,uo(a.aa),l(hs,gJ,a.aj))))}),hg=t(function(n,e){var t=f(hv,e.aw,e.aw.c8.c9+e.aw.c8.e3,e.aj),r=t.b?l(gw,l(mt,t.a,t.b),e.bZ):x(x(0,0),e.bZ),o=r.a,a=d(g7,e.aw,n,!1,r.b,o),i=a.a;return w(e,{aj:f(hu,o,a.b,e.aj),bZ:i})}),hh=r(function(n,e,r){return f(g8,t(function(n){return x(l(hg,e,n),0)}),r,l(hr,n,0)).a}),hb=t(function(n,e){return 1===n.$?e:e+":"+Z(n.a)}),hx=r(function(n,e,t){return 1===e.$?t:P(t,P(n,e.a))}),hy=t(function(n,e){return function(t){var r=e(t),o=r.b;return n(r.a)(o)}}),hw=r(function(n,e,t){return l(vO,e,l(gf,n,l(gd,e,t)))}),hP=f(g2,um,l(p7,-.3,.3),l(p7,-.2,.4)),hC=t(function(n,e){return I(n/e)}),hT=t(function(n,e){return l(V,60,l(hC,e,1e3))}),hL=l(rh,0,C),hM=t(function(n,e){return w(e,{dt:n,cR:0,b_:0,dL:gx(n).c,dO:f(lh,e.b_,e.dO,e.dL)})}),hF=t(function(n,e){var t=l(gw,mi,e.b4),r=t.a,o=t.b;return w(e,{a7:f(ha,n,function(n){return l(hM,r,n)},e.a7),b4:o})}),h$=t(function(n,e){switch(n.$){case 0:default:return x(e,gT);case 1:return x(w(e,{bu:n.a}),gT);case 6:return x(w(e,{dv:e.bu,cS:l(vD,(r=n.a).h4/r.h3-.5,r.h5/r.h2-.5)}),gT);case 2:return x(l(hF,n.a,w(e,{du:e.bu})),gT);case 3:var r,o=n.a,a=l(hT,hL,e.bu)-l(hT,hL,e.dv)>2?.01:.1;return x(w(e,{ds:f(hw,a,e.ds,e.cS),a7:l(tQ,function(n){var e=n.cR+o/5e3;return w(n,{cR:e,b_:l(oX,1,n.b_+e)})},e.a7)}),gT);case 4:var i=f(g8,t(function(n,e){var t;return x((t=l(gw,l(hy,function(n){return l(mn,function(n){return l(hM,n,e)},l(mt,e.dt,M([n])))},mi),n)).b,t.a)}),e.b4,e.a7),c=i.b,u=l(gw,hP,i.a);return x(w(e,{a7:c,cS:u.a,b4:u.b}),gT)}}),hz=t(function(n,e){switch(n.$){case 0:default:return x(e,gT);case 1:return x(w(e,{c8:r=n.a}),gT);case 2:var t,r,o=n.a;return x(1===o.$?e:w(e,{aw:to(r=o.a),bK:to(function(){var n=e.bK;if(1===n.$)return l(hn,r,e.ck);var t=n.a;return v(r.$9.ja,t.aw.$9.ja)?w(t,{aw:r}):l(hn,r,e.ck)}())}),gT);case 3:return x(e,n_(M([rg,p2])));case 4:return x(e,n_(M([l(ev,e.bV,(a=u=n.a).$?"/":"#projects/"+l(rd,"",l(om,function(n){return"#"+n},a.a))),l(p3,cU(gQ),f(eP,"body-element",0,0))])));case 5:var a,i,c=n.a;return x(e,c.$?(t=c.a,l(rf,tW,ny(function(){try{eb.location=t}catch(n){nO.location.reload(!1)}}))):l(ev,e.bV,f(hx,"#",(i=c.a).hr,f(hx,"?",i.ih,P(l(hb,i.$8,P(i.ig?"https://":"http://",i.hC)),i.ie)))));case 6:var u=gU(n.a);return x(w(e,{aw:ta,f3:u}),u.$||u.a.$?gT:gG(u.a.a));case 7:return x(w(e,{b9:n.a}),gT);case 8:return x(w(e,{ck:n.a}),gT);case 9:var s=n.a;return x(function(){var n=e.bK;if(1===n.$)return e;var t,r=n.a;return w(e,{bK:to(f(hh,(t=e.aw).$?3:h(t.a.c8.c9,gZ(r))>0?15:3,s,r))})}(),p2);case 10:return x(w(e,{f7:n.a}),gT);case 11:var d=l(h$,n.a,e.cT),p=d.b;return x(w(e,{cT:d.a}),l(nB,u5,p))}});pW={Main:{init:(pO={hJ:rx,h8:function(n){return{$:6,a:n}},h9:function(n){return{$:5,a:n}},iH:function(n){return n_(M([l(ph,1e3,rv),pF(px(pr)),f(pJ,1,"resize",l(nr,"target",f(nc,t(function(){return po}),l(nr,"innerWidth",nn),l(nr,"innerHeight",nn)))),l(ph,80,pt),1===n.$?l(nB,u5,n_(M([pF(pM(pZ)),l(ph,2e3,cU(pK)),l(ph,1e3,p0)]))):pb]))},i2:t(function(n,e){if(e.$)return l(ov,p1,l(hz,n,e.a));var t,r,o=e.a;return(r=x((t=function(){switch(n.$){case 1:return w(o,{c8:to(n.a)});case 7:return w(o,{b9:to(n.a)});default:return o}}()).c8,t.b9)).a.$||r.b.$?x(rm(t),gT):s(gY,r.a.a,r.b.a,t.i3,t.bV)}),i6:function(n){return{gM:function(){if(n.$){var e=n.a;return M([f(cl,{ib:M([{$:1,a:{gH:ta,gP:ta,is:ta}}])},M([a6(is),a1(is),iC(e.f7?l(ce,cw(e.c8),l(ct,e.c8,e.aw)):im)]),pn(e))])}return M([l(cf,C,pe)])}(),i_:"Logan Brutsche - Portfolio"}}},pG=(pU={hJ:r(function(n,e,t){return f(pO.hJ,n,rp(e),t)}),h8:l(rs,pO.h8,rp),h9:pO.h9,iH:pO.iH,i2:pO.i2,i6:pO.i6}).h8,pY=pU.h9,pQ=function(){pQ.a(pG(em()))},es({d6:function(n){return pQ.a=n,eb.addEventListener("popstate",pQ),0>eb.navigator.userAgent.indexOf("Trident")||eb.addEventListener("hashchange",pQ),t(function(e,t){if(!(t.ctrlKey||t.metaKey||t.shiftKey||t.button>=1||e.target||e.hasAttribute("download"))){t.preventDefault();var r=e.href,o=em(),a=tO(r).a;n(pY(a&&o.ig===a.ig&&o.hC===a.hC&&o.$8.a===a.$8.a?{$:0,a:a}:{$:1,a:r}))}})},hJ:function(n){return f(pU.hJ,n,em(),pQ)},i6:pU.i6,i2:pU.i2,iH:pU.iH}))(tS(0))(0)}},n.Elm?function n(e,t){for(var r in t)r in e?"init"==r?D(6):n(e[r],t[r]):e[r]=t[r]}(n.Elm,pW):n.Elm=pW}(n),(0,n.Elm).Main.init({node:document.getElementById("root")}).ports.scrollToProjectId.subscribe(function(n){document.getElementById(n).scrollIntoView()});
//# sourceMappingURL=index.5f71703e.js.map
